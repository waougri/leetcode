[
  {
    "frontendQuestionId": "1",
    "title": "Two Sum",
    "titleSlug": "two-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.39999006173042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "2",
    "title": "Add Two Numbers",
    "titleSlug": "add-two-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.085421178800694,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "3",
    "title": "Longest Substring Without Repeating Characters",
    "titleSlug": "longest-substring-without-repeating-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.69816377561737,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "4",
    "title": "Median of Two Sorted Arrays",
    "titleSlug": "median-of-two-sorted-arrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.90294132058074,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "5",
    "title": "Longest Palindromic Substring",
    "titleSlug": "longest-palindromic-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.55744666331476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "6",
    "title": "Zigzag Conversion",
    "titleSlug": "zigzag-conversion",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.517728302435664,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "7",
    "title": "Reverse Integer",
    "titleSlug": "reverse-integer",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.894815526511927,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "8",
    "title": "String to Integer (atoi)",
    "titleSlug": "string-to-integer-atoi",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 19.893978560006897,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "9",
    "title": "Palindrome Number",
    "titleSlug": "palindrome-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.74519493912941,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "10",
    "title": "Regular Expression Matching",
    "titleSlug": "regular-expression-matching",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.760212944615212,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "11",
    "title": "Container With Most Water",
    "titleSlug": "container-with-most-water",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.81160939801162,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "12",
    "title": "Integer to Roman",
    "titleSlug": "integer-to-roman",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.55580866022243,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "13",
    "title": "Roman to Integer",
    "titleSlug": "roman-to-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.58930352835141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "14",
    "title": "Longest Common Prefix",
    "titleSlug": "longest-common-prefix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 46.307935881677516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "15",
    "title": "3Sum",
    "titleSlug": "3sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.81687361453339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "16",
    "title": "3Sum Closest",
    "titleSlug": "3sum-closest",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.36240451955669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "17",
    "title": "Letter Combinations of a Phone Number",
    "titleSlug": "letter-combinations-of-a-phone-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.63501176848312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "18",
    "title": "4Sum",
    "titleSlug": "4sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.080232628359695,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "19",
    "title": "Remove Nth Node From End of List",
    "titleSlug": "remove-nth-node-from-end-of-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.00589495390623,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "20",
    "title": "Valid Parentheses",
    "titleSlug": "valid-parentheses",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 42.998751840912185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "21",
    "title": "Merge Two Sorted Lists",
    "titleSlug": "merge-two-sorted-lists",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.39147023400733,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "22",
    "title": "Generate Parentheses",
    "titleSlug": "generate-parentheses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.7468407878763,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "23",
    "title": "Merge k Sorted Lists",
    "titleSlug": "merge-k-sorted-lists",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.83492846075677,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "24",
    "title": "Swap Nodes in Pairs",
    "titleSlug": "swap-nodes-in-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.059539384172,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "25",
    "title": "Reverse Nodes in k-Group",
    "titleSlug": "reverse-nodes-in-k-group",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.23720022605127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "26",
    "title": "Remove Duplicates from Sorted Array",
    "titleSlug": "remove-duplicates-from-sorted-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.30652138400935,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "27",
    "title": "Remove Element",
    "titleSlug": "remove-element",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.69902935576519,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "28",
    "title": "Find the Index of the First Occurrence in a String",
    "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.622988926484666,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "29",
    "title": "Divide Two Integers",
    "titleSlug": "divide-two-integers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 18.849332602072085,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "30",
    "title": "Substring with Concatenation of All Words",
    "titleSlug": "substring-with-concatenation-of-all-words",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.381285278205205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "31",
    "title": "Next Permutation",
    "titleSlug": "next-permutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.96175362909719,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "32",
    "title": "Longest Valid Parentheses",
    "titleSlug": "longest-valid-parentheses",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.130119468937814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "33",
    "title": "Search in Rotated Sorted Array",
    "titleSlug": "search-in-rotated-sorted-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.49440114427235,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "34",
    "title": "Find First and Last Position of Element in Sorted Array",
    "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.602192277647944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "35",
    "title": "Search Insert Position",
    "titleSlug": "search-insert-position",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.84852725754645,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "36",
    "title": "Valid Sudoku",
    "titleSlug": "valid-sudoku",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.561370910514455,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "37",
    "title": "Sudoku Solver",
    "titleSlug": "sudoku-solver",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.26642846046295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "38",
    "title": "Count and Say",
    "titleSlug": "count-and-say",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.430537138718236,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "39",
    "title": "Combination Sum",
    "titleSlug": "combination-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.43044042717455,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "40",
    "title": "Combination Sum II",
    "titleSlug": "combination-sum-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.282560681029736,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "41",
    "title": "First Missing Positive",
    "titleSlug": "first-missing-positive",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.68436185399808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "42",
    "title": "Trapping Rain Water",
    "titleSlug": "trapping-rain-water",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.00126992865518,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "43",
    "title": "Multiply Strings",
    "titleSlug": "multiply-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.832239154191605,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "44",
    "title": "Wildcard Matching",
    "titleSlug": "wildcard-matching",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.63720255209617,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "45",
    "title": "Jump Game II",
    "titleSlug": "jump-game-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.97819682963428,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "46",
    "title": "Permutations",
    "titleSlug": "permutations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.17555506468022,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "47",
    "title": "Permutations II",
    "titleSlug": "permutations-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.29242595518628,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "48",
    "title": "Rotate Image",
    "titleSlug": "rotate-image",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.70115748608268,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "49",
    "title": "Group Anagrams",
    "titleSlug": "group-anagrams",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.55416782260214,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "50",
    "title": "Pow(x, n)",
    "titleSlug": "powx-n",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.684901908930925,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "51",
    "title": "N-Queens",
    "titleSlug": "n-queens",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 74.03092165479293,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "52",
    "title": "N-Queens II",
    "titleSlug": "n-queens-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 77.45758244559141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "53",
    "title": "Maximum Subarray",
    "titleSlug": "maximum-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.526555268480834,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "54",
    "title": "Spiral Matrix",
    "titleSlug": "spiral-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.12993282241645,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "55",
    "title": "Jump Game",
    "titleSlug": "jump-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.99217444086212,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "56",
    "title": "Merge Intervals",
    "titleSlug": "merge-intervals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.16352997265593,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "57",
    "title": "Insert Interval",
    "titleSlug": "insert-interval",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.11434976014101,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "58",
    "title": "Length of Last Word",
    "titleSlug": "length-of-last-word",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.295227334079776,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "59",
    "title": "Spiral Matrix II",
    "titleSlug": "spiral-matrix-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.03597132451786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "60",
    "title": "Permutation Sequence",
    "titleSlug": "permutation-sequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.883827001130356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "61",
    "title": "Rotate List",
    "titleSlug": "rotate-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.56726139734205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "62",
    "title": "Unique Paths",
    "titleSlug": "unique-paths",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.15338615249252,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "63",
    "title": "Unique Paths II",
    "titleSlug": "unique-paths-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.6504630329281,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "64",
    "title": "Minimum Path Sum",
    "titleSlug": "minimum-path-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.19028811321037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "65",
    "title": "Valid Number",
    "titleSlug": "valid-number",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.023603729517998,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "66",
    "title": "Plus One",
    "titleSlug": "plus-one",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 48.14337411216199,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "67",
    "title": "Add Binary",
    "titleSlug": "add-binary",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.22704950793922,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "68",
    "title": "Text Justification",
    "titleSlug": "text-justification",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.27547683694657,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "69",
    "title": "Sqrt(x)",
    "titleSlug": "sqrtx",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 40.85080636990247,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "70",
    "title": "Climbing Stairs",
    "titleSlug": "climbing-stairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.71809647668271,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "71",
    "title": "Simplify Path",
    "titleSlug": "simplify-path",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.9580521926596,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "72",
    "title": "Edit Distance",
    "titleSlug": "edit-distance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.48462165560462,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "73",
    "title": "Set Matrix Zeroes",
    "titleSlug": "set-matrix-zeroes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.63035653098117,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "74",
    "title": "Search a 2D Matrix",
    "titleSlug": "search-a-2d-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.95304849883582,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "75",
    "title": "Sort Colors",
    "titleSlug": "sort-colors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.41849216492258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "76",
    "title": "Minimum Window Substring",
    "titleSlug": "minimum-window-substring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.158200142915476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "77",
    "title": "Combinations",
    "titleSlug": "combinations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.56142284020139,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "78",
    "title": "Subsets",
    "titleSlug": "subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.5229940378874,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "79",
    "title": "Word Search",
    "titleSlug": "word-search",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.049726885945645,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "80",
    "title": "Remove Duplicates from Sorted Array II",
    "titleSlug": "remove-duplicates-from-sorted-array-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.615924852921424,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "81",
    "title": "Search in Rotated Sorted Array II",
    "titleSlug": "search-in-rotated-sorted-array-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.27492174407885,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "82",
    "title": "Remove Duplicates from Sorted List II",
    "titleSlug": "remove-duplicates-from-sorted-list-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.60411971671673,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "83",
    "title": "Remove Duplicates from Sorted List",
    "titleSlug": "remove-duplicates-from-sorted-list",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.542608015097336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "84",
    "title": "Largest Rectangle in Histogram",
    "titleSlug": "largest-rectangle-in-histogram",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.40716729434711,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "85",
    "title": "Maximal Rectangle",
    "titleSlug": "maximal-rectangle",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.98228114702211,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "86",
    "title": "Partition List",
    "titleSlug": "partition-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.78254638703231,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "87",
    "title": "Scramble String",
    "titleSlug": "scramble-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.00699983623478,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "88",
    "title": "Merge Sorted Array",
    "titleSlug": "merge-sorted-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.677241672648,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "89",
    "title": "Gray Code",
    "titleSlug": "gray-code",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.8134717456573,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "90",
    "title": "Subsets II",
    "titleSlug": "subsets-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.225034996507134,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "91",
    "title": "Decode Ways",
    "titleSlug": "decode-ways",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.06389272579809,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "92",
    "title": "Reverse Linked List II",
    "titleSlug": "reverse-linked-list-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.256044453675365,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "93",
    "title": "Restore IP Addresses",
    "titleSlug": "restore-ip-addresses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.19212989703607,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "94",
    "title": "Binary Tree Inorder Traversal",
    "titleSlug": "binary-tree-inorder-traversal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.20534936285294,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "95",
    "title": "Unique Binary Search Trees II",
    "titleSlug": "unique-binary-search-trees-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.161903636148715,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "96",
    "title": "Unique Binary Search Trees",
    "titleSlug": "unique-binary-search-trees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.820830419662656,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "97",
    "title": "Interleaving String",
    "titleSlug": "interleaving-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.79487078653385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "98",
    "title": "Validate Binary Search Tree",
    "titleSlug": "validate-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.853385117899585,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "99",
    "title": "Recover Binary Search Tree",
    "titleSlug": "recover-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.62776864754515,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "100",
    "title": "Same Tree",
    "titleSlug": "same-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.91032609281238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "101",
    "title": "Symmetric Tree",
    "titleSlug": "symmetric-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.01444066725653,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "102",
    "title": "Binary Tree Level Order Traversal",
    "titleSlug": "binary-tree-level-order-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.43068049589428,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "103",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "titleSlug": "binary-tree-zigzag-level-order-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.51125857600096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "104",
    "title": "Maximum Depth of Binary Tree",
    "titleSlug": "maximum-depth-of-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.54822830276737,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "105",
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.63549725336809,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "106",
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.12132083466062,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "107",
    "title": "Binary Tree Level Order Traversal II",
    "titleSlug": "binary-tree-level-order-traversal-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.82971644880165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "108",
    "title": "Convert Sorted Array to Binary Search Tree",
    "titleSlug": "convert-sorted-array-to-binary-search-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.66221722310694,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "109",
    "title": "Convert Sorted List to Binary Search Tree",
    "titleSlug": "convert-sorted-list-to-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.2267454339183,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "110",
    "title": "Balanced Binary Tree",
    "titleSlug": "balanced-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.271319683093225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "111",
    "title": "Minimum Depth of Binary Tree",
    "titleSlug": "minimum-depth-of-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.50226922330362,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "112",
    "title": "Path Sum",
    "titleSlug": "path-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.70660389395475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "113",
    "title": "Path Sum II",
    "titleSlug": "path-sum-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.12819833857832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "114",
    "title": "Flatten Binary Tree to Linked List",
    "titleSlug": "flatten-binary-tree-to-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.44636268678433,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "115",
    "title": "Distinct Subsequences",
    "titleSlug": "distinct-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.8325767725741,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "116",
    "title": "Populating Next Right Pointers in Each Node",
    "titleSlug": "populating-next-right-pointers-in-each-node",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.16883964622036,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "117",
    "title": "Populating Next Right Pointers in Each Node II",
    "titleSlug": "populating-next-right-pointers-in-each-node-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.31864485160937,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "118",
    "title": "Pascal's Triangle",
    "titleSlug": "pascals-triangle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.20820533543707,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "119",
    "title": "Pascal's Triangle II",
    "titleSlug": "pascals-triangle-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.53933333964282,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "120",
    "title": "Triangle",
    "titleSlug": "triangle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.82246616941226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "121",
    "title": "Best Time to Buy and Sell Stock",
    "titleSlug": "best-time-to-buy-and-sell-stock",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.828920151549845,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "122",
    "title": "Best Time to Buy and Sell Stock II",
    "titleSlug": "best-time-to-buy-and-sell-stock-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.13426900513066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "123",
    "title": "Best Time to Buy and Sell Stock III",
    "titleSlug": "best-time-to-buy-and-sell-stock-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.27252787148108,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "124",
    "title": "Binary Tree Maximum Path Sum",
    "titleSlug": "binary-tree-maximum-path-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.62242418788806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "125",
    "title": "Valid Palindrome",
    "titleSlug": "valid-palindrome",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.88992009659855,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "126",
    "title": "Word Ladder II",
    "titleSlug": "word-ladder-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.278151593362647,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "127",
    "title": "Word Ladder",
    "titleSlug": "word-ladder",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.90365730881161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "128",
    "title": "Longest Consecutive Sequence",
    "titleSlug": "longest-consecutive-sequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.963551585076694,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "129",
    "title": "Sum Root to Leaf Numbers",
    "titleSlug": "sum-root-to-leaf-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.06200589618363,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "130",
    "title": "Surrounded Regions",
    "titleSlug": "surrounded-regions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.85837871599722,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "131",
    "title": "Palindrome Partitioning",
    "titleSlug": "palindrome-partitioning",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.02693184259134,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "132",
    "title": "Palindrome Partitioning II",
    "titleSlug": "palindrome-partitioning-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.91528978028553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "133",
    "title": "Clone Graph",
    "titleSlug": "clone-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.574786994452126,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "134",
    "title": "Gas Station",
    "titleSlug": "gas-station",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.95763519105545,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "135",
    "title": "Candy",
    "titleSlug": "candy",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.352529682646065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "136",
    "title": "Single Number",
    "titleSlug": "single-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.68850284477713,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "137",
    "title": "Single Number II",
    "titleSlug": "single-number-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.99316834766618,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "138",
    "title": "Copy List with Random Pointer",
    "titleSlug": "copy-list-with-random-pointer",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.520629686195825,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "139",
    "title": "Word Break",
    "titleSlug": "word-break",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.68712153013419,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "140",
    "title": "Word Break II",
    "titleSlug": "word-break-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.323267952048425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "141",
    "title": "Linked List Cycle",
    "titleSlug": "linked-list-cycle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.258019655369814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "142",
    "title": "Linked List Cycle II",
    "titleSlug": "linked-list-cycle-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.181003132763315,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "143",
    "title": "Reorder List",
    "titleSlug": "reorder-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.555118820703115,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "144",
    "title": "Binary Tree Preorder Traversal",
    "titleSlug": "binary-tree-preorder-traversal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.28932921238103,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "145",
    "title": "Binary Tree Postorder Traversal",
    "titleSlug": "binary-tree-postorder-traversal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.7655882328809,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "146",
    "title": "LRU Cache",
    "titleSlug": "lru-cache",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.02936956894603,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "147",
    "title": "Insertion Sort List",
    "titleSlug": "insertion-sort-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.32076823356503,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "148",
    "title": "Sort List",
    "titleSlug": "sort-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.93912758856115,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "149",
    "title": "Max Points on a Line",
    "titleSlug": "max-points-on-a-line",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.556188399481954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "150",
    "title": "Evaluate Reverse Polish Notation",
    "titleSlug": "evaluate-reverse-polish-notation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.834509593630685,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "151",
    "title": "Reverse Words in a String",
    "titleSlug": "reverse-words-in-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.890394433052144,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "152",
    "title": "Maximum Product Subarray",
    "titleSlug": "maximum-product-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.47541649376093,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "153",
    "title": "Find Minimum in Rotated Sorted Array",
    "titleSlug": "find-minimum-in-rotated-sorted-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.25215303350702,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "154",
    "title": "Find Minimum in Rotated Sorted Array II",
    "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.27798046369307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "155",
    "title": "Min Stack",
    "titleSlug": "min-stack",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.07541321238496,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "156",
    "title": "Binary Tree Upside Down",
    "titleSlug": "binary-tree-upside-down",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.86661815392078,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "157",
    "title": "Read N Characters Given Read4",
    "titleSlug": "read-n-characters-given-read4",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 42.36108251455679,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "158",
    "title": "Read N Characters Given read4 II - Call Multiple Times",
    "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 43.06207992260258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "159",
    "title": "Longest Substring with At Most Two Distinct Characters",
    "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.72714194837011,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "160",
    "title": "Intersection of Two Linked Lists",
    "titleSlug": "intersection-of-two-linked-lists",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.21713278377031,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "161",
    "title": "One Edit Distance",
    "titleSlug": "one-edit-distance",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 34.511895720895815,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "162",
    "title": "Find Peak Element",
    "titleSlug": "find-peak-element",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.61362135159452,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "163",
    "title": "Missing Ranges",
    "titleSlug": "missing-ranges",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 35.435305979185216,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "164",
    "title": "Maximum Gap",
    "titleSlug": "maximum-gap",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.38116033794044,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Radix Sort",
        "slug": "radix-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "165",
    "title": "Compare Version Numbers",
    "titleSlug": "compare-version-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.62732810347534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "166",
    "title": "Fraction to Recurring Decimal",
    "titleSlug": "fraction-to-recurring-decimal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.001336726743155,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "167",
    "title": "Two Sum II - Input Array Is Sorted",
    "titleSlug": "two-sum-ii-input-array-is-sorted",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.96314755427691,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "168",
    "title": "Excel Sheet Column Title",
    "titleSlug": "excel-sheet-column-title",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.63163536035887,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "169",
    "title": "Majority Element",
    "titleSlug": "majority-element",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.90551895809553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "170",
    "title": "Two Sum III - Data structure design",
    "titleSlug": "two-sum-iii-data-structure-design",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 38.776802314953116,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "171",
    "title": "Excel Sheet Column Number",
    "titleSlug": "excel-sheet-column-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.47030937806228,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "172",
    "title": "Factorial Trailing Zeroes",
    "titleSlug": "factorial-trailing-zeroes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.462864091619956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "173",
    "title": "Binary Search Tree Iterator",
    "titleSlug": "binary-search-tree-iterator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.58487605202188,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "174",
    "title": "Dungeon Game",
    "titleSlug": "dungeon-game",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.11532293040165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "175",
    "title": "Combine Two Tables",
    "titleSlug": "combine-two-tables",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.58117939390156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "176",
    "title": "Second Highest Salary",
    "titleSlug": "second-highest-salary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.196417691920544,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "177",
    "title": "Nth Highest Salary",
    "titleSlug": "nth-highest-salary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.51959199295018,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "178",
    "title": "Rank Scores",
    "titleSlug": "rank-scores",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.23283414573062,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "179",
    "title": "Largest Number",
    "titleSlug": "largest-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.86339308619628,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "180",
    "title": "Consecutive Numbers",
    "titleSlug": "consecutive-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.9792527003009,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "181",
    "title": "Employees Earning More Than Their Managers",
    "titleSlug": "employees-earning-more-than-their-managers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.14640540069314,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "182",
    "title": "Duplicate Emails",
    "titleSlug": "duplicate-emails",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.91327293294603,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "183",
    "title": "Customers Who Never Order",
    "titleSlug": "customers-who-never-order",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.07443049545827,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "184",
    "title": "Department Highest Salary",
    "titleSlug": "department-highest-salary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.06161315492877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "185",
    "title": "Department Top Three Salaries",
    "titleSlug": "department-top-three-salaries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.83111247926321,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "186",
    "title": "Reverse Words in a String II",
    "titleSlug": "reverse-words-in-a-string-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.29906351726749,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "187",
    "title": "Repeated DNA Sequences",
    "titleSlug": "repeated-dna-sequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.07199147525965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "188",
    "title": "Best Time to Buy and Sell Stock IV",
    "titleSlug": "best-time-to-buy-and-sell-stock-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.45077959924689,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "189",
    "title": "Rotate Array",
    "titleSlug": "rotate-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.792157294534015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "190",
    "title": "Reverse Bits",
    "titleSlug": "reverse-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.56270558674962,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "191",
    "title": "Number of 1 Bits",
    "titleSlug": "number-of-1-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.44641410693171,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "192",
    "title": "Word Frequency",
    "titleSlug": "word-frequency",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.698663386767898,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "193",
    "title": "Valid Phone Numbers",
    "titleSlug": "valid-phone-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 28.151034234591954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "194",
    "title": "Transpose File",
    "titleSlug": "transpose-file",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.355666753314267,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "195",
    "title": "Tenth Line",
    "titleSlug": "tenth-line",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 35.25582483321181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Shell",
        "slug": "shell"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "196",
    "title": "Delete Duplicate Emails",
    "titleSlug": "delete-duplicate-emails",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.0206725804587,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "197",
    "title": "Rising Temperature",
    "titleSlug": "rising-temperature",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.74200940396616,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "198",
    "title": "House Robber",
    "titleSlug": "house-robber",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.624338576989075,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "199",
    "title": "Binary Tree Right Side View",
    "titleSlug": "binary-tree-right-side-view",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.36044943297517,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "200",
    "title": "Number of Islands",
    "titleSlug": "number-of-islands",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.06599927396373,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "201",
    "title": "Bitwise AND of Numbers Range",
    "titleSlug": "bitwise-and-of-numbers-range",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.2063844108268,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "202",
    "title": "Happy Number",
    "titleSlug": "happy-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.669908760576995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "203",
    "title": "Remove Linked List Elements",
    "titleSlug": "remove-linked-list-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.87516617810094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "204",
    "title": "Count Primes",
    "titleSlug": "count-primes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.33502352883684,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "205",
    "title": "Isomorphic Strings",
    "titleSlug": "isomorphic-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.48116242755788,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "206",
    "title": "Reverse Linked List",
    "titleSlug": "reverse-linked-list",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.78072359590243,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "207",
    "title": "Course Schedule",
    "titleSlug": "course-schedule",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.06065147903526,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "208",
    "title": "Implement Trie (Prefix Tree)",
    "titleSlug": "implement-trie-prefix-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.60096188147861,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "209",
    "title": "Minimum Size Subarray Sum",
    "titleSlug": "minimum-size-subarray-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.14033862391854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "210",
    "title": "Course Schedule II",
    "titleSlug": "course-schedule-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.23455504658299,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "211",
    "title": "Design Add and Search Words Data Structure",
    "titleSlug": "design-add-and-search-words-data-structure",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.59762925889072,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "212",
    "title": "Word Search II",
    "titleSlug": "word-search-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.68387333115516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "213",
    "title": "House Robber II",
    "titleSlug": "house-robber-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.1185562136008,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "214",
    "title": "Shortest Palindrome",
    "titleSlug": "shortest-palindrome",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.181550564489186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "215",
    "title": "Kth Largest Element in an Array",
    "titleSlug": "kth-largest-element-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.46503664057937,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "216",
    "title": "Combination Sum III",
    "titleSlug": "combination-sum-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.47305197429273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "217",
    "title": "Contains Duplicate",
    "titleSlug": "contains-duplicate",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.619335565984514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "218",
    "title": "The Skyline Problem",
    "titleSlug": "the-skyline-problem",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.37663679713808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "219",
    "title": "Contains Duplicate II",
    "titleSlug": "contains-duplicate-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.830255928899156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "220",
    "title": "Contains Duplicate III",
    "titleSlug": "contains-duplicate-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.982475206621633,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "221",
    "title": "Maximal Square",
    "titleSlug": "maximal-square",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.40710311369367,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "222",
    "title": "Count Complete Tree Nodes",
    "titleSlug": "count-complete-tree-nodes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.11549402975406,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "223",
    "title": "Rectangle Area",
    "titleSlug": "rectangle-area",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.113212723810776,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "224",
    "title": "Basic Calculator",
    "titleSlug": "basic-calculator",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.17534326609877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "225",
    "title": "Implement Stack using Queues",
    "titleSlug": "implement-stack-using-queues",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.42253576463048,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "226",
    "title": "Invert Binary Tree",
    "titleSlug": "invert-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.43287322605111,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "227",
    "title": "Basic Calculator II",
    "titleSlug": "basic-calculator-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.240638843090125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "228",
    "title": "Summary Ranges",
    "titleSlug": "summary-ranges",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.45148190055171,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "229",
    "title": "Majority Element II",
    "titleSlug": "majority-element-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.1990015489764,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "230",
    "title": "Kth Smallest Element in a BST",
    "titleSlug": "kth-smallest-element-in-a-bst",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.96280379731468,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "231",
    "title": "Power of Two",
    "titleSlug": "power-of-two",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.44938061873709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "232",
    "title": "Implement Queue using Stacks",
    "titleSlug": "implement-queue-using-stacks",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.6569312694123,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "233",
    "title": "Number of Digit One",
    "titleSlug": "number-of-digit-one",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.542849749464814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "234",
    "title": "Palindrome Linked List",
    "titleSlug": "palindrome-linked-list",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.70167576721853,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "235",
    "title": "Lowest Common Ancestor of a Binary Search Tree",
    "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.27307435912975,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "236",
    "title": "Lowest Common Ancestor of a Binary Tree",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.83481590158586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "237",
    "title": "Delete Node in a Linked List",
    "titleSlug": "delete-node-in-a-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.0408427513679,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "238",
    "title": "Product of Array Except Self",
    "titleSlug": "product-of-array-except-self",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.14008619405494,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "239",
    "title": "Sliding Window Maximum",
    "titleSlug": "sliding-window-maximum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.00737604841539,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "240",
    "title": "Search a 2D Matrix II",
    "titleSlug": "search-a-2d-matrix-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.11315709647339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "241",
    "title": "Different Ways to Add Parentheses",
    "titleSlug": "different-ways-to-add-parentheses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.69746809361631,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "242",
    "title": "Valid Anagram",
    "titleSlug": "valid-anagram",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.24458404020378,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "243",
    "title": "Shortest Word Distance",
    "titleSlug": "shortest-word-distance",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 66.07078764541072,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "244",
    "title": "Shortest Word Distance II",
    "titleSlug": "shortest-word-distance-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.34558038535002,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "245",
    "title": "Shortest Word Distance III",
    "titleSlug": "shortest-word-distance-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.23357357007336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "246",
    "title": "Strobogrammatic Number",
    "titleSlug": "strobogrammatic-number",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 47.60313822078521,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "247",
    "title": "Strobogrammatic Number II",
    "titleSlug": "strobogrammatic-number-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.370546884708524,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "248",
    "title": "Strobogrammatic Number III",
    "titleSlug": "strobogrammatic-number-iii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.55173880438311,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "249",
    "title": "Group Shifted Strings",
    "titleSlug": "group-shifted-strings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.57373323842661,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "250",
    "title": "Count Univalue Subtrees",
    "titleSlug": "count-univalue-subtrees",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.301332565205165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "251",
    "title": "Flatten 2D Vector",
    "titleSlug": "flatten-2d-vector",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.32028948085161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "252",
    "title": "Meeting Rooms",
    "titleSlug": "meeting-rooms",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 59.10877873952346,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "253",
    "title": "Meeting Rooms II",
    "titleSlug": "meeting-rooms-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.307643712349886,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "254",
    "title": "Factor Combinations",
    "titleSlug": "factor-combinations",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.36870826843269,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "255",
    "title": "Verify Preorder Sequence in Binary Search Tree",
    "titleSlug": "verify-preorder-sequence-in-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.46844360682955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "256",
    "title": "Paint House",
    "titleSlug": "paint-house",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.96539114429982,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "257",
    "title": "Binary Tree Paths",
    "titleSlug": "binary-tree-paths",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.40308645679185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "258",
    "title": "Add Digits",
    "titleSlug": "add-digits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.2436650002313,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "259",
    "title": "3Sum Smaller",
    "titleSlug": "3sum-smaller",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.0464603452209,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "260",
    "title": "Single Number III",
    "titleSlug": "single-number-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.45626619353742,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "261",
    "title": "Graph Valid Tree",
    "titleSlug": "graph-valid-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.543576999563896,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "262",
    "title": "Trips and Users",
    "titleSlug": "trips-and-users",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.1364614145545,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "263",
    "title": "Ugly Number",
    "titleSlug": "ugly-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 42.67800172886647,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "264",
    "title": "Ugly Number II",
    "titleSlug": "ugly-number-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.348519071204194,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "265",
    "title": "Paint House II",
    "titleSlug": "paint-house-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 56.642723095838996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "266",
    "title": "Palindrome Permutation",
    "titleSlug": "palindrome-permutation",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 68.55284117130395,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "267",
    "title": "Palindrome Permutation II",
    "titleSlug": "palindrome-permutation-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 42.207238013417964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "268",
    "title": "Missing Number",
    "titleSlug": "missing-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.89739808268884,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "269",
    "title": "Alien Dictionary",
    "titleSlug": "alien-dictionary",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 36.856558070624146,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "270",
    "title": "Closest Binary Search Tree Value",
    "titleSlug": "closest-binary-search-tree-value",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 49.47794445437615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "271",
    "title": "Encode and Decode Strings",
    "titleSlug": "encode-and-decode-strings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.362929700216974,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "272",
    "title": "Closest Binary Search Tree Value II",
    "titleSlug": "closest-binary-search-tree-value-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 60.740904297983946,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "273",
    "title": "Integer to English Words",
    "titleSlug": "integer-to-english-words",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.60777891719458,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "274",
    "title": "H-Index",
    "titleSlug": "h-index",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.71522183747864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "275",
    "title": "H-Index II",
    "titleSlug": "h-index-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.052999085497426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "276",
    "title": "Paint Fence",
    "titleSlug": "paint-fence",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.98926080307532,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "277",
    "title": "Find the Celebrity",
    "titleSlug": "find-the-celebrity",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.6273438780208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "278",
    "title": "First Bad Version",
    "titleSlug": "first-bad-version",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 46.34996700934138,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "279",
    "title": "Perfect Squares",
    "titleSlug": "perfect-squares",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.982375011882326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "280",
    "title": "Wiggle Sort",
    "titleSlug": "wiggle-sort",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.32125274125221,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "281",
    "title": "Zigzag Iterator",
    "titleSlug": "zigzag-iterator",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.13148678959303,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "282",
    "title": "Expression Add Operators",
    "titleSlug": "expression-add-operators",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.28097083044805,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "283",
    "title": "Move Zeroes",
    "titleSlug": "move-zeroes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.14113069251627,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "284",
    "title": "Peeking Iterator",
    "titleSlug": "peeking-iterator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.74955980559425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "285",
    "title": "Inorder Successor in BST",
    "titleSlug": "inorder-successor-in-bst",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.97751403188716,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "286",
    "title": "Walls and Gates",
    "titleSlug": "walls-and-gates",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.29357426925728,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "287",
    "title": "Find the Duplicate Number",
    "titleSlug": "find-the-duplicate-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.46555630156397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "288",
    "title": "Unique Word Abbreviation",
    "titleSlug": "unique-word-abbreviation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 27.22816091159266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "289",
    "title": "Game of Life",
    "titleSlug": "game-of-life",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.87841853110119,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "290",
    "title": "Word Pattern",
    "titleSlug": "word-pattern",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.41806812577648,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "291",
    "title": "Word Pattern II",
    "titleSlug": "word-pattern-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.69480346632752,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "292",
    "title": "Nim Game",
    "titleSlug": "nim-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.563001690346304,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "293",
    "title": "Flip Game",
    "titleSlug": "flip-game",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 64.93517294146021,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "294",
    "title": "Flip Game II",
    "titleSlug": "flip-game-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.21866614490162,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "295",
    "title": "Find Median from Data Stream",
    "titleSlug": "find-median-from-data-stream",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.76011014439278,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "296",
    "title": "Best Meeting Point",
    "titleSlug": "best-meeting-point",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 61.235647895024606,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "297",
    "title": "Serialize and Deserialize Binary Tree",
    "titleSlug": "serialize-and-deserialize-binary-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.696085125938104,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "298",
    "title": "Binary Tree Longest Consecutive Sequence",
    "titleSlug": "binary-tree-longest-consecutive-sequence",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.22368281128328,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "299",
    "title": "Bulls and Cows",
    "titleSlug": "bulls-and-cows",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.77070448325233,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "300",
    "title": "Longest Increasing Subsequence",
    "titleSlug": "longest-increasing-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.48292693856938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "301",
    "title": "Remove Invalid Parentheses",
    "titleSlug": "remove-invalid-parentheses",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.48121164013664,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "302",
    "title": "Smallest Rectangle Enclosing Black Pixels",
    "titleSlug": "smallest-rectangle-enclosing-black-pixels",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 60.742879925862866,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "303",
    "title": "Range Sum Query - Immutable",
    "titleSlug": "range-sum-query-immutable",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.94532106282624,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "304",
    "title": "Range Sum Query 2D - Immutable",
    "titleSlug": "range-sum-query-2d-immutable",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.13563319552689,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "305",
    "title": "Number of Islands II",
    "titleSlug": "number-of-islands-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 40.23214268790811,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "306",
    "title": "Additive Number",
    "titleSlug": "additive-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.97939011943345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "307",
    "title": "Range Sum Query - Mutable",
    "titleSlug": "range-sum-query-mutable",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.09085531174209,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "308",
    "title": "Range Sum Query 2D - Mutable",
    "titleSlug": "range-sum-query-2d-mutable",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 45.03905151934387,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "309",
    "title": "Best Time to Buy and Sell Stock with Cooldown",
    "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.15354611665769,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "310",
    "title": "Minimum Height Trees",
    "titleSlug": "minimum-height-trees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.18665318108759,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "311",
    "title": "Sparse Matrix Multiplication",
    "titleSlug": "sparse-matrix-multiplication",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.0660565905571,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "312",
    "title": "Burst Balloons",
    "titleSlug": "burst-balloons",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.25802262653698,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "313",
    "title": "Super Ugly Number",
    "titleSlug": "super-ugly-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.62416245747861,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "314",
    "title": "Binary Tree Vertical Order Traversal",
    "titleSlug": "binary-tree-vertical-order-traversal",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.51656133709739,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "315",
    "title": "Count of Smaller Numbers After Self",
    "titleSlug": "count-of-smaller-numbers-after-self",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.03631519910264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "316",
    "title": "Remove Duplicate Letters",
    "titleSlug": "remove-duplicate-letters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.998164722542086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "317",
    "title": "Shortest Distance from All Buildings",
    "titleSlug": "shortest-distance-from-all-buildings",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 44.668520071194266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "318",
    "title": "Maximum Product of Word Lengths",
    "titleSlug": "maximum-product-of-word-lengths",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.748513905819955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "319",
    "title": "Bulb Switcher",
    "titleSlug": "bulb-switcher",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.87314617087553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "320",
    "title": "Generalized Abbreviation",
    "titleSlug": "generalized-abbreviation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.19753761090395,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "321",
    "title": "Create Maximum Number",
    "titleSlug": "create-maximum-number",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.47134489740177,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "322",
    "title": "Coin Change",
    "titleSlug": "coin-change",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.28003903282057,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "323",
    "title": "Number of Connected Components in an Undirected Graph",
    "titleSlug": "number-of-connected-components-in-an-undirected-graph",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.45916311803555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "324",
    "title": "Wiggle Sort II",
    "titleSlug": "wiggle-sort-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.166858017604284,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "325",
    "title": "Maximum Size Subarray Sum Equals k",
    "titleSlug": "maximum-size-subarray-sum-equals-k",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.696164386141696,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "326",
    "title": "Power of Three",
    "titleSlug": "power-of-three",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.15890430940243,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "327",
    "title": "Count of Range Sum",
    "titleSlug": "count-of-range-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.55750187398903,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "328",
    "title": "Odd Even Linked List",
    "titleSlug": "odd-even-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.11707208708208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "329",
    "title": "Longest Increasing Path in a Matrix",
    "titleSlug": "longest-increasing-path-in-a-matrix",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.82577710704479,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "330",
    "title": "Patching Array",
    "titleSlug": "patching-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.720889618765455,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "331",
    "title": "Verify Preorder Serialization of a Binary Tree",
    "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.557654191442225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "332",
    "title": "Reconstruct Itinerary",
    "titleSlug": "reconstruct-itinerary",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.898515271973636,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Eulerian Circuit",
        "slug": "eulerian-circuit"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "333",
    "title": "Largest BST Subtree",
    "titleSlug": "largest-bst-subtree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 45.69650108552181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "334",
    "title": "Increasing Triplet Subsequence",
    "titleSlug": "increasing-triplet-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.137244153386966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "335",
    "title": "Self Crossing",
    "titleSlug": "self-crossing",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.958612462145545,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "336",
    "title": "Palindrome Pairs",
    "titleSlug": "palindrome-pairs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.57941065846574,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "337",
    "title": "House Robber III",
    "titleSlug": "house-robber-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.231363913504175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "338",
    "title": "Counting Bits",
    "titleSlug": "counting-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.09233892580531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "339",
    "title": "Nested List Weight Sum",
    "titleSlug": "nested-list-weight-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 85.75204181852477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "340",
    "title": "Longest Substring with At Most K Distinct Characters",
    "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.68883872457225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "341",
    "title": "Flatten Nested List Iterator",
    "titleSlug": "flatten-nested-list-iterator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.39955258864877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "342",
    "title": "Power of Four",
    "titleSlug": "power-of-four",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.209301237228146,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "343",
    "title": "Integer Break",
    "titleSlug": "integer-break",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.44879378739899,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "344",
    "title": "Reverse String",
    "titleSlug": "reverse-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.14347798084526,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "345",
    "title": "Reverse Vowels of a String",
    "titleSlug": "reverse-vowels-of-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.43325570831004,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "346",
    "title": "Moving Average from Data Stream",
    "titleSlug": "moving-average-from-data-stream",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.09082304261902,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "347",
    "title": "Top K Frequent Elements",
    "titleSlug": "top-k-frequent-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.92499233980223,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "348",
    "title": "Design Tic-Tac-Toe",
    "titleSlug": "design-tic-tac-toe",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.69248244567259,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "349",
    "title": "Intersection of Two Arrays",
    "titleSlug": "intersection-of-two-arrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.97263002951804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "350",
    "title": "Intersection of Two Arrays II",
    "titleSlug": "intersection-of-two-arrays-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.31497591257266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "351",
    "title": "Android Unlock Patterns",
    "titleSlug": "android-unlock-patterns",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.49461487717739,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "352",
    "title": "Data Stream as Disjoint Intervals",
    "titleSlug": "data-stream-as-disjoint-intervals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.61991002701122,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "353",
    "title": "Design Snake Game",
    "titleSlug": "design-snake-game",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 39.833624054504355,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "354",
    "title": "Russian Doll Envelopes",
    "titleSlug": "russian-doll-envelopes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.49054184343794,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "355",
    "title": "Design Twitter",
    "titleSlug": "design-twitter",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.4814490451769,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "356",
    "title": "Line Reflection",
    "titleSlug": "line-reflection",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 36.09666983212348,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "357",
    "title": "Count Numbers with Unique Digits",
    "titleSlug": "count-numbers-with-unique-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.80682725325967,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "358",
    "title": "Rearrange String k Distance Apart",
    "titleSlug": "rearrange-string-k-distance-apart",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.44168064043498,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "359",
    "title": "Logger Rate Limiter",
    "titleSlug": "logger-rate-limiter",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 76.7006701795672,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "360",
    "title": "Sort Transformed Array",
    "titleSlug": "sort-transformed-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.37262682423796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "361",
    "title": "Bomb Enemy",
    "titleSlug": "bomb-enemy",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.69758899516813,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "362",
    "title": "Design Hit Counter",
    "titleSlug": "design-hit-counter",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.3330485763298,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "363",
    "title": "Max Sum of Rectangle No Larger Than K",
    "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.92949098960817,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "364",
    "title": "Nested List Weight Sum II",
    "titleSlug": "nested-list-weight-sum-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.96247074557004,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "365",
    "title": "Water and Jug Problem",
    "titleSlug": "water-and-jug-problem",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.88178945485621,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "366",
    "title": "Find Leaves of Binary Tree",
    "titleSlug": "find-leaves-of-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.15747360515331,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "367",
    "title": "Valid Perfect Square",
    "titleSlug": "valid-perfect-square",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.421035762933684,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "368",
    "title": "Largest Divisible Subset",
    "titleSlug": "largest-divisible-subset",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.10539708748517,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "369",
    "title": "Plus One Linked List",
    "titleSlug": "plus-one-linked-list",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.19550459563396,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "370",
    "title": "Range Addition",
    "titleSlug": "range-addition",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.50425481916129,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "371",
    "title": "Sum of Two Integers",
    "titleSlug": "sum-of-two-integers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.41549167948108,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "372",
    "title": "Super Pow",
    "titleSlug": "super-pow",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.7754149881321,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "373",
    "title": "Find K Pairs with Smallest Sums",
    "titleSlug": "find-k-pairs-with-smallest-sums",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.01459509161938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "374",
    "title": "Guess Number Higher or Lower",
    "titleSlug": "guess-number-higher-or-lower",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.42837391929507,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "375",
    "title": "Guess Number Higher or Lower II",
    "titleSlug": "guess-number-higher-or-lower-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.783125244793204,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "376",
    "title": "Wiggle Subsequence",
    "titleSlug": "wiggle-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.024609002746786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "377",
    "title": "Combination Sum IV",
    "titleSlug": "combination-sum-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.77754762055043,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "378",
    "title": "Kth Smallest Element in a Sorted Matrix",
    "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.93937182407272,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "379",
    "title": "Design Phone Directory",
    "titleSlug": "design-phone-directory",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.5906248190399,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "380",
    "title": "Insert Delete GetRandom O(1)",
    "titleSlug": "insert-delete-getrandom-o1",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.1176768977713,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "381",
    "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.02412075389867,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "382",
    "title": "Linked List Random Node",
    "titleSlug": "linked-list-random-node",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.16934912653495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "383",
    "title": "Ransom Note",
    "titleSlug": "ransom-note",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.06603714102388,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "384",
    "title": "Shuffle an Array",
    "titleSlug": "shuffle-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.29162963055698,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "385",
    "title": "Mini Parser",
    "titleSlug": "mini-parser",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.989111143090135,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "386",
    "title": "Lexicographical Numbers",
    "titleSlug": "lexicographical-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.10329657726147,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "387",
    "title": "First Unique Character in a String",
    "titleSlug": "first-unique-character-in-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.29619502132833,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "388",
    "title": "Longest Absolute File Path",
    "titleSlug": "longest-absolute-file-path",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.733410391744535,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "389",
    "title": "Find the Difference",
    "titleSlug": "find-the-difference",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.86468792250751,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "390",
    "title": "Elimination Game",
    "titleSlug": "elimination-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.20192176734968,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "391",
    "title": "Perfect Rectangle",
    "titleSlug": "perfect-rectangle",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.08369889104942,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "392",
    "title": "Is Subsequence",
    "titleSlug": "is-subsequence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 48.62957013963843,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "393",
    "title": "UTF-8 Validation",
    "titleSlug": "utf-8-validation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.7171294509557,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "394",
    "title": "Decode String",
    "titleSlug": "decode-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.674193917056776,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "395",
    "title": "Longest Substring with At Least K Repeating Characters",
    "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.685039655892126,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "396",
    "title": "Rotate Function",
    "titleSlug": "rotate-function",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.66592964738322,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "397",
    "title": "Integer Replacement",
    "titleSlug": "integer-replacement",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.81665662909748,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "398",
    "title": "Random Pick Index",
    "titleSlug": "random-pick-index",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.76296828055622,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "399",
    "title": "Evaluate Division",
    "titleSlug": "evaluate-division",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.58040813912803,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "400",
    "title": "Nth Digit",
    "titleSlug": "nth-digit",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.20029725878369,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "401",
    "title": "Binary Watch",
    "titleSlug": "binary-watch",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.307903009117354,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "402",
    "title": "Remove K Digits",
    "titleSlug": "remove-k-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.74389572191788,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "403",
    "title": "Frog Jump",
    "titleSlug": "frog-jump",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.8162619263067,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "404",
    "title": "Sum of Left Leaves",
    "titleSlug": "sum-of-left-leaves",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.0293742326584,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "405",
    "title": "Convert a Number to Hexadecimal",
    "titleSlug": "convert-a-number-to-hexadecimal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.91705347371599,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "406",
    "title": "Queue Reconstruction by Height",
    "titleSlug": "queue-reconstruction-by-height",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.36493998948558,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "407",
    "title": "Trapping Rain Water II",
    "titleSlug": "trapping-rain-water-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.80945670145381,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "408",
    "title": "Valid Word Abbreviation",
    "titleSlug": "valid-word-abbreviation",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 36.9588743403311,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "409",
    "title": "Longest Palindrome",
    "titleSlug": "longest-palindrome",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.66956960315124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "410",
    "title": "Split Array Largest Sum",
    "titleSlug": "split-array-largest-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.05369978124241,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "411",
    "title": "Minimum Unique Word Abbreviation",
    "titleSlug": "minimum-unique-word-abbreviation",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 40.28092079594225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "412",
    "title": "Fizz Buzz",
    "titleSlug": "fizz-buzz",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.82292863172754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "413",
    "title": "Arithmetic Slices",
    "titleSlug": "arithmetic-slices",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.80798341359115,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "414",
    "title": "Third Maximum Number",
    "titleSlug": "third-maximum-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 37.970572555818556,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "415",
    "title": "Add Strings",
    "titleSlug": "add-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.933073569941556,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "416",
    "title": "Partition Equal Subset Sum",
    "titleSlug": "partition-equal-subset-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.87412048583653,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "417",
    "title": "Pacific Atlantic Water Flow",
    "titleSlug": "pacific-atlantic-water-flow",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.0004447131024,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "418",
    "title": "Sentence Screen Fitting",
    "titleSlug": "sentence-screen-fitting",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 36.35539032946342,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "419",
    "title": "Battleships in a Board",
    "titleSlug": "battleships-in-a-board",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.92826938974562,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "420",
    "title": "Strong Password Checker",
    "titleSlug": "strong-password-checker",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 14.954441020219067,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "421",
    "title": "Maximum XOR of Two Numbers in an Array",
    "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.34911322548963,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "422",
    "title": "Valid Word Square",
    "titleSlug": "valid-word-square",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 42.12269658358292,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "423",
    "title": "Reconstruct Original Digits from English",
    "titleSlug": "reconstruct-original-digits-from-english",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.87181371036943,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "424",
    "title": "Longest Repeating Character Replacement",
    "titleSlug": "longest-repeating-character-replacement",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.167937967095206,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "425",
    "title": "Word Squares",
    "titleSlug": "word-squares",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 54.48748307396759,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "426",
    "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
    "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.59690136948402,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "427",
    "title": "Construct Quad Tree",
    "titleSlug": "construct-quad-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.65052649565347,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "428",
    "title": "Serialize and Deserialize N-ary Tree",
    "titleSlug": "serialize-and-deserialize-n-ary-tree",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 68.39833252216603,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "429",
    "title": "N-ary Tree Level Order Traversal",
    "titleSlug": "n-ary-tree-level-order-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.34070340315041,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "430",
    "title": "Flatten a Multilevel Doubly Linked List",
    "titleSlug": "flatten-a-multilevel-doubly-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.903141166860564,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "431",
    "title": "Encode N-ary Tree to Binary Tree",
    "titleSlug": "encode-n-ary-tree-to-binary-tree",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 80.33058398754514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "432",
    "title": "All O`one Data Structure",
    "titleSlug": "all-oone-data-structure",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.06958170642853,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "433",
    "title": "Minimum Genetic Mutation",
    "titleSlug": "minimum-genetic-mutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.94699648214612,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "434",
    "title": "Number of Segments in a String",
    "titleSlug": "number-of-segments-in-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 36.6596952935125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "435",
    "title": "Non-overlapping Intervals",
    "titleSlug": "non-overlapping-intervals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.134675163937295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "436",
    "title": "Find Right Interval",
    "titleSlug": "find-right-interval",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.60232883092687,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "437",
    "title": "Path Sum III",
    "titleSlug": "path-sum-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.161143379888095,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "438",
    "title": "Find All Anagrams in a String",
    "titleSlug": "find-all-anagrams-in-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.69957412753309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "439",
    "title": "Ternary Expression Parser",
    "titleSlug": "ternary-expression-parser",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.21634391428762,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "440",
    "title": "K-th Smallest in Lexicographical Order",
    "titleSlug": "k-th-smallest-in-lexicographical-order",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.9872932351871,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "441",
    "title": "Arranging Coins",
    "titleSlug": "arranging-coins",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.61139465258744,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "442",
    "title": "Find All Duplicates in an Array",
    "titleSlug": "find-all-duplicates-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.59364206140877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "443",
    "title": "String Compression",
    "titleSlug": "string-compression",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.90135642192805,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "444",
    "title": "Sequence Reconstruction",
    "titleSlug": "sequence-reconstruction",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 29.823221458990957,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "445",
    "title": "Add Two Numbers II",
    "titleSlug": "add-two-numbers-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.04106651016239,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "446",
    "title": "Arithmetic Slices II - Subsequence",
    "titleSlug": "arithmetic-slices-ii-subsequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.649334276623065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "447",
    "title": "Number of Boomerangs",
    "titleSlug": "number-of-boomerangs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.76683958720892,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "448",
    "title": "Find All Numbers Disappeared in an Array",
    "titleSlug": "find-all-numbers-disappeared-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.86431897580187,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "449",
    "title": "Serialize and Deserialize BST",
    "titleSlug": "serialize-and-deserialize-bst",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.95505524966944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "450",
    "title": "Delete Node in a BST",
    "titleSlug": "delete-node-in-a-bst",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.633886421768295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "451",
    "title": "Sort Characters By Frequency",
    "titleSlug": "sort-characters-by-frequency",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.72223504895426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "452",
    "title": "Minimum Number of Arrows to Burst Balloons",
    "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.81905913702634,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "453",
    "title": "Minimum Moves to Equal Array Elements",
    "titleSlug": "minimum-moves-to-equal-array-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.15242455021546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "454",
    "title": "4Sum II",
    "titleSlug": "4sum-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.68355004465141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "455",
    "title": "Assign Cookies",
    "titleSlug": "assign-cookies",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.36716298681792,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "456",
    "title": "132 Pattern",
    "titleSlug": "132-pattern",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.27109744475014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "457",
    "title": "Circular Array Loop",
    "titleSlug": "circular-array-loop",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.20219077713477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "458",
    "title": "Poor Pigs",
    "titleSlug": "poor-pigs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.11354122485108,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "459",
    "title": "Repeated Substring Pattern",
    "titleSlug": "repeated-substring-pattern",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.27743384116469,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "460",
    "title": "LFU Cache",
    "titleSlug": "lfu-cache",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.588603670987595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "461",
    "title": "Hamming Distance",
    "titleSlug": "hamming-distance",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.33997924773624,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "462",
    "title": "Minimum Moves to Equal Array Elements II",
    "titleSlug": "minimum-moves-to-equal-array-elements-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.21514510373574,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "463",
    "title": "Island Perimeter",
    "titleSlug": "island-perimeter",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.86402344794936,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "464",
    "title": "Can I Win",
    "titleSlug": "can-i-win",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.70280872974205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "465",
    "title": "Optimal Account Balancing",
    "titleSlug": "optimal-account-balancing",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.10246892543486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "466",
    "title": "Count The Repetitions",
    "titleSlug": "count-the-repetitions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.542986425339365,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "467",
    "title": "Unique Substrings in Wraparound String",
    "titleSlug": "unique-substrings-in-wraparound-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.88343500110623,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "468",
    "title": "Validate IP Address",
    "titleSlug": "validate-ip-address",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.974075335190086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "469",
    "title": "Convex Polygon",
    "titleSlug": "convex-polygon",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.02239014833473,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "470",
    "title": "Implement Rand10() Using Rand7()",
    "titleSlug": "implement-rand10-using-rand7",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.016597137308494,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Rejection Sampling",
        "slug": "rejection-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "471",
    "title": "Encode String with Shortest Length",
    "titleSlug": "encode-string-with-shortest-length",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.50384639837243,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "472",
    "title": "Concatenated Words",
    "titleSlug": "concatenated-words",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.561364779415435,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "473",
    "title": "Matchsticks to Square",
    "titleSlug": "matchsticks-to-square",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.25600998677494,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "474",
    "title": "Ones and Zeroes",
    "titleSlug": "ones-and-zeroes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.31414493992031,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "475",
    "title": "Heaters",
    "titleSlug": "heaters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.642474340137206,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "476",
    "title": "Number Complement",
    "titleSlug": "number-complement",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.39456729556184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "477",
    "title": "Total Hamming Distance",
    "titleSlug": "total-hamming-distance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.1763129165587,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "478",
    "title": "Generate Random Point in a Circle",
    "titleSlug": "generate-random-point-in-a-circle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.77750856725607,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Rejection Sampling",
        "slug": "rejection-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "479",
    "title": "Largest Palindrome Product",
    "titleSlug": "largest-palindrome-product",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.92084682259649,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "480",
    "title": "Sliding Window Median",
    "titleSlug": "sliding-window-median",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.766401976897704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "481",
    "title": "Magical String",
    "titleSlug": "magical-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.07982471991326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "482",
    "title": "License Key Formatting",
    "titleSlug": "license-key-formatting",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.01402003172347,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "483",
    "title": "Smallest Good Base",
    "titleSlug": "smallest-good-base",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.40251376175402,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "484",
    "title": "Find Permutation",
    "titleSlug": "find-permutation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.95413625112334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "485",
    "title": "Max Consecutive Ones",
    "titleSlug": "max-consecutive-ones",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.41569984432227,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "486",
    "title": "Predict the Winner",
    "titleSlug": "predict-the-winner",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.95750387048799,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "487",
    "title": "Max Consecutive Ones II",
    "titleSlug": "max-consecutive-ones-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.72175784837301,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "488",
    "title": "Zuma Game",
    "titleSlug": "zuma-game",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.897024813701723,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "489",
    "title": "Robot Room Cleaner",
    "titleSlug": "robot-room-cleaner",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 77.68809499833459,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "490",
    "title": "The Maze",
    "titleSlug": "the-maze",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.82072742147867,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "491",
    "title": "Non-decreasing Subsequences",
    "titleSlug": "non-decreasing-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.07380371299737,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "492",
    "title": "Construct the Rectangle",
    "titleSlug": "construct-the-rectangle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.740103083243135,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "493",
    "title": "Reverse Pairs",
    "titleSlug": "reverse-pairs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.94870390905834,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "494",
    "title": "Target Sum",
    "titleSlug": "target-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.33086878097105,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "495",
    "title": "Teemo Attacking",
    "titleSlug": "teemo-attacking",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.152111687266526,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "496",
    "title": "Next Greater Element I",
    "titleSlug": "next-greater-element-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.18008106543138,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "497",
    "title": "Random Point in Non-overlapping Rectangles",
    "titleSlug": "random-point-in-non-overlapping-rectangles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.6316658152238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "498",
    "title": "Diagonal Traverse",
    "titleSlug": "diagonal-traverse",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.64072593554297,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "499",
    "title": "The Maze III",
    "titleSlug": "the-maze-iii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.989050291625404,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "500",
    "title": "Keyboard Row",
    "titleSlug": "keyboard-row",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.02010554256309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "501",
    "title": "Find Mode in Binary Search Tree",
    "titleSlug": "find-mode-in-binary-search-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.971053332681734,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "502",
    "title": "IPO",
    "titleSlug": "ipo",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.1646639629094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "503",
    "title": "Next Greater Element II",
    "titleSlug": "next-greater-element-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.27297231193128,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "504",
    "title": "Base 7",
    "titleSlug": "base-7",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.86869733831006,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "505",
    "title": "The Maze II",
    "titleSlug": "the-maze-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.45441973595862,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "506",
    "title": "Relative Ranks",
    "titleSlug": "relative-ranks",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.85855529996356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "507",
    "title": "Perfect Number",
    "titleSlug": "perfect-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 46.50285236243247,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "508",
    "title": "Most Frequent Subtree Sum",
    "titleSlug": "most-frequent-subtree-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.39610824308285,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "509",
    "title": "Fibonacci Number",
    "titleSlug": "fibonacci-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.45060531324134,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "510",
    "title": "Inorder Successor in BST II",
    "titleSlug": "inorder-successor-in-bst-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.060055042264594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "511",
    "title": "Game Play Analysis I",
    "titleSlug": "game-play-analysis-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.98996158242589,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "512",
    "title": "Game Play Analysis II",
    "titleSlug": "game-play-analysis-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 54.25630042727341,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "513",
    "title": "Find Bottom Left Tree Value",
    "titleSlug": "find-bottom-left-tree-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.95256419680696,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "514",
    "title": "Freedom Trail",
    "titleSlug": "freedom-trail",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.05529636410165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "515",
    "title": "Find Largest Value in Each Tree Row",
    "titleSlug": "find-largest-value-in-each-tree-row",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.26879168079574,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "516",
    "title": "Longest Palindromic Subsequence",
    "titleSlug": "longest-palindromic-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.667524328635,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "517",
    "title": "Super Washing Machines",
    "titleSlug": "super-washing-machines",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.06636479411349,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "518",
    "title": "Coin Change II",
    "titleSlug": "coin-change-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.12801863104522,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "519",
    "title": "Random Flip Matrix",
    "titleSlug": "random-flip-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.413421267992106,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Reservoir Sampling",
        "slug": "reservoir-sampling"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "520",
    "title": "Detect Capital",
    "titleSlug": "detect-capital",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.166918024865154,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "521",
    "title": "Longest Uncommon Subsequence I",
    "titleSlug": "longest-uncommon-subsequence-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.62844659259065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "522",
    "title": "Longest Uncommon Subsequence II",
    "titleSlug": "longest-uncommon-subsequence-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.727633435017964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "523",
    "title": "Continuous Subarray Sum",
    "titleSlug": "continuous-subarray-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.043181757177408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "524",
    "title": "Longest Word in Dictionary through Deleting",
    "titleSlug": "longest-word-in-dictionary-through-deleting",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.178861933589516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "525",
    "title": "Contiguous Array",
    "titleSlug": "contiguous-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.951180598546635,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "526",
    "title": "Beautiful Arrangement",
    "titleSlug": "beautiful-arrangement",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.64228745117249,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "527",
    "title": "Word Abbreviation",
    "titleSlug": "word-abbreviation",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 62.47139151663107,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "528",
    "title": "Random Pick with Weight",
    "titleSlug": "random-pick-with-weight",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.60571897587182,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "529",
    "title": "Minesweeper",
    "titleSlug": "minesweeper",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.38712858732865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "530",
    "title": "Minimum Absolute Difference in BST",
    "titleSlug": "minimum-absolute-difference-in-bst",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.00700842170765,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "531",
    "title": "Lonely Pixel I",
    "titleSlug": "lonely-pixel-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.54351914842531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "532",
    "title": "K-diff Pairs in an Array",
    "titleSlug": "k-diff-pairs-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.16822707072413,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "533",
    "title": "Lonely Pixel II",
    "titleSlug": "lonely-pixel-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.72592746257304,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "534",
    "title": "Game Play Analysis III",
    "titleSlug": "game-play-analysis-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.2769996363088,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "535",
    "title": "Encode and Decode TinyURL",
    "titleSlug": "encode-and-decode-tinyurl",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.47480164989892,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "536",
    "title": "Construct Binary Tree from String",
    "titleSlug": "construct-binary-tree-from-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.57590622232842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "537",
    "title": "Complex Number Multiplication",
    "titleSlug": "complex-number-multiplication",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.66653058447302,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "538",
    "title": "Convert BST to Greater Tree",
    "titleSlug": "convert-bst-to-greater-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.94346706155949,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "539",
    "title": "Minimum Time Difference",
    "titleSlug": "minimum-time-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.45673352328599,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "540",
    "title": "Single Element in a Sorted Array",
    "titleSlug": "single-element-in-a-sorted-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.18032796075997,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "541",
    "title": "Reverse String II",
    "titleSlug": "reverse-string-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.73026096681801,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "542",
    "title": "01 Matrix",
    "titleSlug": "01-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.51801258699215,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "543",
    "title": "Diameter of Binary Tree",
    "titleSlug": "diameter-of-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.40048607291669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "544",
    "title": "Output Contest Matches",
    "titleSlug": "output-contest-matches",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.41057435869236,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "545",
    "title": "Boundary of Binary Tree",
    "titleSlug": "boundary-of-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.453560015633265,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "546",
    "title": "Remove Boxes",
    "titleSlug": "remove-boxes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.84633641881124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "547",
    "title": "Number of Provinces",
    "titleSlug": "number-of-provinces",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.43327124956801,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "548",
    "title": "Split Array with Equal Sum",
    "titleSlug": "split-array-with-equal-sum",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.061737141469145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "549",
    "title": "Binary Tree Longest Consecutive Sequence II",
    "titleSlug": "binary-tree-longest-consecutive-sequence-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.57920665058757,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "550",
    "title": "Game Play Analysis IV",
    "titleSlug": "game-play-analysis-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.116277848387135,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "551",
    "title": "Student Attendance Record I",
    "titleSlug": "student-attendance-record-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.76567168873651,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "552",
    "title": "Student Attendance Record II",
    "titleSlug": "student-attendance-record-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.13766197575588,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "553",
    "title": "Optimal Division",
    "titleSlug": "optimal-division",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.238598657303804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "554",
    "title": "Brick Wall",
    "titleSlug": "brick-wall",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.91564700252923,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "555",
    "title": "Split Concatenated Strings",
    "titleSlug": "split-concatenated-strings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 43.46201743462018,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "556",
    "title": "Next Greater Element III",
    "titleSlug": "next-greater-element-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.87004235314199,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "557",
    "title": "Reverse Words in a String III",
    "titleSlug": "reverse-words-in-a-string-iii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.77837399114262,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "558",
    "title": "Logical OR of Two Binary Grids Represented as Quad-Trees",
    "titleSlug": "logical-or-of-two-binary-grids-represented-as-quad-trees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.48568341437061,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "559",
    "title": "Maximum Depth of N-ary Tree",
    "titleSlug": "maximum-depth-of-n-ary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.19481083428323,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "560",
    "title": "Subarray Sum Equals K",
    "titleSlug": "subarray-sum-equals-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.146027554810324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "561",
    "title": "Array Partition",
    "titleSlug": "array-partition",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.97227276802903,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "562",
    "title": "Longest Line of Consecutive One in Matrix",
    "titleSlug": "longest-line-of-consecutive-one-in-matrix",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.53299252106409,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "563",
    "title": "Binary Tree Tilt",
    "titleSlug": "binary-tree-tilt",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.71542925601767,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "564",
    "title": "Find the Closest Palindrome",
    "titleSlug": "find-the-closest-palindrome",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 31.721483975708015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "565",
    "title": "Array Nesting",
    "titleSlug": "array-nesting",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.205210897719404,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "566",
    "title": "Reshape the Matrix",
    "titleSlug": "reshape-the-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.31489396321037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "567",
    "title": "Permutation in String",
    "titleSlug": "permutation-in-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.84257226854181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "568",
    "title": "Maximum Vacation Days",
    "titleSlug": "maximum-vacation-days",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 46.562364288816255,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "569",
    "title": "Median Employee Salary",
    "titleSlug": "median-employee-salary",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 66.11113391623223,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "570",
    "title": "Managers with at Least 5 Direct Reports",
    "titleSlug": "managers-with-at-least-5-direct-reports",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.967533562736975,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "571",
    "title": "Find Median Given Frequency of Numbers",
    "titleSlug": "find-median-given-frequency-of-numbers",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.412849465016514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "572",
    "title": "Subtree of Another Tree",
    "titleSlug": "subtree-of-another-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.61613506456849,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "573",
    "title": "Squirrel Simulation",
    "titleSlug": "squirrel-simulation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.31066087795465,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "574",
    "title": "Winning Candidate",
    "titleSlug": "winning-candidate",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.26883175462336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "575",
    "title": "Distribute Candies",
    "titleSlug": "distribute-candies",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.18596441009494,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "576",
    "title": "Out of Boundary Paths",
    "titleSlug": "out-of-boundary-paths",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.25188836559964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "577",
    "title": "Employee Bonus",
    "titleSlug": "employee-bonus",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.95866101792959,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "578",
    "title": "Get Highest Answer Rate Question",
    "titleSlug": "get-highest-answer-rate-question",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.10917692727604,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "579",
    "title": "Find Cumulative Salary of an Employee",
    "titleSlug": "find-cumulative-salary-of-an-employee",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.176415535797844,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "580",
    "title": "Count Student Number in Departments",
    "titleSlug": "count-student-number-in-departments",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.8300827539507,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "581",
    "title": "Shortest Unsorted Continuous Subarray",
    "titleSlug": "shortest-unsorted-continuous-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.6922562457313,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "582",
    "title": "Kill Process",
    "titleSlug": "kill-process",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.17126474738075,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "583",
    "title": "Delete Operation for Two Strings",
    "titleSlug": "delete-operation-for-two-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.65123100331812,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "584",
    "title": "Find Customer Referee",
    "titleSlug": "find-customer-referee",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.07286239732963,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "585",
    "title": "Investments in 2016",
    "titleSlug": "investments-in-2016",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.40977968983934,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "586",
    "title": "Customer Placing the Largest Number of Orders",
    "titleSlug": "customer-placing-the-largest-number-of-orders",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.97937470612144,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "587",
    "title": "Erect the Fence",
    "titleSlug": "erect-the-fence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.44466644284861,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "588",
    "title": "Design In-Memory File System",
    "titleSlug": "design-in-memory-file-system",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 48.26803940580429,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "589",
    "title": "N-ary Tree Preorder Traversal",
    "titleSlug": "n-ary-tree-preorder-traversal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.43533671206539,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "590",
    "title": "N-ary Tree Postorder Traversal",
    "titleSlug": "n-ary-tree-postorder-traversal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.82664705445129,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "591",
    "title": "Tag Validator",
    "titleSlug": "tag-validator",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.68745423735905,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "592",
    "title": "Fraction Addition and Subtraction",
    "titleSlug": "fraction-addition-and-subtraction",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.27248648595425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "593",
    "title": "Valid Square",
    "titleSlug": "valid-square",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.55800500256588,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "594",
    "title": "Longest Harmonious Subsequence",
    "titleSlug": "longest-harmonious-subsequence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.97413507078765,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "595",
    "title": "Big Countries",
    "titleSlug": "big-countries",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.32895273769098,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "596",
    "title": "Classes With at Least 5 Students",
    "titleSlug": "classes-with-at-least-5-students",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.985111493566066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "597",
    "title": "Friend Requests I: Overall Acceptance Rate",
    "titleSlug": "friend-requests-i-overall-acceptance-rate",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 41.23776970314291,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "598",
    "title": "Range Addition II",
    "titleSlug": "range-addition-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.7264231412817,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "599",
    "title": "Minimum Index Sum of Two Lists",
    "titleSlug": "minimum-index-sum-of-two-lists",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.72367885751161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "600",
    "title": "Non-negative Integers without Consecutive Ones",
    "titleSlug": "non-negative-integers-without-consecutive-ones",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.88324028158269,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "601",
    "title": "Human Traffic of Stadium",
    "titleSlug": "human-traffic-of-stadium",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.976978878547385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "602",
    "title": "Friend Requests II: Who Has the Most Friends",
    "titleSlug": "friend-requests-ii-who-has-the-most-friends",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.693112776236525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "603",
    "title": "Consecutive Available Seats",
    "titleSlug": "consecutive-available-seats",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 65.18692813884593,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "604",
    "title": "Design Compressed String Iterator",
    "titleSlug": "design-compressed-string-iterator",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 40.250179302198035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "605",
    "title": "Can Place Flowers",
    "titleSlug": "can-place-flowers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 28.962269553775293,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "606",
    "title": "Construct String from Binary Tree",
    "titleSlug": "construct-string-from-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.36368174245821,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "607",
    "title": "Sales Person",
    "titleSlug": "sales-person",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.91810205406021,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "608",
    "title": "Tree Node",
    "titleSlug": "tree-node",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.39343598620748,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "609",
    "title": "Find Duplicate File in System",
    "titleSlug": "find-duplicate-file-in-system",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.57061647905192,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "610",
    "title": "Triangle Judgement",
    "titleSlug": "triangle-judgement",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.22335394688979,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "611",
    "title": "Valid Triangle Number",
    "titleSlug": "valid-triangle-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.314465367221175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "612",
    "title": "Shortest Distance in a Plane",
    "titleSlug": "shortest-distance-in-a-plane",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.17890409533226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "613",
    "title": "Shortest Distance in a Line",
    "titleSlug": "shortest-distance-in-a-line",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 79.83567071986324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "614",
    "title": "Second Degree Follower",
    "titleSlug": "second-degree-follower",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.385337912214666,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "615",
    "title": "Average Salary: Departments VS Company",
    "titleSlug": "average-salary-departments-vs-company",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 56.77508967823718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "616",
    "title": "Add Bold Tag in String",
    "titleSlug": "add-bold-tag-in-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.160331238152246,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "617",
    "title": "Merge Two Binary Trees",
    "titleSlug": "merge-two-binary-trees",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.84735179795051,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "618",
    "title": "Students Report By Geography",
    "titleSlug": "students-report-by-geography",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 63.66354124201658,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "619",
    "title": "Biggest Single Number",
    "titleSlug": "biggest-single-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.39845942429514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "620",
    "title": "Not Boring Movies",
    "titleSlug": "not-boring-movies",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.046588464793,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "621",
    "title": "Task Scheduler",
    "titleSlug": "task-scheduler",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.132072528702246,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "622",
    "title": "Design Circular Queue",
    "titleSlug": "design-circular-queue",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.13354654218595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "623",
    "title": "Add One Row to Tree",
    "titleSlug": "add-one-row-to-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.07390895988158,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "624",
    "title": "Maximum Distance in Arrays",
    "titleSlug": "maximum-distance-in-arrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.62422916715147,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "625",
    "title": "Minimum Factorization",
    "titleSlug": "minimum-factorization",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 33.86355303607186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "626",
    "title": "Exchange Seats",
    "titleSlug": "exchange-seats",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.2927691667553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "627",
    "title": "Swap Salary",
    "titleSlug": "swap-salary",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.28713386330897,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "628",
    "title": "Maximum Product of Three Numbers",
    "titleSlug": "maximum-product-of-three-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.4770623548234,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "629",
    "title": "K Inverse Pairs Array",
    "titleSlug": "k-inverse-pairs-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.96329808250189,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "630",
    "title": "Course Schedule III",
    "titleSlug": "course-schedule-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.97424802409086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "631",
    "title": "Design Excel Sum Formula",
    "titleSlug": "design-excel-sum-formula",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 40.804672104029116,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "632",
    "title": "Smallest Range Covering Elements from K Lists",
    "titleSlug": "smallest-range-covering-elements-from-k-lists",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.88630287252539,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "633",
    "title": "Sum of Square Numbers",
    "titleSlug": "sum-of-square-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.56920386179747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "634",
    "title": "Find the Derangement of An Array",
    "titleSlug": "find-the-derangement-of-an-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.73576372233263,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "635",
    "title": "Design Log Storage System",
    "titleSlug": "design-log-storage-system",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.151145863036724,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "636",
    "title": "Exclusive Time of Functions",
    "titleSlug": "exclusive-time-of-functions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.26759413510442,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "637",
    "title": "Average of Levels in Binary Tree",
    "titleSlug": "average-of-levels-in-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.4488268335879,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "638",
    "title": "Shopping Offers",
    "titleSlug": "shopping-offers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.08183179020901,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "639",
    "title": "Decode Ways II",
    "titleSlug": "decode-ways-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 31.46796431467964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "640",
    "title": "Solve the Equation",
    "titleSlug": "solve-the-equation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.01367172456289,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "641",
    "title": "Design Circular Deque",
    "titleSlug": "design-circular-deque",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.34940798998586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "642",
    "title": "Design Search Autocomplete System",
    "titleSlug": "design-search-autocomplete-system",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.53099295403048,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "643",
    "title": "Maximum Average Subarray I",
    "titleSlug": "maximum-average-subarray-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 46.16448345789445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "644",
    "title": "Maximum Average Subarray II",
    "titleSlug": "maximum-average-subarray-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 37.5694026356278,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "645",
    "title": "Set Mismatch",
    "titleSlug": "set-mismatch",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.30278790947245,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "646",
    "title": "Maximum Length of Pair Chain",
    "titleSlug": "maximum-length-of-pair-chain",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.24373642892935,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "647",
    "title": "Palindromic Substrings",
    "titleSlug": "palindromic-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.13126813573808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "648",
    "title": "Replace Words",
    "titleSlug": "replace-words",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.49600648584118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "649",
    "title": "Dota2 Senate",
    "titleSlug": "dota2-senate",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.32571534315653,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "650",
    "title": "2 Keys Keyboard",
    "titleSlug": "2-keys-keyboard",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.21715292249677,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "651",
    "title": "4 Keys Keyboard",
    "titleSlug": "4-keys-keyboard",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.913722421623824,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "652",
    "title": "Find Duplicate Subtrees",
    "titleSlug": "find-duplicate-subtrees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.34655380798334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "653",
    "title": "Two Sum IV - Input is a BST",
    "titleSlug": "two-sum-iv-input-is-a-bst",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.67519526730052,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "654",
    "title": "Maximum Binary Tree",
    "titleSlug": "maximum-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.14854230682755,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "655",
    "title": "Print Binary Tree",
    "titleSlug": "print-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.98141798295978,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "656",
    "title": "Coin Path",
    "titleSlug": "coin-path",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 32.58652291105121,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "657",
    "title": "Robot Return to Origin",
    "titleSlug": "robot-return-to-origin",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.30625931666435,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "658",
    "title": "Find K Closest Elements",
    "titleSlug": "find-k-closest-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.08942395037039,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "659",
    "title": "Split Array into Consecutive Subsequences",
    "titleSlug": "split-array-into-consecutive-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.741387037545714,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "660",
    "title": "Remove 9",
    "titleSlug": "remove-9",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.39921842863019,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "661",
    "title": "Image Smoother",
    "titleSlug": "image-smoother",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.72496949687792,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "662",
    "title": "Maximum Width of Binary Tree",
    "titleSlug": "maximum-width-of-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.74809614578393,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "663",
    "title": "Equal Tree Partition",
    "titleSlug": "equal-tree-partition",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 42.25642579171813,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "664",
    "title": "Strange Printer",
    "titleSlug": "strange-printer",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.765455337419496,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "665",
    "title": "Non-decreasing Array",
    "titleSlug": "non-decreasing-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.196294018213127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "666",
    "title": "Path Sum IV",
    "titleSlug": "path-sum-iv",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.74759501050984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "667",
    "title": "Beautiful Arrangement II",
    "titleSlug": "beautiful-arrangement-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.647122468957704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "668",
    "title": "Kth Smallest Number in Multiplication Table",
    "titleSlug": "kth-smallest-number-in-multiplication-table",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.30520773566438,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "669",
    "title": "Trim a Binary Search Tree",
    "titleSlug": "trim-a-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.4271826386094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "670",
    "title": "Maximum Swap",
    "titleSlug": "maximum-swap",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.88281709057332,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "671",
    "title": "Second Minimum Node In a Binary Tree",
    "titleSlug": "second-minimum-node-in-a-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.619653458867575,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "672",
    "title": "Bulb Switcher II",
    "titleSlug": "bulb-switcher-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.757439977419864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "673",
    "title": "Number of Longest Increasing Subsequence",
    "titleSlug": "number-of-longest-increasing-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.70615491772641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "674",
    "title": "Longest Continuous Increasing Subsequence",
    "titleSlug": "longest-continuous-increasing-subsequence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.44173511171846,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "675",
    "title": "Cut Off Trees for Golf Event",
    "titleSlug": "cut-off-trees-for-golf-event",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.71731523698441,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "676",
    "title": "Implement Magic Dictionary",
    "titleSlug": "implement-magic-dictionary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.00713835817762,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "677",
    "title": "Map Sum Pairs",
    "titleSlug": "map-sum-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.93981274325226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "678",
    "title": "Valid Parenthesis String",
    "titleSlug": "valid-parenthesis-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.42366883261713,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "679",
    "title": "24 Game",
    "titleSlug": "24-game",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.16970371501938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "680",
    "title": "Valid Palindrome II",
    "titleSlug": "valid-palindrome-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.508497637442225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "681",
    "title": "Next Closest Time",
    "titleSlug": "next-closest-time",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 46.94890723416641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "682",
    "title": "Baseball Game",
    "titleSlug": "baseball-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.49665893591127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "683",
    "title": "K Empty Slots",
    "titleSlug": "k-empty-slots",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 37.88436057933933,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "684",
    "title": "Redundant Connection",
    "titleSlug": "redundant-connection",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.845703125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "685",
    "title": "Redundant Connection II",
    "titleSlug": "redundant-connection-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.53168253758139,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "686",
    "title": "Repeated String Match",
    "titleSlug": "repeated-string-match",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.65581050952023,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "687",
    "title": "Longest Univalue Path",
    "titleSlug": "longest-univalue-path",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.05415453199486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "688",
    "title": "Knight Probability in Chessboard",
    "titleSlug": "knight-probability-in-chessboard",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.74244068056211,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "689",
    "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
    "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.57198702421807,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "690",
    "title": "Employee Importance",
    "titleSlug": "employee-importance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.82341388997202,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "691",
    "title": "Stickers to Spell Word",
    "titleSlug": "stickers-to-spell-word",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.323185420141044,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "692",
    "title": "Top K Frequent Words",
    "titleSlug": "top-k-frequent-words",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.67089002636534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "693",
    "title": "Binary Number with Alternating Bits",
    "titleSlug": "binary-number-with-alternating-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.73641656011094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "694",
    "title": "Number of Distinct Islands",
    "titleSlug": "number-of-distinct-islands",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.50333491316671,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "695",
    "title": "Max Area of Island",
    "titleSlug": "max-area-of-island",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.47691187832262,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "696",
    "title": "Count Binary Substrings",
    "titleSlug": "count-binary-substrings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.13842005828616,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "697",
    "title": "Degree of an Array",
    "titleSlug": "degree-of-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.73050528591062,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "698",
    "title": "Partition to K Equal Sum Subsets",
    "titleSlug": "partition-to-k-equal-sum-subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.23722394332273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "699",
    "title": "Falling Squares",
    "titleSlug": "falling-squares",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.75558659217877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "700",
    "title": "Search in a Binary Search Tree",
    "titleSlug": "search-in-a-binary-search-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.16826789901856,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "701",
    "title": "Insert into a Binary Search Tree",
    "titleSlug": "insert-into-a-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.33642266644337,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "702",
    "title": "Search in a Sorted Array of Unknown Size",
    "titleSlug": "search-in-a-sorted-array-of-unknown-size",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.94378178394541,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "703",
    "title": "Kth Largest Element in a Stream",
    "titleSlug": "kth-largest-element-in-a-stream",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.30676816687928,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "704",
    "title": "Binary Search",
    "titleSlug": "binary-search",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.04523944299001,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "705",
    "title": "Design HashSet",
    "titleSlug": "design-hashset",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.37634861928214,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "706",
    "title": "Design HashMap",
    "titleSlug": "design-hashmap",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.09295873452416,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "707",
    "title": "Design Linked List",
    "titleSlug": "design-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.441537319355206,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "708",
    "title": "Insert into a Sorted Circular Linked List",
    "titleSlug": "insert-into-a-sorted-circular-linked-list",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 38.36268820488456,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "709",
    "title": "To Lower Case",
    "titleSlug": "to-lower-case",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.43079494940541,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "710",
    "title": "Random Pick with Blacklist",
    "titleSlug": "random-pick-with-blacklist",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.22704565030146,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "711",
    "title": "Number of Distinct Islands II",
    "titleSlug": "number-of-distinct-islands-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 55.060096153846146,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "712",
    "title": "Minimum ASCII Delete Sum for Two Strings",
    "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.03035789960319,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "713",
    "title": "Subarray Product Less Than K",
    "titleSlug": "subarray-product-less-than-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.33139057145944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "714",
    "title": "Best Time to Buy and Sell Stock with Transaction Fee",
    "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.21251897901685,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "715",
    "title": "Range Module",
    "titleSlug": "range-module",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.33861041379869,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "716",
    "title": "Max Stack",
    "titleSlug": "max-stack",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.658253901438165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "717",
    "title": "1-bit and 2-bit Characters",
    "titleSlug": "1-bit-and-2-bit-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.257570459075026,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "718",
    "title": "Maximum Length of Repeated Subarray",
    "titleSlug": "maximum-length-of-repeated-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.13907173912724,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "719",
    "title": "Find K-th Smallest Pair Distance",
    "titleSlug": "find-k-th-smallest-pair-distance",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.035405591117865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "720",
    "title": "Longest Word in Dictionary",
    "titleSlug": "longest-word-in-dictionary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.918880816830935,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "721",
    "title": "Accounts Merge",
    "titleSlug": "accounts-merge",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.30896246489063,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "722",
    "title": "Remove Comments",
    "titleSlug": "remove-comments",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.678410744048485,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "723",
    "title": "Candy Crush",
    "titleSlug": "candy-crush",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.34303828917946,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "724",
    "title": "Find Pivot Index",
    "titleSlug": "find-pivot-index",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.2841181126053,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "725",
    "title": "Split Linked List in Parts",
    "titleSlug": "split-linked-list-in-parts",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.35375581471533,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "726",
    "title": "Number of Atoms",
    "titleSlug": "number-of-atoms",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.02174612737372,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "727",
    "title": "Minimum Window Subsequence",
    "titleSlug": "minimum-window-subsequence",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 43.63505083438351,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "728",
    "title": "Self Dividing Numbers",
    "titleSlug": "self-dividing-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.93371367646782,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "729",
    "title": "My Calendar I",
    "titleSlug": "my-calendar-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.18971847739365,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "730",
    "title": "Count Different Palindromic Subsequences",
    "titleSlug": "count-different-palindromic-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.99535571725345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "731",
    "title": "My Calendar II",
    "titleSlug": "my-calendar-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.51186510078356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "732",
    "title": "My Calendar III",
    "titleSlug": "my-calendar-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 70.94495958476386,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "733",
    "title": "Flood Fill",
    "titleSlug": "flood-fill",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.23230891388802,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "734",
    "title": "Sentence Similarity",
    "titleSlug": "sentence-similarity",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 44.673821280420775,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "735",
    "title": "Asteroid Collision",
    "titleSlug": "asteroid-collision",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.10439578971401,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "736",
    "title": "Parse Lisp Expression",
    "titleSlug": "parse-lisp-expression",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.13539336034347,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "737",
    "title": "Sentence Similarity II",
    "titleSlug": "sentence-similarity-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.836166955000095,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "738",
    "title": "Monotone Increasing Digits",
    "titleSlug": "monotone-increasing-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.06147207049521,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "739",
    "title": "Daily Temperatures",
    "titleSlug": "daily-temperatures",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.77438294295838,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "740",
    "title": "Delete and Earn",
    "titleSlug": "delete-and-earn",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.905001888171356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "741",
    "title": "Cherry Pickup",
    "titleSlug": "cherry-pickup",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.47640232325615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "742",
    "title": "Closest Leaf in a Binary Tree",
    "titleSlug": "closest-leaf-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.256829452066796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "743",
    "title": "Network Delay Time",
    "titleSlug": "network-delay-time",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.7087001989828,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "744",
    "title": "Find Smallest Letter Greater Than Target",
    "titleSlug": "find-smallest-letter-greater-than-target",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.69047619047619,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "745",
    "title": "Prefix and Suffix Search",
    "titleSlug": "prefix-and-suffix-search",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.585192825146244,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "746",
    "title": "Min Cost Climbing Stairs",
    "titleSlug": "min-cost-climbing-stairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.63549759722251,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "747",
    "title": "Largest Number At Least Twice of Others",
    "titleSlug": "largest-number-at-least-twice-of-others",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.38840272471056,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "748",
    "title": "Shortest Completing Word",
    "titleSlug": "shortest-completing-word",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.01736193042808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "749",
    "title": "Contain Virus",
    "titleSlug": "contain-virus",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.42108650875386,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "750",
    "title": "Number Of Corner Rectangles",
    "titleSlug": "number-of-corner-rectangles",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.84211954678065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "751",
    "title": "IP to CIDR",
    "titleSlug": "ip-to-cidr",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.38696156822286,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "752",
    "title": "Open the Lock",
    "titleSlug": "open-the-lock",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.90474659047385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "753",
    "title": "Cracking the Safe",
    "titleSlug": "cracking-the-safe",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.145309757246224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Eulerian Circuit",
        "slug": "eulerian-circuit"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "754",
    "title": "Reach a Number",
    "titleSlug": "reach-a-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.23505030584617,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "755",
    "title": "Pour Water",
    "titleSlug": "pour-water",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.31376630134313,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "756",
    "title": "Pyramid Transition Matrix",
    "titleSlug": "pyramid-transition-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.13690837797537,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "757",
    "title": "Set Intersection Size At Least Two",
    "titleSlug": "set-intersection-size-at-least-two",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.6588405185702,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "758",
    "title": "Bold Words in String",
    "titleSlug": "bold-words-in-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.30666769128307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "759",
    "title": "Employee Free Time",
    "titleSlug": "employee-free-time",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 72.63841853407536,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "760",
    "title": "Find Anagram Mappings",
    "titleSlug": "find-anagram-mappings",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 83.95425111428811,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "761",
    "title": "Special Binary String",
    "titleSlug": "special-binary-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.00489955903969,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "762",
    "title": "Prime Number of Set Bits in Binary Representation",
    "titleSlug": "prime-number-of-set-bits-in-binary-representation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.76690715393433,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "763",
    "title": "Partition Labels",
    "titleSlug": "partition-labels",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.66624392973351,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "764",
    "title": "Largest Plus Sign",
    "titleSlug": "largest-plus-sign",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.75268534350476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "765",
    "title": "Couples Holding Hands",
    "titleSlug": "couples-holding-hands",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.79885619799607,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "766",
    "title": "Toeplitz Matrix",
    "titleSlug": "toeplitz-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.44425752470487,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "767",
    "title": "Reorganize String",
    "titleSlug": "reorganize-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.527068207842355,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "768",
    "title": "Max Chunks To Make Sorted II",
    "titleSlug": "max-chunks-to-make-sorted-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.50842240046706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "769",
    "title": "Max Chunks To Make Sorted",
    "titleSlug": "max-chunks-to-make-sorted",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.11493282729054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "770",
    "title": "Basic Calculator IV",
    "titleSlug": "basic-calculator-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.258013454689355,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "771",
    "title": "Jewels and Stones",
    "titleSlug": "jewels-and-stones",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.36567396708234,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "772",
    "title": "Basic Calculator III",
    "titleSlug": "basic-calculator-iii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 52.83478761012289,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "773",
    "title": "Sliding Puzzle",
    "titleSlug": "sliding-puzzle",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 73.33052034902235,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "774",
    "title": "Minimize Max Distance to Gas Station",
    "titleSlug": "minimize-max-distance-to-gas-station",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 53.28941306551184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "775",
    "title": "Global and Local Inversions",
    "titleSlug": "global-and-local-inversions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.531764513625035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "776",
    "title": "Split BST",
    "titleSlug": "split-bst",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 82.35558767996224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "777",
    "title": "Swap Adjacent in LR String",
    "titleSlug": "swap-adjacent-in-lr-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.672276702888944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "778",
    "title": "Swim in Rising Water",
    "titleSlug": "swim-in-rising-water",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 67.19101351831726,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "779",
    "title": "K-th Symbol in Grammar",
    "titleSlug": "k-th-symbol-in-grammar",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.782676956243264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "780",
    "title": "Reaching Points",
    "titleSlug": "reaching-points",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.915708011786776,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "781",
    "title": "Rabbits in Forest",
    "titleSlug": "rabbits-in-forest",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.1069639683309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "782",
    "title": "Transform to Chessboard",
    "titleSlug": "transform-to-chessboard",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.865000372310064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "783",
    "title": "Minimum Distance Between BST Nodes",
    "titleSlug": "minimum-distance-between-bst-nodes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.69996455976459,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "784",
    "title": "Letter Case Permutation",
    "titleSlug": "letter-case-permutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.42803290363022,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "785",
    "title": "Is Graph Bipartite?",
    "titleSlug": "is-graph-bipartite",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.38654542666022,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "786",
    "title": "K-th Smallest Prime Fraction",
    "titleSlug": "k-th-smallest-prime-fraction",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.75147774362547,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "787",
    "title": "Cheapest Flights Within K Stops",
    "titleSlug": "cheapest-flights-within-k-stops",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.89625520432504,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "788",
    "title": "Rotated Digits",
    "titleSlug": "rotated-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.58970438794848,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "789",
    "title": "Escape The Ghosts",
    "titleSlug": "escape-the-ghosts",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.93846180841916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "790",
    "title": "Domino and Tromino Tiling",
    "titleSlug": "domino-and-tromino-tiling",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.685441127203504,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "791",
    "title": "Custom Sort String",
    "titleSlug": "custom-sort-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.18650498505328,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "792",
    "title": "Number of Matching Subsequences",
    "titleSlug": "number-of-matching-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.63466438299358,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "793",
    "title": "Preimage Size of Factorial Zeroes Function",
    "titleSlug": "preimage-size-of-factorial-zeroes-function",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.15478615071283,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "794",
    "title": "Valid Tic-Tac-Toe State",
    "titleSlug": "valid-tic-tac-toe-state",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.67299943965632,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "795",
    "title": "Number of Subarrays with Bounded Maximum",
    "titleSlug": "number-of-subarrays-with-bounded-maximum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.31718910585816,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "796",
    "title": "Rotate String",
    "titleSlug": "rotate-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.55880459770114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "797",
    "title": "All Paths From Source to Target",
    "titleSlug": "all-paths-from-source-to-target",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.31397519122939,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "798",
    "title": "Smallest Rotation with Highest Score",
    "titleSlug": "smallest-rotation-with-highest-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.91761834736085,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "799",
    "title": "Champagne Tower",
    "titleSlug": "champagne-tower",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.434809065243996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "800",
    "title": "Similar RGB Color",
    "titleSlug": "similar-rgb-color",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 67.88239672497208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "801",
    "title": "Minimum Swaps To Make Sequences Increasing",
    "titleSlug": "minimum-swaps-to-make-sequences-increasing",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.05242420925906,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "802",
    "title": "Find Eventual Safe States",
    "titleSlug": "find-eventual-safe-states",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.62885291142325,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "803",
    "title": "Bricks Falling When Hit",
    "titleSlug": "bricks-falling-when-hit",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.319085770059786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "804",
    "title": "Unique Morse Code Words",
    "titleSlug": "unique-morse-code-words",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.3958122829511,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "805",
    "title": "Split Array With Same Average",
    "titleSlug": "split-array-with-same-average",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.329508344069268,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "806",
    "title": "Number of Lines To Write String",
    "titleSlug": "number-of-lines-to-write-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.38812716691855,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "807",
    "title": "Max Increase to Keep City Skyline",
    "titleSlug": "max-increase-to-keep-city-skyline",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.327034469661,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "808",
    "title": "Soup Servings",
    "titleSlug": "soup-servings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.86456628477905,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "809",
    "title": "Expressive Words",
    "titleSlug": "expressive-words",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.530287927750244,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "810",
    "title": "Chalkboard XOR Game",
    "titleSlug": "chalkboard-xor-game",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.17441860465117,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "811",
    "title": "Subdomain Visit Count",
    "titleSlug": "subdomain-visit-count",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.012233603573,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "812",
    "title": "Largest Triangle Area",
    "titleSlug": "largest-triangle-area",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.15060959883195,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "813",
    "title": "Largest Sum of Averages",
    "titleSlug": "largest-sum-of-averages",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.46159946897009,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "814",
    "title": "Binary Tree Pruning",
    "titleSlug": "binary-tree-pruning",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.40154803619058,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "815",
    "title": "Bus Routes",
    "titleSlug": "bus-routes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.97194876073901,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "816",
    "title": "Ambiguous Coordinates",
    "titleSlug": "ambiguous-coordinates",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.223637555245595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "817",
    "title": "Linked List Components",
    "titleSlug": "linked-list-components",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.45177825404194,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "818",
    "title": "Race Car",
    "titleSlug": "race-car",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.33642353930812,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "819",
    "title": "Most Common Word",
    "titleSlug": "most-common-word",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.7862456348663,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "820",
    "title": "Short Encoding of Words",
    "titleSlug": "short-encoding-of-words",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.6609518179131,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "821",
    "title": "Shortest Distance to a Character",
    "titleSlug": "shortest-distance-to-a-character",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.42273257326792,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "822",
    "title": "Card Flipping Game",
    "titleSlug": "card-flipping-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.95593068114552,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "823",
    "title": "Binary Trees With Factors",
    "titleSlug": "binary-trees-with-factors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.98449599279482,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "824",
    "title": "Goat Latin",
    "titleSlug": "goat-latin",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.64019580521258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "825",
    "title": "Friends Of Appropriate Ages",
    "titleSlug": "friends-of-appropriate-ages",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.36502042331972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "826",
    "title": "Most Profit Assigning Work",
    "titleSlug": "most-profit-assigning-work",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.034173068367544,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "827",
    "title": "Making A Large Island",
    "titleSlug": "making-a-large-island",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.72367502269394,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "828",
    "title": "Count Unique Characters of All Substrings of a Given String",
    "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.15869255654936,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "829",
    "title": "Consecutive Numbers Sum",
    "titleSlug": "consecutive-numbers-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.26638000304037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "830",
    "title": "Positions of Large Groups",
    "titleSlug": "positions-of-large-groups",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.344626370489614,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "831",
    "title": "Masking Personal Information",
    "titleSlug": "masking-personal-information",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.954598858677414,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "832",
    "title": "Flipping an Image",
    "titleSlug": "flipping-an-image",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.27061292937465,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "833",
    "title": "Find And Replace in String",
    "titleSlug": "find-and-replace-in-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.13117930129367,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "834",
    "title": "Sum of Distances in Tree",
    "titleSlug": "sum-of-distances-in-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.41473209620351,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "835",
    "title": "Image Overlap",
    "titleSlug": "image-overlap",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.87527479028753,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "836",
    "title": "Rectangle Overlap",
    "titleSlug": "rectangle-overlap",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 46.0283104512261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "837",
    "title": "New 21 Game",
    "titleSlug": "new-21-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.99985360026884,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "838",
    "title": "Push Dominoes",
    "titleSlug": "push-dominoes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.024997612050996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "839",
    "title": "Similar String Groups",
    "titleSlug": "similar-string-groups",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.698473812852015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "840",
    "title": "Magic Squares In Grid",
    "titleSlug": "magic-squares-in-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.53192385066892,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "841",
    "title": "Keys and Rooms",
    "titleSlug": "keys-and-rooms",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.10180120912946,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "842",
    "title": "Split Array into Fibonacci Sequence",
    "titleSlug": "split-array-into-fibonacci-sequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.93446687920652,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "843",
    "title": "Guess the Word",
    "titleSlug": "guess-the-word",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.28880292087764,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "844",
    "title": "Backspace String Compare",
    "titleSlug": "backspace-string-compare",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.600393949342156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "845",
    "title": "Longest Mountain in Array",
    "titleSlug": "longest-mountain-in-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.37036228157312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "846",
    "title": "Hand of Straights",
    "titleSlug": "hand-of-straights",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.51124910450513,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "847",
    "title": "Shortest Path Visiting All Nodes",
    "titleSlug": "shortest-path-visiting-all-nodes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.58730481758307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "848",
    "title": "Shifting Letters",
    "titleSlug": "shifting-letters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.80009166821834,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "849",
    "title": "Maximize Distance to Closest Person",
    "titleSlug": "maximize-distance-to-closest-person",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.311254423073756,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "850",
    "title": "Rectangle Area II",
    "titleSlug": "rectangle-area-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.989058188688475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "851",
    "title": "Loud and Rich",
    "titleSlug": "loud-and-rich",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.5198688877913,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "852",
    "title": "Peak Index in a Mountain Array",
    "titleSlug": "peak-index-in-a-mountain-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.19007932957102,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "853",
    "title": "Car Fleet",
    "titleSlug": "car-fleet",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.06896286368388,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "854",
    "title": "K-Similar Strings",
    "titleSlug": "k-similar-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.280935935741724,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "855",
    "title": "Exam Room",
    "titleSlug": "exam-room",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.05541189283911,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "856",
    "title": "Score of Parentheses",
    "titleSlug": "score-of-parentheses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.584648353789206,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "857",
    "title": "Minimum Cost to Hire K Workers",
    "titleSlug": "minimum-cost-to-hire-k-workers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.545080106643766,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "858",
    "title": "Mirror Reflection",
    "titleSlug": "mirror-reflection",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.94261709234652,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "859",
    "title": "Buddy Strings",
    "titleSlug": "buddy-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 33.75421881423832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "860",
    "title": "Lemonade Change",
    "titleSlug": "lemonade-change",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.66762210502179,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "861",
    "title": "Score After Flipping Matrix",
    "titleSlug": "score-after-flipping-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.25744686128128,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "862",
    "title": "Shortest Subarray with Sum at Least K",
    "titleSlug": "shortest-subarray-with-sum-at-least-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.366785792668345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "863",
    "title": "All Nodes Distance K in Binary Tree",
    "titleSlug": "all-nodes-distance-k-in-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.01032557492523,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "864",
    "title": "Shortest Path to Get All Keys",
    "titleSlug": "shortest-path-to-get-all-keys",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.11332227080583,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "865",
    "title": "Smallest Subtree with all the Deepest Nodes",
    "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.7169111796407,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "866",
    "title": "Prime Palindrome",
    "titleSlug": "prime-palindrome",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.578006204002193,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "867",
    "title": "Transpose Matrix",
    "titleSlug": "transpose-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.03740609694701,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "868",
    "title": "Binary Gap",
    "titleSlug": "binary-gap",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.13856946460922,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "869",
    "title": "Reordered Power of 2",
    "titleSlug": "reordered-power-of-2",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.10915885848267,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "870",
    "title": "Advantage Shuffle",
    "titleSlug": "advantage-shuffle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.80460097748176,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "871",
    "title": "Minimum Number of Refueling Stops",
    "titleSlug": "minimum-number-of-refueling-stops",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.83039135656759,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "872",
    "title": "Leaf-Similar Trees",
    "titleSlug": "leaf-similar-trees",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.14818615618054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "873",
    "title": "Length of Longest Fibonacci Subsequence",
    "titleSlug": "length-of-longest-fibonacci-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.5528807182295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "874",
    "title": "Walking Robot Simulation",
    "titleSlug": "walking-robot-simulation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.35834708649891,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "875",
    "title": "Koko Eating Bananas",
    "titleSlug": "koko-eating-bananas",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.20191275862718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "876",
    "title": "Middle of the Linked List",
    "titleSlug": "middle-of-the-linked-list",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.13386545968096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "877",
    "title": "Stone Game",
    "titleSlug": "stone-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.15503095442207,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "878",
    "title": "Nth Magical Number",
    "titleSlug": "nth-magical-number",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.094306596241246,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "879",
    "title": "Profitable Schemes",
    "titleSlug": "profitable-schemes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.079598496964024,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "880",
    "title": "Decoded String at Index",
    "titleSlug": "decoded-string-at-index",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.80656547829157,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "881",
    "title": "Boats to Save People",
    "titleSlug": "boats-to-save-people",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.82659927852813,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "882",
    "title": "Reachable Nodes In Subdivided Graph",
    "titleSlug": "reachable-nodes-in-subdivided-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 51.24992595225402,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "883",
    "title": "Projection Area of 3D Shapes",
    "titleSlug": "projection-area-of-3d-shapes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.65813082484104,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "884",
    "title": "Uncommon Words from Two Sentences",
    "titleSlug": "uncommon-words-from-two-sentences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.4518828451883,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "885",
    "title": "Spiral Matrix III",
    "titleSlug": "spiral-matrix-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.545679869132,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "886",
    "title": "Possible Bipartition",
    "titleSlug": "possible-bipartition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.90405034734506,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "887",
    "title": "Super Egg Drop",
    "titleSlug": "super-egg-drop",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.28329587344419,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "888",
    "title": "Fair Candy Swap",
    "titleSlug": "fair-candy-swap",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.86417962285738,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "889",
    "title": "Construct Binary Tree from Preorder and Postorder Traversal",
    "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.02968106295168,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "890",
    "title": "Find and Replace Pattern",
    "titleSlug": "find-and-replace-pattern",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.89234767735033,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "891",
    "title": "Sum of Subsequence Widths",
    "titleSlug": "sum-of-subsequence-widths",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.508369683322044,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "892",
    "title": "Surface Area of 3D Shapes",
    "titleSlug": "surface-area-of-3d-shapes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.82483431390109,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "893",
    "title": "Groups of Special-Equivalent Strings",
    "titleSlug": "groups-of-special-equivalent-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.15794908865595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "894",
    "title": "All Possible Full Binary Trees",
    "titleSlug": "all-possible-full-binary-trees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.72947826922461,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "895",
    "title": "Maximum Frequency Stack",
    "titleSlug": "maximum-frequency-stack",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.46487457577798,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "896",
    "title": "Monotonic Array",
    "titleSlug": "monotonic-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.97295778144839,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "897",
    "title": "Increasing Order Search Tree",
    "titleSlug": "increasing-order-search-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.814831002331,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "898",
    "title": "Bitwise ORs of Subarrays",
    "titleSlug": "bitwise-ors-of-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.541143531704066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "899",
    "title": "Orderly Queue",
    "titleSlug": "orderly-queue",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.46063489950753,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "900",
    "title": "RLE Iterator",
    "titleSlug": "rle-iterator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.983255285937275,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "901",
    "title": "Online Stock Span",
    "titleSlug": "online-stock-span",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.15931131375531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "902",
    "title": "Numbers At Most N Given Digit Set",
    "titleSlug": "numbers-at-most-n-given-digit-set",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.86665866435743,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "903",
    "title": "Valid Permutations for DI Sequence",
    "titleSlug": "valid-permutations-for-di-sequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.8354903652574,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "904",
    "title": "Fruit Into Baskets",
    "titleSlug": "fruit-into-baskets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.718655730435465,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "905",
    "title": "Sort Array By Parity",
    "titleSlug": "sort-array-by-parity",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.34988879699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "906",
    "title": "Super Palindromes",
    "titleSlug": "super-palindromes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.63223787167449,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "907",
    "title": "Sum of Subarray Minimums",
    "titleSlug": "sum-of-subarray-minimums",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.98079571116456,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "908",
    "title": "Smallest Range I",
    "titleSlug": "smallest-range-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.4367757218772,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "909",
    "title": "Snakes and Ladders",
    "titleSlug": "snakes-and-ladders",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.96241527162608,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "910",
    "title": "Smallest Range II",
    "titleSlug": "smallest-range-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.43624375766408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "911",
    "title": "Online Election",
    "titleSlug": "online-election",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.30706585799704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "912",
    "title": "Sort an Array",
    "titleSlug": "sort-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.1571775736798,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Bucket Sort",
        "slug": "bucket-sort"
      },
      {
        "name": "Radix Sort",
        "slug": "radix-sort"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "913",
    "title": "Cat and Mouse",
    "titleSlug": "cat-and-mouse",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.05841617334971,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "914",
    "title": "X of a Kind in a Deck of Cards",
    "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 29.935108180105257,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "915",
    "title": "Partition Array into Disjoint Intervals",
    "titleSlug": "partition-array-into-disjoint-intervals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.185727260389804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "916",
    "title": "Word Subsets",
    "titleSlug": "word-subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.83252796096747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "917",
    "title": "Reverse Only Letters",
    "titleSlug": "reverse-only-letters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.46326298634602,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "918",
    "title": "Maximum Sum Circular Subarray",
    "titleSlug": "maximum-sum-circular-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.503817735768315,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "919",
    "title": "Complete Binary Tree Inserter",
    "titleSlug": "complete-binary-tree-inserter",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.7914379802415,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "920",
    "title": "Number of Music Playlists",
    "titleSlug": "number-of-music-playlists",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.9674710288851,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "921",
    "title": "Minimum Add to Make Parentheses Valid",
    "titleSlug": "minimum-add-to-make-parentheses-valid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.49190459402811,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "922",
    "title": "Sort Array By Parity II",
    "titleSlug": "sort-array-by-parity-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.08338103244732,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "923",
    "title": "3Sum With Multiplicity",
    "titleSlug": "3sum-with-multiplicity",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.95521141368676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "924",
    "title": "Minimize Malware Spread",
    "titleSlug": "minimize-malware-spread",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.71393763991441,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "925",
    "title": "Long Pressed Name",
    "titleSlug": "long-pressed-name",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 32.64996852725758,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "926",
    "title": "Flip String to Monotone Increasing",
    "titleSlug": "flip-string-to-monotone-increasing",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.70654741617403,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "927",
    "title": "Three Equal Parts",
    "titleSlug": "three-equal-parts",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.900186228746946,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "928",
    "title": "Minimize Malware Spread II",
    "titleSlug": "minimize-malware-spread-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.15738305841103,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "929",
    "title": "Unique Email Addresses",
    "titleSlug": "unique-email-addresses",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.69423735570297,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "930",
    "title": "Binary Subarrays With Sum",
    "titleSlug": "binary-subarrays-with-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.28664162941374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "931",
    "title": "Minimum Falling Path Sum",
    "titleSlug": "minimum-falling-path-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.88898731120368,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "932",
    "title": "Beautiful Array",
    "titleSlug": "beautiful-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.41822638715114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "933",
    "title": "Number of Recent Calls",
    "titleSlug": "number-of-recent-calls",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.80651182188463,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "934",
    "title": "Shortest Bridge",
    "titleSlug": "shortest-bridge",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.971059775182646,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "935",
    "title": "Knight Dialer",
    "titleSlug": "knight-dialer",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.47636833561849,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "936",
    "title": "Stamping The Sequence",
    "titleSlug": "stamping-the-sequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.02390028018969,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "937",
    "title": "Reorder Data in Log Files",
    "titleSlug": "reorder-data-in-log-files",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.84710700038832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "938",
    "title": "Range Sum of BST",
    "titleSlug": "range-sum-of-bst",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.5198408542193,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "939",
    "title": "Minimum Area Rectangle",
    "titleSlug": "minimum-area-rectangle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.1525226444761,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "940",
    "title": "Distinct Subsequences II",
    "titleSlug": "distinct-subsequences-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.76763006822217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "941",
    "title": "Valid Mountain Array",
    "titleSlug": "valid-mountain-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 34.54582175144696,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "942",
    "title": "DI String Match",
    "titleSlug": "di-string-match",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.49587185852971,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "943",
    "title": "Find the Shortest Superstring",
    "titleSlug": "find-the-shortest-superstring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.66964676544323,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "944",
    "title": "Delete Columns to Make Sorted",
    "titleSlug": "delete-columns-to-make-sorted",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.88781955099577,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "945",
    "title": "Minimum Increment to Make Array Unique",
    "titleSlug": "minimum-increment-to-make-array-unique",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.4571808259063,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "946",
    "title": "Validate Stack Sequences",
    "titleSlug": "validate-stack-sequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.92028921089282,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "947",
    "title": "Most Stones Removed with Same Row or Column",
    "titleSlug": "most-stones-removed-with-same-row-or-column",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.47728207150589,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "948",
    "title": "Bag of Tokens",
    "titleSlug": "bag-of-tokens",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.32388830428511,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "949",
    "title": "Largest Time for Given Digits",
    "titleSlug": "largest-time-for-given-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.67393087833311,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "950",
    "title": "Reveal Cards In Increasing Order",
    "titleSlug": "reveal-cards-in-increasing-order",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.44576697525719,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "951",
    "title": "Flip Equivalent Binary Trees",
    "titleSlug": "flip-equivalent-binary-trees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.63701378405077,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "952",
    "title": "Largest Component Size by Common Factor",
    "titleSlug": "largest-component-size-by-common-factor",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.56493273724578,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "953",
    "title": "Verifying an Alien Dictionary",
    "titleSlug": "verifying-an-alien-dictionary",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.71939681655377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "954",
    "title": "Array of Doubled Pairs",
    "titleSlug": "array-of-doubled-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.55628936490631,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "955",
    "title": "Delete Columns to Make Sorted II",
    "titleSlug": "delete-columns-to-make-sorted-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.94494036226669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "956",
    "title": "Tallest Billboard",
    "titleSlug": "tallest-billboard",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 51.84262061598718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "957",
    "title": "Prison Cells After N Days",
    "titleSlug": "prison-cells-after-n-days",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.01321597839561,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "958",
    "title": "Check Completeness of a Binary Tree",
    "titleSlug": "check-completeness-of-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.73312685134262,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "959",
    "title": "Regions Cut By Slashes",
    "titleSlug": "regions-cut-by-slashes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.61389794617601,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "960",
    "title": "Delete Columns to Make Sorted III",
    "titleSlug": "delete-columns-to-make-sorted-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.26579245157425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "961",
    "title": "N-Repeated Element in Size 2N Array",
    "titleSlug": "n-repeated-element-in-size-2n-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.72580525773371,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "962",
    "title": "Maximum Width Ramp",
    "titleSlug": "maximum-width-ramp",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.77019758738362,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "963",
    "title": "Minimum Area Rectangle II",
    "titleSlug": "minimum-area-rectangle-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.705827158896035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "964",
    "title": "Least Operators to Express Number",
    "titleSlug": "least-operators-to-express-number",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.506093832796644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "965",
    "title": "Univalued Binary Tree",
    "titleSlug": "univalued-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.49232878773944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "966",
    "title": "Vowel Spellchecker",
    "titleSlug": "vowel-spellchecker",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.520155237432725,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "967",
    "title": "Numbers With Same Consecutive Differences",
    "titleSlug": "numbers-with-same-consecutive-differences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.91999045969416,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "968",
    "title": "Binary Tree Cameras",
    "titleSlug": "binary-tree-cameras",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.463107031077925,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "969",
    "title": "Pancake Sorting",
    "titleSlug": "pancake-sorting",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.43539292769397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "970",
    "title": "Powerful Integers",
    "titleSlug": "powerful-integers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.34173027625417,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "971",
    "title": "Flip Binary Tree To Match Preorder Traversal",
    "titleSlug": "flip-binary-tree-to-match-preorder-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.37298402444728,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "972",
    "title": "Equal Rational Numbers",
    "titleSlug": "equal-rational-numbers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.254901960784316,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "973",
    "title": "K Closest Points to Origin",
    "titleSlug": "k-closest-points-to-origin",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.35531325932611,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "974",
    "title": "Subarray Sums Divisible by K",
    "titleSlug": "subarray-sums-divisible-by-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.749546213980736,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "975",
    "title": "Odd Even Jump",
    "titleSlug": "odd-even-jump",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.86050098388555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "976",
    "title": "Largest Perimeter Triangle",
    "titleSlug": "largest-perimeter-triangle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.474788906749446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "977",
    "title": "Squares of a Sorted Array",
    "titleSlug": "squares-of-a-sorted-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.35342756021926,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "978",
    "title": "Longest Turbulent Subarray",
    "titleSlug": "longest-turbulent-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.41275251664508,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "979",
    "title": "Distribute Coins in Binary Tree",
    "titleSlug": "distribute-coins-in-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.21678662666822,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "980",
    "title": "Unique Paths III",
    "titleSlug": "unique-paths-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 82.56609869244892,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "981",
    "title": "Time Based Key-Value Store",
    "titleSlug": "time-based-key-value-store",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.54912226482297,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "982",
    "title": "Triples with Bitwise AND Equal To Zero",
    "titleSlug": "triples-with-bitwise-and-equal-to-zero",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.73210113701262,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "983",
    "title": "Minimum Cost For Tickets",
    "titleSlug": "minimum-cost-for-tickets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.39724674695118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "984",
    "title": "String Without AAA or BBB",
    "titleSlug": "string-without-aaa-or-bbb",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.72959875944951,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "985",
    "title": "Sum of Even Numbers After Queries",
    "titleSlug": "sum-of-even-numbers-after-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.6512058275238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "986",
    "title": "Interval List Intersections",
    "titleSlug": "interval-list-intersections",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.81515230796968,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "987",
    "title": "Vertical Order Traversal of a Binary Tree",
    "titleSlug": "vertical-order-traversal-of-a-binary-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.444594836808655,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "988",
    "title": "Smallest String Starting From Leaf",
    "titleSlug": "smallest-string-starting-from-leaf",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.98179626556372,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "989",
    "title": "Add to Array-Form of Integer",
    "titleSlug": "add-to-array-form-of-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.13813130378063,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "990",
    "title": "Satisfiability of Equality Equations",
    "titleSlug": "satisfiability-of-equality-equations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.312393203039676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "991",
    "title": "Broken Calculator",
    "titleSlug": "broken-calculator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.548470601671205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "992",
    "title": "Subarrays with K Different Integers",
    "titleSlug": "subarrays-with-k-different-integers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.87128611768956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "993",
    "title": "Cousins in Binary Tree",
    "titleSlug": "cousins-in-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.64620631459283,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "994",
    "title": "Rotting Oranges",
    "titleSlug": "rotting-oranges",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.45711259399623,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "995",
    "title": "Minimum Number of K Consecutive Bit Flips",
    "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.23094357306034,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "996",
    "title": "Number of Squareful Arrays",
    "titleSlug": "number-of-squareful-arrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.77024457695964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "997",
    "title": "Find the Town Judge",
    "titleSlug": "find-the-town-judge",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.26070355332196,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "998",
    "title": "Maximum Binary Tree II",
    "titleSlug": "maximum-binary-tree-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.75508617338345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "999",
    "title": "Available Captures for Rook",
    "titleSlug": "available-captures-for-rook",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.73295879498373,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1000",
    "title": "Minimum Cost to Merge Stones",
    "titleSlug": "minimum-cost-to-merge-stones",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.89837758249541,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1001",
    "title": "Grid Illumination",
    "titleSlug": "grid-illumination",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.56098001444739,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1002",
    "title": "Find Common Characters",
    "titleSlug": "find-common-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.58876976194803,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1003",
    "title": "Check If Word Is Valid After Substitutions",
    "titleSlug": "check-if-word-is-valid-after-substitutions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.65959863687998,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1004",
    "title": "Max Consecutive Ones III",
    "titleSlug": "max-consecutive-ones-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.73873621748054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1005",
    "title": "Maximize Sum Of Array After K Negations",
    "titleSlug": "maximize-sum-of-array-after-k-negations",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.9641277973639,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1006",
    "title": "Clumsy Factorial",
    "titleSlug": "clumsy-factorial",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.9366331056819,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1007",
    "title": "Minimum Domino Rotations For Equal Row",
    "titleSlug": "minimum-domino-rotations-for-equal-row",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.50278989913442,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1008",
    "title": "Construct Binary Search Tree from Preorder Traversal",
    "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.7935738815449,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1009",
    "title": "Complement of Base 10 Integer",
    "titleSlug": "complement-of-base-10-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.64654909439435,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1010",
    "title": "Pairs of Songs With Total Durations Divisible by 60",
    "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.34093693237021,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1011",
    "title": "Capacity To Ship Packages Within D Days",
    "titleSlug": "capacity-to-ship-packages-within-d-days",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.93565872570228,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1012",
    "title": "Numbers With Repeated Digits",
    "titleSlug": "numbers-with-repeated-digits",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.42597673068065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1013",
    "title": "Partition Array Into Three Parts With Equal Sum",
    "titleSlug": "partition-array-into-three-parts-with-equal-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 42.25876985885412,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1014",
    "title": "Best Sightseeing Pair",
    "titleSlug": "best-sightseeing-pair",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.61760309504968,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1015",
    "title": "Smallest Integer Divisible by K",
    "titleSlug": "smallest-integer-divisible-by-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.67954928964128,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1016",
    "title": "Binary String With Substrings Representing 1 To N",
    "titleSlug": "binary-string-with-substrings-representing-1-to-n",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.16099790419918,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1017",
    "title": "Convert to Base -2",
    "titleSlug": "convert-to-base-2",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.511470033325686,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1018",
    "title": "Binary Prefix Divisible By 5",
    "titleSlug": "binary-prefix-divisible-by-5",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.2399114358767,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1019",
    "title": "Next Greater Node In Linked List",
    "titleSlug": "next-greater-node-in-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.85155126489676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1020",
    "title": "Number of Enclaves",
    "titleSlug": "number-of-enclaves",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.16151711233505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1021",
    "title": "Remove Outermost Parentheses",
    "titleSlug": "remove-outermost-parentheses",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.35035886530208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1022",
    "title": "Sum of Root To Leaf Binary Numbers",
    "titleSlug": "sum-of-root-to-leaf-binary-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.55230646895917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1023",
    "title": "Camelcase Matching",
    "titleSlug": "camelcase-matching",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.42135740441114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1024",
    "title": "Video Stitching",
    "titleSlug": "video-stitching",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.237211166021105,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1025",
    "title": "Divisor Game",
    "titleSlug": "divisor-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.98345928668046,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1026",
    "title": "Maximum Difference Between Node and Ancestor",
    "titleSlug": "maximum-difference-between-node-and-ancestor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.0830025322663,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1027",
    "title": "Longest Arithmetic Subsequence",
    "titleSlug": "longest-arithmetic-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.66315358441634,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1028",
    "title": "Recover a Tree From Preorder Traversal",
    "titleSlug": "recover-a-tree-from-preorder-traversal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 83.27112370238638,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1029",
    "title": "Two City Scheduling",
    "titleSlug": "two-city-scheduling",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.9750579384339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1030",
    "title": "Matrix Cells in Distance Order",
    "titleSlug": "matrix-cells-in-distance-order",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.36229244027183,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1031",
    "title": "Maximum Sum of Two Non-Overlapping Subarrays",
    "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.52748951859891,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1032",
    "title": "Stream of Characters",
    "titleSlug": "stream-of-characters",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 51.482254271269625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1033",
    "title": "Moving Stones Until Consecutive",
    "titleSlug": "moving-stones-until-consecutive",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.19022052405343,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1034",
    "title": "Coloring A Border",
    "titleSlug": "coloring-a-border",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.36923888437108,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1035",
    "title": "Uncrossed Lines",
    "titleSlug": "uncrossed-lines",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.70874342948663,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1036",
    "title": "Escape a Large Maze",
    "titleSlug": "escape-a-large-maze",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.85012087026592,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1037",
    "title": "Valid Boomerang",
    "titleSlug": "valid-boomerang",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 38.51156351700616,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1038",
    "title": "Binary Search Tree to Greater Sum Tree",
    "titleSlug": "binary-search-tree-to-greater-sum-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 88.32937318118438,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1039",
    "title": "Minimum Score Triangulation of Polygon",
    "titleSlug": "minimum-score-triangulation-of-polygon",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.22782825440218,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1040",
    "title": "Moving Stones Until Consecutive II",
    "titleSlug": "moving-stones-until-consecutive-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.08715998830068,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1041",
    "title": "Robot Bounded In Circle",
    "titleSlug": "robot-bounded-in-circle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.338831895052145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1042",
    "title": "Flower Planting With No Adjacent",
    "titleSlug": "flower-planting-with-no-adjacent",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.91606855452608,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1043",
    "title": "Partition Array for Maximum Sum",
    "titleSlug": "partition-array-for-maximum-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.23263884554409,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1044",
    "title": "Longest Duplicate Substring",
    "titleSlug": "longest-duplicate-substring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.90170360843655,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1045",
    "title": "Customers Who Bought All Products",
    "titleSlug": "customers-who-bought-all-products",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.32562274178439,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1046",
    "title": "Last Stone Weight",
    "titleSlug": "last-stone-weight",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.10913005021253,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1047",
    "title": "Remove All Adjacent Duplicates In String",
    "titleSlug": "remove-all-adjacent-duplicates-in-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.17386091680001,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1048",
    "title": "Longest String Chain",
    "titleSlug": "longest-string-chain",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.485073854442,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1049",
    "title": "Last Stone Weight II",
    "titleSlug": "last-stone-weight-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.46708092555429,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1050",
    "title": "Actors and Directors Who Cooperated At Least Three Times",
    "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.71689896838149,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1051",
    "title": "Height Checker",
    "titleSlug": "height-checker",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.31987763589056,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1052",
    "title": "Grumpy Bookstore Owner",
    "titleSlug": "grumpy-bookstore-owner",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.950000286236055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1053",
    "title": "Previous Permutation With One Swap",
    "titleSlug": "previous-permutation-with-one-swap",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.37526561835954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1054",
    "title": "Distant Barcodes",
    "titleSlug": "distant-barcodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.09180268734782,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1055",
    "title": "Shortest Way to Form String",
    "titleSlug": "shortest-way-to-form-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.42249978315553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1056",
    "title": "Confusing Number",
    "titleSlug": "confusing-number",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 49.31683780317917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1057",
    "title": "Campus Bikes",
    "titleSlug": "campus-bikes",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.05757228280527,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1058",
    "title": "Minimize Rounding Error to Meet Target",
    "titleSlug": "minimize-rounding-error-to-meet-target",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 45.690049482306954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1059",
    "title": "All Paths from Source Lead to Destination",
    "titleSlug": "all-paths-from-source-lead-to-destination",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 37.034549928234576,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1060",
    "title": "Missing Element in Sorted Array",
    "titleSlug": "missing-element-in-sorted-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.338133520751015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1061",
    "title": "Lexicographically Smallest Equivalent String",
    "titleSlug": "lexicographically-smallest-equivalent-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.15580443360223,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1062",
    "title": "Longest Repeating Substring",
    "titleSlug": "longest-repeating-substring",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.26700768416072,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1063",
    "title": "Number of Valid Subarrays",
    "titleSlug": "number-of-valid-subarrays",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 79.41557240614019,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1064",
    "title": "Fixed Point",
    "titleSlug": "fixed-point",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 63.80438510857233,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1065",
    "title": "Index Pairs of a String",
    "titleSlug": "index-pairs-of-a-string",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 68.40739249116213,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1066",
    "title": "Campus Bikes II",
    "titleSlug": "campus-bikes-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.84983286191824,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1067",
    "title": "Digit Count in Range",
    "titleSlug": "digit-count-in-range",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 46.201566154784906,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1068",
    "title": "Product Sales Analysis I",
    "titleSlug": "product-sales-analysis-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.20041539654916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1069",
    "title": "Product Sales Analysis II",
    "titleSlug": "product-sales-analysis-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 82.45202151183423,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1070",
    "title": "Product Sales Analysis III",
    "titleSlug": "product-sales-analysis-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.031784757480956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1071",
    "title": "Greatest Common Divisor of Strings",
    "titleSlug": "greatest-common-divisor-of-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.95950869067724,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1072",
    "title": "Flip Columns For Maximum Number of Equal Rows",
    "titleSlug": "flip-columns-for-maximum-number-of-equal-rows",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.56777596856455,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1073",
    "title": "Adding Two Negabinary Numbers",
    "titleSlug": "adding-two-negabinary-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.29199949738821,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1074",
    "title": "Number of Submatrices That Sum to Target",
    "titleSlug": "number-of-submatrices-that-sum-to-target",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 74.5466947841478,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1075",
    "title": "Project Employees I",
    "titleSlug": "project-employees-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.19768318691334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1076",
    "title": "Project Employees II",
    "titleSlug": "project-employees-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.273474524915706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1077",
    "title": "Project Employees III",
    "titleSlug": "project-employees-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.11573397137667,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1078",
    "title": "Occurrences After Bigram",
    "titleSlug": "occurrences-after-bigram",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.793789808917204,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1079",
    "title": "Letter Tile Possibilities",
    "titleSlug": "letter-tile-possibilities",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.55520883989843,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1080",
    "title": "Insufficient Nodes in Root to Leaf Paths",
    "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.257012246740786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1081",
    "title": "Smallest Subsequence of Distinct Characters",
    "titleSlug": "smallest-subsequence-of-distinct-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.54517313112811,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1082",
    "title": "Sales Analysis I",
    "titleSlug": "sales-analysis-i",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 74.74132959415603,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1083",
    "title": "Sales Analysis II",
    "titleSlug": "sales-analysis-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 49.98501717262522,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1084",
    "title": "Sales Analysis III",
    "titleSlug": "sales-analysis-iii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 46.95888443353881,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1085",
    "title": "Sum of Digits in the Minimum Number",
    "titleSlug": "sum-of-digits-in-the-minimum-number",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 76.6124944088266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1086",
    "title": "High Five",
    "titleSlug": "high-five",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 74.25378439020169,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1087",
    "title": "Brace Expansion",
    "titleSlug": "brace-expansion",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.74056923177739,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1088",
    "title": "Confusing Number II",
    "titleSlug": "confusing-number-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 47.083788044137265,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1089",
    "title": "Duplicate Zeros",
    "titleSlug": "duplicate-zeros",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.037030972568324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1090",
    "title": "Largest Values From Labels",
    "titleSlug": "largest-values-from-labels",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.63501523691378,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1091",
    "title": "Shortest Path in Binary Matrix",
    "titleSlug": "shortest-path-in-binary-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.55542104758385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1092",
    "title": "Shortest Common Supersequence ",
    "titleSlug": "shortest-common-supersequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.58241008586366,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1093",
    "title": "Statistics from a Large Sample",
    "titleSlug": "statistics-from-a-large-sample",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.576415406880436,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1094",
    "title": "Car Pooling",
    "titleSlug": "car-pooling",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.138945641406636,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1095",
    "title": "Find in Mountain Array",
    "titleSlug": "find-in-mountain-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.69395525726064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1096",
    "title": "Brace Expansion II",
    "titleSlug": "brace-expansion-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.257197348106445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1097",
    "title": "Game Play Analysis V",
    "titleSlug": "game-play-analysis-v",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.572316694093985,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1098",
    "title": "Unpopular Books",
    "titleSlug": "unpopular-books",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 43.379003992277845,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1099",
    "title": "Two Sum Less Than K",
    "titleSlug": "two-sum-less-than-k",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 62.079266061292046,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1100",
    "title": "Find K-Length Substrings With No Repeated Characters",
    "titleSlug": "find-k-length-substrings-with-no-repeated-characters",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 76.35515069725597,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1101",
    "title": "The Earliest Moment When Everyone Become Friends",
    "titleSlug": "the-earliest-moment-when-everyone-become-friends",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.70785060530244,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1102",
    "title": "Path With Maximum Minimum Value",
    "titleSlug": "path-with-maximum-minimum-value",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.29515160506938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1103",
    "title": "Distribute Candies to People",
    "titleSlug": "distribute-candies-to-people",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.98303910055253,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1104",
    "title": "Path In Zigzag Labelled Binary Tree",
    "titleSlug": "path-in-zigzag-labelled-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.62656089319817,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1105",
    "title": "Filling Bookcase Shelves",
    "titleSlug": "filling-bookcase-shelves",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.64293833158752,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1106",
    "title": "Parsing A Boolean Expression",
    "titleSlug": "parsing-a-boolean-expression",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.7997246461505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1107",
    "title": "New Users Daily Count",
    "titleSlug": "new-users-daily-count",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 45.07130740717472,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1108",
    "title": "Defanging an IP Address",
    "titleSlug": "defanging-an-ip-address",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.83295503984728,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1109",
    "title": "Corporate Flight Bookings",
    "titleSlug": "corporate-flight-bookings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.43090300616556,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1110",
    "title": "Delete Nodes And Return Forest",
    "titleSlug": "delete-nodes-and-return-forest",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.44506592089492,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1111",
    "title": "Maximum Nesting Depth of Two Valid Parentheses Strings",
    "titleSlug": "maximum-nesting-depth-of-two-valid-parentheses-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.58629758099254,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1112",
    "title": "Highest Grade For Each Student",
    "titleSlug": "highest-grade-for-each-student",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.2030753167861,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1113",
    "title": "Reported Posts",
    "titleSlug": "reported-posts",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 64.96723135897119,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1114",
    "title": "Print in Order",
    "titleSlug": "print-in-order",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.15346828958408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1115",
    "title": "Print FooBar Alternately",
    "titleSlug": "print-foobar-alternately",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.92085231481752,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1116",
    "title": "Print Zero Even Odd",
    "titleSlug": "print-zero-even-odd",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.44937111362353,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1117",
    "title": "Building H2O",
    "titleSlug": "building-h2o",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.09963834743166,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1118",
    "title": "Number of Days in a Month",
    "titleSlug": "number-of-days-in-a-month",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 59.13293353323338,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1119",
    "title": "Remove Vowels from a String",
    "titleSlug": "remove-vowels-from-a-string",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 91.24983347569528,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1120",
    "title": "Maximum Average Subtree",
    "titleSlug": "maximum-average-subtree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.87982117008995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1121",
    "title": "Divide Array Into Increasing Sequences",
    "titleSlug": "divide-array-into-increasing-sequences",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 65.08400292184075,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1122",
    "title": "Relative Sort Array",
    "titleSlug": "relative-sort-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.97584710780094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1123",
    "title": "Lowest Common Ancestor of Deepest Leaves",
    "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.00818666263217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1124",
    "title": "Longest Well-Performing Interval",
    "titleSlug": "longest-well-performing-interval",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.38182039552641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1125",
    "title": "Smallest Sufficient Team",
    "titleSlug": "smallest-sufficient-team",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.33302905347981,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1126",
    "title": "Active Businesses",
    "titleSlug": "active-businesses",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.94952047024853,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1127",
    "title": "User Purchase Platform",
    "titleSlug": "user-purchase-platform",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 46.89424731316859,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1128",
    "title": "Number of Equivalent Domino Pairs",
    "titleSlug": "number-of-equivalent-domino-pairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.552948527880226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1129",
    "title": "Shortest Path with Alternating Colors",
    "titleSlug": "shortest-path-with-alternating-colors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.43021253681334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1130",
    "title": "Minimum Cost Tree From Leaf Values",
    "titleSlug": "minimum-cost-tree-from-leaf-values",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.71575913848021,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1131",
    "title": "Maximum of Absolute Value Expression",
    "titleSlug": "maximum-of-absolute-value-expression",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.45271441910097,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1132",
    "title": "Reported Posts II",
    "titleSlug": "reported-posts-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 32.090987466012336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1133",
    "title": "Largest Unique Number",
    "titleSlug": "largest-unique-number",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 71.35402933707101,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1134",
    "title": "Armstrong Number",
    "titleSlug": "armstrong-number",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 77.87944427845832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1135",
    "title": "Connecting Cities With Minimum Cost",
    "titleSlug": "connecting-cities-with-minimum-cost",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.1420244690674,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Minimum Spanning Tree",
        "slug": "minimum-spanning-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1136",
    "title": "Parallel Courses",
    "titleSlug": "parallel-courses",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.891971825035164,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1137",
    "title": "N-th Tribonacci Number",
    "titleSlug": "n-th-tribonacci-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.44113467828605,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1138",
    "title": "Alphabet Board Path",
    "titleSlug": "alphabet-board-path",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.68192415363704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1139",
    "title": "Largest 1-Bordered Square",
    "titleSlug": "largest-1-bordered-square",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.57731567751191,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1140",
    "title": "Stone Game II",
    "titleSlug": "stone-game-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.9346629121434,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1141",
    "title": "User Activity for the Past 30 Days I",
    "titleSlug": "user-activity-for-the-past-30-days-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.93291454412683,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1142",
    "title": "User Activity for the Past 30 Days II",
    "titleSlug": "user-activity-for-the-past-30-days-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 35.648148148148145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1143",
    "title": "Longest Common Subsequence",
    "titleSlug": "longest-common-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.548629745492995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1144",
    "title": "Decrease Elements To Make Array Zigzag",
    "titleSlug": "decrease-elements-to-make-array-zigzag",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.727097782945116,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1145",
    "title": "Binary Tree Coloring Game",
    "titleSlug": "binary-tree-coloring-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.6393793206346,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1146",
    "title": "Snapshot Array",
    "titleSlug": "snapshot-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.66523775771646,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1147",
    "title": "Longest Chunked Palindrome Decomposition",
    "titleSlug": "longest-chunked-palindrome-decomposition",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.928713501471876,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1148",
    "title": "Article Views I",
    "titleSlug": "article-views-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.99981294568971,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1149",
    "title": "Article Views II",
    "titleSlug": "article-views-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.21131272352283,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1150",
    "title": "Check If a Number Is Majority Element in a Sorted Array",
    "titleSlug": "check-if-a-number-is-majority-element-in-a-sorted-array",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 59.85218019372903,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1151",
    "title": "Minimum Swaps to Group All 1's Together",
    "titleSlug": "minimum-swaps-to-group-all-1s-together",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.12654126162521,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1152",
    "title": "Analyze User Website Visit Pattern",
    "titleSlug": "analyze-user-website-visit-pattern",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 44.16110238057659,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1153",
    "title": "String Transforms Into Another String",
    "titleSlug": "string-transforms-into-another-string",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 34.70871281508811,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1154",
    "title": "Day of the Year",
    "titleSlug": "day-of-the-year",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 48.884165168901795,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1155",
    "title": "Number of Dice Rolls With Target Sum",
    "titleSlug": "number-of-dice-rolls-with-target-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.911896583659,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1156",
    "title": "Swap For Longest Repeated Character Substring",
    "titleSlug": "swap-for-longest-repeated-character-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.86745626946907,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1157",
    "title": "Online Majority Element In Subarray",
    "titleSlug": "online-majority-element-in-subarray",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.63450930592484,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1158",
    "title": "Market Analysis I",
    "titleSlug": "market-analysis-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.11315163372064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1159",
    "title": "Market Analysis II",
    "titleSlug": "market-analysis-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.717177396682594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1160",
    "title": "Find Words That Can Be Formed by Characters",
    "titleSlug": "find-words-that-can-be-formed-by-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.2566538153085,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1161",
    "title": "Maximum Level Sum of a Binary Tree",
    "titleSlug": "maximum-level-sum-of-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.47420501727953,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1162",
    "title": "As Far from Land as Possible",
    "titleSlug": "as-far-from-land-as-possible",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.97210275623109,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1163",
    "title": "Last Substring in Lexicographical Order",
    "titleSlug": "last-substring-in-lexicographical-order",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.67143974694738,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1164",
    "title": "Product Price at a Given Date",
    "titleSlug": "product-price-at-a-given-date",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.59734713359796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1165",
    "title": "Single-Row Keyboard",
    "titleSlug": "single-row-keyboard",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.71696229017071,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1166",
    "title": "Design File System",
    "titleSlug": "design-file-system",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.93643656470113,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1167",
    "title": "Minimum Cost to Connect Sticks",
    "titleSlug": "minimum-cost-to-connect-sticks",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.48616017082759,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1168",
    "title": "Optimize Water Distribution in a Village",
    "titleSlug": "optimize-water-distribution-in-a-village",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 65.26892669588,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Minimum Spanning Tree",
        "slug": "minimum-spanning-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1169",
    "title": "Invalid Transactions",
    "titleSlug": "invalid-transactions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.39865659380487,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1170",
    "title": "Compare Strings by Frequency of the Smallest Character",
    "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.95904499026215,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1171",
    "title": "Remove Zero Sum Consecutive Nodes from Linked List",
    "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.98077539810728,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1172",
    "title": "Dinner Plate Stacks",
    "titleSlug": "dinner-plate-stacks",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.154992303438796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1173",
    "title": "Immediate Food Delivery I",
    "titleSlug": "immediate-food-delivery-i",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.76310878553917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1174",
    "title": "Immediate Food Delivery II",
    "titleSlug": "immediate-food-delivery-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.08743865698388,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1175",
    "title": "Prime Arrangements",
    "titleSlug": "prime-arrangements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.2563713592233,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1176",
    "title": "Diet Plan Performance",
    "titleSlug": "diet-plan-performance",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 54.39784455722187,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1177",
    "title": "Can Make Palindrome from Substring",
    "titleSlug": "can-make-palindrome-from-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.7106402534891,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1178",
    "title": "Number of Valid Words for Each Puzzle",
    "titleSlug": "number-of-valid-words-for-each-puzzle",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.4393606449536,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1179",
    "title": "Reformat Department Table",
    "titleSlug": "reformat-department-table",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.52330861533025,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1180",
    "title": "Count Substrings with Only One Distinct Letter",
    "titleSlug": "count-substrings-with-only-one-distinct-letter",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.7760608550452,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1181",
    "title": "Before and After Puzzle",
    "titleSlug": "before-and-after-puzzle",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.55063544081209,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1182",
    "title": "Shortest Distance to Target Color",
    "titleSlug": "shortest-distance-to-target-color",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.44218124842618,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1183",
    "title": "Maximum Number of Ones",
    "titleSlug": "maximum-number-of-ones",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 68.79849517987303,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1184",
    "title": "Distance Between Bus Stops",
    "titleSlug": "distance-between-bus-stops",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.959148633847434,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1185",
    "title": "Day of the Week",
    "titleSlug": "day-of-the-week",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.85543783417745,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1186",
    "title": "Maximum Subarray Sum with One Deletion",
    "titleSlug": "maximum-subarray-sum-with-one-deletion",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.61616981004529,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1187",
    "title": "Make Array Strictly Increasing",
    "titleSlug": "make-array-strictly-increasing",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.821518557566876,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1188",
    "title": "Design Bounded Blocking Queue",
    "titleSlug": "design-bounded-blocking-queue",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 73.27729336228217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1189",
    "title": "Maximum Number of Balloons",
    "titleSlug": "maximum-number-of-balloons",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.83880027746182,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1190",
    "title": "Reverse Substrings Between Each Pair of Parentheses",
    "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.82125906364288,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1191",
    "title": "K-Concatenation Maximum Sum",
    "titleSlug": "k-concatenation-maximum-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 24.48331632439917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1192",
    "title": "Critical Connections in a Network",
    "titleSlug": "critical-connections-in-a-network",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.699330133010555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Biconnected Component",
        "slug": "biconnected-component"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1193",
    "title": "Monthly Transactions I",
    "titleSlug": "monthly-transactions-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.55343138503275,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1194",
    "title": "Tournament Winners",
    "titleSlug": "tournament-winners",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.99065012778159,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1195",
    "title": "Fizz Buzz Multithreaded",
    "titleSlug": "fizz-buzz-multithreaded",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.47231786631689,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1196",
    "title": "How Many Apples Can You Put into the Basket",
    "titleSlug": "how-many-apples-can-you-put-into-the-basket",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 66.97869006142523,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1197",
    "title": "Minimum Knight Moves",
    "titleSlug": "minimum-knight-moves",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.510833871477445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1198",
    "title": "Find Smallest Common Element in All Rows",
    "titleSlug": "find-smallest-common-element-in-all-rows",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 76.77109392767795,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1199",
    "title": "Minimum Time to Build Blocks",
    "titleSlug": "minimum-time-to-build-blocks",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 46.241442864665615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1200",
    "title": "Minimum Absolute Difference",
    "titleSlug": "minimum-absolute-difference",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.89087131858732,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1201",
    "title": "Ugly Number III",
    "titleSlug": "ugly-number-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.82086718809325,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1202",
    "title": "Smallest String With Swaps",
    "titleSlug": "smallest-string-with-swaps",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.87524278774403,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1203",
    "title": "Sort Items by Groups Respecting Dependencies",
    "titleSlug": "sort-items-by-groups-respecting-dependencies",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.6108691792767,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1204",
    "title": "Last Person to Fit in the Bus",
    "titleSlug": "last-person-to-fit-in-the-bus",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.72521547302696,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1205",
    "title": "Monthly Transactions II",
    "titleSlug": "monthly-transactions-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.96348996588709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1206",
    "title": "Design Skiplist",
    "titleSlug": "design-skiplist",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.66290197267438,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1207",
    "title": "Unique Number of Occurrences",
    "titleSlug": "unique-number-of-occurrences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.47239021767875,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1208",
    "title": "Get Equal Substrings Within Budget",
    "titleSlug": "get-equal-substrings-within-budget",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.19437555829018,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1209",
    "title": "Remove All Adjacent Duplicates in String II",
    "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.21549969782558,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1210",
    "title": "Minimum Moves to Reach Target with Rotations",
    "titleSlug": "minimum-moves-to-reach-target-with-rotations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 51.24782608695653,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1211",
    "title": "Queries Quality and Percentage",
    "titleSlug": "queries-quality-and-percentage",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.563482802047346,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1212",
    "title": "Team Scores in Football Tournament",
    "titleSlug": "team-scores-in-football-tournament",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.83791208791209,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1213",
    "title": "Intersection of Three Sorted Arrays",
    "titleSlug": "intersection-of-three-sorted-arrays",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.0534543700529,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1214",
    "title": "Two Sum BSTs",
    "titleSlug": "two-sum-bsts",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.440352541396,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1215",
    "title": "Stepping Numbers",
    "titleSlug": "stepping-numbers",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.88632326820604,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1216",
    "title": "Valid Palindrome III",
    "titleSlug": "valid-palindrome-iii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.13018897652391,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1217",
    "title": "Minimum Cost to Move Chips to The Same Position",
    "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.53868829971339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1218",
    "title": "Longest Arithmetic Subsequence of Given Difference",
    "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.3656773998667,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1219",
    "title": "Path with Maximum Gold",
    "titleSlug": "path-with-maximum-gold",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.18808815866106,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1220",
    "title": "Count Vowels Permutation",
    "titleSlug": "count-vowels-permutation",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.42209653014731,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1221",
    "title": "Split a String in Balanced Strings",
    "titleSlug": "split-a-string-in-balanced-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.03894779429896,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1222",
    "title": "Queens That Can Attack the King",
    "titleSlug": "queens-that-can-attack-the-king",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.3897156720613,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1223",
    "title": "Dice Roll Simulation",
    "titleSlug": "dice-roll-simulation",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.36448072051787,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1224",
    "title": "Maximum Equal Frequency",
    "titleSlug": "maximum-equal-frequency",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.78214756396042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1225",
    "title": "Report Contiguous Dates",
    "titleSlug": "report-contiguous-dates",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.23214615925145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1226",
    "title": "The Dining Philosophers",
    "titleSlug": "the-dining-philosophers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.6825909668219,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1227",
    "title": "Airplane Seat Assignment Probability",
    "titleSlug": "airplane-seat-assignment-probability",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.91979057060635,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1228",
    "title": "Missing Number In Arithmetic Progression",
    "titleSlug": "missing-number-in-arithmetic-progression",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 52.13094712534384,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1229",
    "title": "Meeting Scheduler",
    "titleSlug": "meeting-scheduler",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.20331333530035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1230",
    "title": "Toss Strange Coins",
    "titleSlug": "toss-strange-coins",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.07546878617177,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1231",
    "title": "Divide Chocolate",
    "titleSlug": "divide-chocolate",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 60.224427673409096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1232",
    "title": "Check If It Is a Straight Line",
    "titleSlug": "check-if-it-is-a-straight-line",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 39.81463582130309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1233",
    "title": "Remove Sub-Folders from the Filesystem",
    "titleSlug": "remove-sub-folders-from-the-filesystem",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.62137892485661,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1234",
    "title": "Replace the Substring for Balanced String",
    "titleSlug": "replace-the-substring-for-balanced-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.97136107842869,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1235",
    "title": "Maximum Profit in Job Scheduling",
    "titleSlug": "maximum-profit-in-job-scheduling",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.49234090632259,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1236",
    "title": "Web Crawler",
    "titleSlug": "web-crawler",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.70224695298486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1237",
    "title": "Find Positive Integer Solution for a Given Equation",
    "titleSlug": "find-positive-integer-solution-for-a-given-equation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.6691339616948,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1238",
    "title": "Circular Permutation in Binary Representation",
    "titleSlug": "circular-permutation-in-binary-representation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.18016654049963,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1239",
    "title": "Maximum Length of a Concatenated String with Unique Characters",
    "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.39029032297492,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1240",
    "title": "Tiling a Rectangle with the Fewest Squares",
    "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.53852806721304,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1241",
    "title": "Number of Comments per Post",
    "titleSlug": "number-of-comments-per-post",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 65.78830422831938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1242",
    "title": "Web Crawler Multithreaded",
    "titleSlug": "web-crawler-multithreaded",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.484375719085094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1243",
    "title": "Array Transformation",
    "titleSlug": "array-transformation",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 53.31760038306314,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1244",
    "title": "Design A Leaderboard",
    "titleSlug": "design-a-leaderboard",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.96246125498709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1245",
    "title": "Tree Diameter",
    "titleSlug": "tree-diameter",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.12911000751096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1246",
    "title": "Palindrome Removal",
    "titleSlug": "palindrome-removal",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 46.32667617689016,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1247",
    "title": "Minimum Swaps to Make Strings Equal",
    "titleSlug": "minimum-swaps-to-make-strings-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.98380237565156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1248",
    "title": "Count Number of Nice Subarrays",
    "titleSlug": "count-number-of-nice-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.18482557674712,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1249",
    "title": "Minimum Remove to Make Valid Parentheses",
    "titleSlug": "minimum-remove-to-make-valid-parentheses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.0251142252614,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1250",
    "title": "Check If It Is a Good Array",
    "titleSlug": "check-if-it-is-a-good-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.003798491885895,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1251",
    "title": "Average Selling Price",
    "titleSlug": "average-selling-price",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 36.923895210870086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1252",
    "title": "Cells with Odd Values in a Matrix",
    "titleSlug": "cells-with-odd-values-in-a-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.42609984882004,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1253",
    "title": "Reconstruct a 2-Row Binary Matrix",
    "titleSlug": "reconstruct-a-2-row-binary-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.277138584099625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1254",
    "title": "Number of Closed Islands",
    "titleSlug": "number-of-closed-islands",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.8909210984014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1255",
    "title": "Maximum Score Words Formed by Letters",
    "titleSlug": "maximum-score-words-formed-by-letters",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 81.60348081227312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1256",
    "title": "Encode Number",
    "titleSlug": "encode-number",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.12846179512846,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1257",
    "title": "Smallest Common Region",
    "titleSlug": "smallest-common-region",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.16167810203967,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1258",
    "title": "Synonymous Sentences",
    "titleSlug": "synonymous-sentences",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.78045027534824,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Sort",
        "slug": "sort"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1259",
    "title": "Handshakes That Don't Cross",
    "titleSlug": "handshakes-that-dont-cross",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 60.014367171014236,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1260",
    "title": "Shift 2D Grid",
    "titleSlug": "shift-2d-grid",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.8857870738292,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1261",
    "title": "Find Elements in a Contaminated Binary Tree",
    "titleSlug": "find-elements-in-a-contaminated-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.0606426194102,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1262",
    "title": "Greatest Sum Divisible by Three",
    "titleSlug": "greatest-sum-divisible-by-three",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.06214224250814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1263",
    "title": "Minimum Moves to Move a Box to Their Target Location",
    "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.11165079567969,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1264",
    "title": "Page Recommendations",
    "titleSlug": "page-recommendations",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.35873175010965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1265",
    "title": "Print Immutable Linked List in Reverse",
    "titleSlug": "print-immutable-linked-list-in-reverse",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 94.06129162578635,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1266",
    "title": "Minimum Time Visiting All Points",
    "titleSlug": "minimum-time-visiting-all-points",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.62807575816818,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1267",
    "title": "Count Servers that Communicate",
    "titleSlug": "count-servers-that-communicate",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.51156417514908,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1268",
    "title": "Search Suggestions System",
    "titleSlug": "search-suggestions-system",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.1280711994374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1269",
    "title": "Number of Ways to Stay in the Same Place After Some Steps",
    "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.98401646304307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1270",
    "title": "All People Report to the Given Manager",
    "titleSlug": "all-people-report-to-the-given-manager",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 84.18403932152123,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1271",
    "title": "Hexspeak",
    "titleSlug": "hexspeak",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 58.398446530121596,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1272",
    "title": "Remove Interval",
    "titleSlug": "remove-interval",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.95175797219952,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1273",
    "title": "Delete Tree Nodes",
    "titleSlug": "delete-tree-nodes",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.365747063643816,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1274",
    "title": "Number of Ships in a Rectangle",
    "titleSlug": "number-of-ships-in-a-rectangle",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 68.81195635669508,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1275",
    "title": "Find Winner on a Tic Tac Toe Game",
    "titleSlug": "find-winner-on-a-tic-tac-toe-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.27978075102986,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1276",
    "title": "Number of Burgers with No Waste of Ingredients",
    "titleSlug": "number-of-burgers-with-no-waste-of-ingredients",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.58458640511838,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1277",
    "title": "Count Square Submatrices with All Ones",
    "titleSlug": "count-square-submatrices-with-all-ones",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.61815287070937,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1278",
    "title": "Palindrome Partitioning III",
    "titleSlug": "palindrome-partitioning-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.90810119037183,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1279",
    "title": "Traffic Light Controlled Intersection",
    "titleSlug": "traffic-light-controlled-intersection",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 72.65729202393202,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Concurrency",
        "slug": "concurrency"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1280",
    "title": "Students and Examinations",
    "titleSlug": "students-and-examinations",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.770836420519394,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1281",
    "title": "Subtract the Product and Sum of Digits of an Integer",
    "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.54933636978258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1282",
    "title": "Group the People Given the Group Size They Belong To",
    "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 87.44891874990911,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1283",
    "title": "Find the Smallest Divisor Given a Threshold",
    "titleSlug": "find-the-smallest-divisor-given-a-threshold",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.7297538351766,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1284",
    "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
    "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 72.21513078930823,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1285",
    "title": "Find the Start and End Number of Continuous Ranges",
    "titleSlug": "find-the-start-and-end-number-of-continuous-ranges",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.93831840110268,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1286",
    "title": "Iterator for Combination",
    "titleSlug": "iterator-for-combination",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.58172476798669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1287",
    "title": "Element Appearing More Than 25% In Sorted Array",
    "titleSlug": "element-appearing-more-than-25-in-sorted-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.077568020370954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1288",
    "title": "Remove Covered Intervals",
    "titleSlug": "remove-covered-intervals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.138385963756456,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1289",
    "title": "Minimum Falling Path Sum II",
    "titleSlug": "minimum-falling-path-sum-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.47192408089191,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1290",
    "title": "Convert Binary Number in a Linked List to Integer",
    "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.30360627432513,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1291",
    "title": "Sequential Digits",
    "titleSlug": "sequential-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.30264207532439,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1292",
    "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
    "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.708997997375874,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1293",
    "title": "Shortest Path in a Grid with Obstacles Elimination",
    "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.832450504738546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1294",
    "title": "Weather Type in Each Country",
    "titleSlug": "weather-type-in-each-country",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 66.90633354983913,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1295",
    "title": "Find Numbers with Even Number of Digits",
    "titleSlug": "find-numbers-with-even-number-of-digits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.51349254280538,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1296",
    "title": "Divide Array in Sets of K Consecutive Numbers",
    "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.993903950042125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1297",
    "title": "Maximum Number of Occurrences of a Substring",
    "titleSlug": "maximum-number-of-occurrences-of-a-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.82808501090332,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1298",
    "title": "Maximum Candies You Can Get from Boxes",
    "titleSlug": "maximum-candies-you-can-get-from-boxes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 68.31707120393517,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1299",
    "title": "Replace Elements with Greatest Element on Right Side",
    "titleSlug": "replace-elements-with-greatest-element-on-right-side",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.68595627816273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1300",
    "title": "Sum of Mutated Array Closest to Target",
    "titleSlug": "sum-of-mutated-array-closest-to-target",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.764703558873485,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1301",
    "title": "Number of Paths with Max Score",
    "titleSlug": "number-of-paths-with-max-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.49461293844036,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1302",
    "title": "Deepest Leaves Sum",
    "titleSlug": "deepest-leaves-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.43976120390424,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1303",
    "title": "Find the Team Size",
    "titleSlug": "find-the-team-size",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 89.60896508051384,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1304",
    "title": "Find N Unique Integers Sum up to Zero",
    "titleSlug": "find-n-unique-integers-sum-up-to-zero",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.4859420133917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1305",
    "title": "All Elements in Two Binary Search Trees",
    "titleSlug": "all-elements-in-two-binary-search-trees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.12651791111125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1306",
    "title": "Jump Game III",
    "titleSlug": "jump-game-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.41144516249882,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1307",
    "title": "Verbal Arithmetic Puzzle",
    "titleSlug": "verbal-arithmetic-puzzle",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.761263593992744,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1308",
    "title": "Running Total for Different Genders",
    "titleSlug": "running-total-for-different-genders",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 86.220745828876,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1309",
    "title": "Decrypt String from Alphabet to Integer Mapping",
    "titleSlug": "decrypt-string-from-alphabet-to-integer-mapping",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.33418517790446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1310",
    "title": "XOR Queries of a Subarray",
    "titleSlug": "xor-queries-of-a-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.26201707724162,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1311",
    "title": "Get Watched Videos by Your Friends",
    "titleSlug": "get-watched-videos-by-your-friends",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.71066063243735,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1312",
    "title": "Minimum Insertion Steps to Make a String Palindrome",
    "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 73.20620452546574,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1313",
    "title": "Decompress Run-Length Encoded List",
    "titleSlug": "decompress-run-length-encoded-list",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.10631412442497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1314",
    "title": "Matrix Block Sum",
    "titleSlug": "matrix-block-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.09394680299326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1315",
    "title": "Sum of Nodes with Even-Valued Grandparent",
    "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.80423139374258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1316",
    "title": "Distinct Echo Substrings",
    "titleSlug": "distinct-echo-substrings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.41368928141309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1317",
    "title": "Convert Integer to the Sum of Two No-Zero Integers",
    "titleSlug": "convert-integer-to-the-sum-of-two-no-zero-integers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.29311067217334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1318",
    "title": "Minimum Flips to Make a OR b Equal to c",
    "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.83996474092847,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1319",
    "title": "Number of Operations to Make Network Connected",
    "titleSlug": "number-of-operations-to-make-network-connected",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.58947809359584,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1320",
    "title": "Minimum Distance to Type a Word Using Two Fingers",
    "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.226853583567795,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1321",
    "title": "Restaurant Growth",
    "titleSlug": "restaurant-growth",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.50120494255319,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1322",
    "title": "Ads Performance",
    "titleSlug": "ads-performance",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 58.84788499784837,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1323",
    "title": "Maximum 69 Number",
    "titleSlug": "maximum-69-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.47086352933422,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1324",
    "title": "Print Words Vertically",
    "titleSlug": "print-words-vertically",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.91884456671252,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1325",
    "title": "Delete Leaves With a Given Value",
    "titleSlug": "delete-leaves-with-a-given-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.2391499208534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1326",
    "title": "Minimum Number of Taps to Open to Water a Garden",
    "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.757633925441745,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1327",
    "title": "List the Products Ordered in a Period",
    "titleSlug": "list-the-products-ordered-in-a-period",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.72839675591113,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1328",
    "title": "Break a Palindrome",
    "titleSlug": "break-a-palindrome",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.51343242874676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1329",
    "title": "Sort the Matrix Diagonally",
    "titleSlug": "sort-the-matrix-diagonally",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.11690589901806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1330",
    "title": "Reverse Subarray To Maximize Array Value",
    "titleSlug": "reverse-subarray-to-maximize-array-value",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.987738121305014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1331",
    "title": "Rank Transform of an Array",
    "titleSlug": "rank-transform-of-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.71374912989641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1332",
    "title": "Remove Palindromic Subsequences",
    "titleSlug": "remove-palindromic-subsequences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.79172916331477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1333",
    "title": "Filter Restaurants by Vegan-Friendly, Price and Distance",
    "titleSlug": "filter-restaurants-by-vegan-friendly-price-and-distance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.672027549969826,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1334",
    "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
    "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.35120672655295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1335",
    "title": "Minimum Difficulty of a Job Schedule",
    "titleSlug": "minimum-difficulty-of-a-job-schedule",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.6880868784192,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1336",
    "title": "Number of Transactions per Visit",
    "titleSlug": "number-of-transactions-per-visit",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 47.94863665187064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1337",
    "title": "The K Weakest Rows in a Matrix",
    "titleSlug": "the-k-weakest-rows-in-a-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.14129887686998,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1338",
    "title": "Reduce Array Size to The Half",
    "titleSlug": "reduce-array-size-to-the-half",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.24326200689296,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1339",
    "title": "Maximum Product of Splitted Binary Tree",
    "titleSlug": "maximum-product-of-splitted-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.05756865065112,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1340",
    "title": "Jump Game V",
    "titleSlug": "jump-game-v",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.40315898498187,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1341",
    "title": "Movie Rating",
    "titleSlug": "movie-rating",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.95666855146474,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1342",
    "title": "Number of Steps to Reduce a Number to Zero",
    "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.67821282457497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1343",
    "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
    "titleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.00356105166182,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1344",
    "title": "Angle Between Hands of a Clock",
    "titleSlug": "angle-between-hands-of-a-clock",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.33496168360614,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1345",
    "title": "Jump Game IV",
    "titleSlug": "jump-game-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.15684086973701,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1346",
    "title": "Check If N and Its Double Exist",
    "titleSlug": "check-if-n-and-its-double-exist",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 41.439573956556984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1347",
    "title": "Minimum Number of Steps to Make Two Strings Anagram",
    "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.2684422007006,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1348",
    "title": "Tweet Counts Per Frequency",
    "titleSlug": "tweet-counts-per-frequency",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.6039611187484,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1349",
    "title": "Maximum Students Taking Exam",
    "titleSlug": "maximum-students-taking-exam",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.768535531608485,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1350",
    "title": "Students With Invalid Departments",
    "titleSlug": "students-with-invalid-departments",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 89.85824096251322,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1351",
    "title": "Count Negative Numbers in a Sorted Matrix",
    "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.81266573453546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1352",
    "title": "Product of the Last K Numbers",
    "titleSlug": "product-of-the-last-k-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.8456955409104,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1353",
    "title": "Maximum Number of Events That Can Be Attended",
    "titleSlug": "maximum-number-of-events-that-can-be-attended",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.72400265090808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1354",
    "title": "Construct Target Array With Multiple Sums",
    "titleSlug": "construct-target-array-with-multiple-sums",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.28460118925569,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1355",
    "title": "Activity Participants",
    "titleSlug": "activity-participants",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.04711942409592,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1356",
    "title": "Sort Integers by The Number of 1 Bits",
    "titleSlug": "sort-integers-by-the-number-of-1-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.8347885302916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1357",
    "title": "Apply Discount Every n Orders",
    "titleSlug": "apply-discount-every-n-orders",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.76221543910339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1358",
    "title": "Number of Substrings Containing All Three Characters",
    "titleSlug": "number-of-substrings-containing-all-three-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.31653825587263,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1359",
    "title": "Count All Valid Pickup and Delivery Options",
    "titleSlug": "count-all-valid-pickup-and-delivery-options",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.86953788116945,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1360",
    "title": "Number of Days Between Two Dates",
    "titleSlug": "number-of-days-between-two-dates",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.85627927035023,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1361",
    "title": "Validate Binary Tree Nodes",
    "titleSlug": "validate-binary-tree-nodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.948299686562635,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1362",
    "title": "Closest Divisors",
    "titleSlug": "closest-divisors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.725929791917224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1363",
    "title": "Largest Multiple of Three",
    "titleSlug": "largest-multiple-of-three",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.948426942567565,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1364",
    "title": "Number of Trusted Contacts of a Customer",
    "titleSlug": "number-of-trusted-contacts-of-a-customer",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.07116714111427,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1365",
    "title": "How Many Numbers Are Smaller Than the Current Number",
    "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.23073046516305,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1366",
    "title": "Rank Teams by Votes",
    "titleSlug": "rank-teams-by-votes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.73083107287077,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1367",
    "title": "Linked List in Binary Tree",
    "titleSlug": "linked-list-in-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.91746965495759,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1368",
    "title": "Minimum Cost to Make at Least One Valid Path in a Grid",
    "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 70.78495686556434,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1369",
    "title": "Get the Second Most Recent Activity",
    "titleSlug": "get-the-second-most-recent-activity",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 67.45547890261511,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1370",
    "title": "Increasing Decreasing String",
    "titleSlug": "increasing-decreasing-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.00604217189363,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1371",
    "title": "Find the Longest Substring Containing Vowels in Even Counts",
    "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.70753809186036,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1372",
    "title": "Longest ZigZag Path in a Binary Tree",
    "titleSlug": "longest-zigzag-path-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.8711577836033,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1373",
    "title": "Maximum Sum BST in Binary Tree",
    "titleSlug": "maximum-sum-bst-in-binary-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.405007664793054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1374",
    "title": "Generate a String With Characters That Have Odd Counts",
    "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.23605427525307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1375",
    "title": "Number of Times Binary String Is Prefix-Aligned",
    "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.86203003274247,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1376",
    "title": "Time Needed to Inform All Employees",
    "titleSlug": "time-needed-to-inform-all-employees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.35346931659693,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1377",
    "title": "Frog Position After T Seconds",
    "titleSlug": "frog-position-after-t-seconds",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.47681087856573,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1378",
    "title": "Replace Employee ID With The Unique Identifier",
    "titleSlug": "replace-employee-id-with-the-unique-identifier",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.58745249937644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1379",
    "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
    "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.77458126240889,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1380",
    "title": "Lucky Numbers in a Matrix",
    "titleSlug": "lucky-numbers-in-a-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.93825242499054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1381",
    "title": "Design a Stack With Increment Operation",
    "titleSlug": "design-a-stack-with-increment-operation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.03465815188613,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1382",
    "title": "Balance a Binary Search Tree",
    "titleSlug": "balance-a-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.7268647700141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1383",
    "title": "Maximum Performance of a Team",
    "titleSlug": "maximum-performance-of-a-team",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.65703025281591,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1384",
    "title": "Total Sales Amount by Year",
    "titleSlug": "total-sales-amount-by-year",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 61.19184659903966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1385",
    "title": "Find the Distance Value Between Two Arrays",
    "titleSlug": "find-the-distance-value-between-two-arrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.8731324039428,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1386",
    "title": "Cinema Seat Allocation",
    "titleSlug": "cinema-seat-allocation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.15503778244136,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1387",
    "title": "Sort Integers by The Power Value",
    "titleSlug": "sort-integers-by-the-power-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.97336336298552,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1388",
    "title": "Pizza With 3n Slices",
    "titleSlug": "pizza-with-3n-slices",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.44596855135497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1389",
    "title": "Create Target Array in the Given Order",
    "titleSlug": "create-target-array-in-the-given-order",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.33243764660965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1390",
    "title": "Four Divisors",
    "titleSlug": "four-divisors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.39146758935473,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1391",
    "title": "Check if There is a Valid Path in a Grid",
    "titleSlug": "check-if-there-is-a-valid-path-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.422361464656355,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1392",
    "title": "Longest Happy Prefix",
    "titleSlug": "longest-happy-prefix",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.15835388429015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1393",
    "title": "Capital Gain/Loss",
    "titleSlug": "capital-gainloss",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.82062121349128,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1394",
    "title": "Find Lucky Integer in an Array",
    "titleSlug": "find-lucky-integer-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.4457087133927,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1395",
    "title": "Count Number of Teams",
    "titleSlug": "count-number-of-teams",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.11573602862866,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1396",
    "title": "Design Underground System",
    "titleSlug": "design-underground-system",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.13389152922254,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1397",
    "title": "Find All Good Strings",
    "titleSlug": "find-all-good-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.398772048493676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1398",
    "title": "Customers Who Bought Products A and B but Not C",
    "titleSlug": "customers-who-bought-products-a-and-b-but-not-c",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.70638807269562,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1399",
    "title": "Count Largest Group",
    "titleSlug": "count-largest-group",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.78143717570114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1400",
    "title": "Construct K Palindrome Strings",
    "titleSlug": "construct-k-palindrome-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.64317766328736,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1401",
    "title": "Circle and Rectangle Overlapping",
    "titleSlug": "circle-and-rectangle-overlapping",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.17123466457844,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1402",
    "title": "Reducing Dishes",
    "titleSlug": "reducing-dishes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 76.4857343493979,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1403",
    "title": "Minimum Subsequence in Non-Increasing Order",
    "titleSlug": "minimum-subsequence-in-non-increasing-order",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.284634547988,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1404",
    "title": "Number of Steps to Reduce a Number in Binary Representation to One",
    "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.37272349765676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1405",
    "title": "Longest Happy String",
    "titleSlug": "longest-happy-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.48102716561375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1406",
    "title": "Stone Game III",
    "titleSlug": "stone-game-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.18341993668996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1407",
    "title": "Top Travellers",
    "titleSlug": "top-travellers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.10081168881251,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1408",
    "title": "String Matching in an Array",
    "titleSlug": "string-matching-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.77800076500073,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1409",
    "title": "Queries on a Permutation With Key",
    "titleSlug": "queries-on-a-permutation-with-key",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.6595655806182,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1410",
    "title": "HTML Entity Parser",
    "titleSlug": "html-entity-parser",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.17013043333222,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1411",
    "title": "Number of Ways to Paint N \u00d7 3 Grid",
    "titleSlug": "number-of-ways-to-paint-n-3-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.35936392978037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1412",
    "title": "Find the Quiet Students in All Exams",
    "titleSlug": "find-the-quiet-students-in-all-exams",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 58.171472058391124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1413",
    "title": "Minimum Value to Get Positive Step by Step Sum",
    "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.52462851285662,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1414",
    "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
    "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.70133085731972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1415",
    "title": "The k-th Lexicographical String of All Happy Strings of Length n",
    "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.17672798842037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1416",
    "title": "Restore The Array",
    "titleSlug": "restore-the-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.79897658729024,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1417",
    "title": "Reformat The String",
    "titleSlug": "reformat-the-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.08016196797175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1418",
    "title": "Display Table of Food Orders in a Restaurant",
    "titleSlug": "display-table-of-food-orders-in-a-restaurant",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.02896670990056,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1419",
    "title": "Minimum Number of Frogs Croaking",
    "titleSlug": "minimum-number-of-frogs-croaking",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.92487445428622,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1420",
    "title": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
    "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.27154969825723,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1421",
    "title": "NPV Queries",
    "titleSlug": "npv-queries",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 82.91013768568558,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1422",
    "title": "Maximum Score After Splitting a String",
    "titleSlug": "maximum-score-after-splitting-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.12331810355055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1423",
    "title": "Maximum Points You Can Obtain from Cards",
    "titleSlug": "maximum-points-you-can-obtain-from-cards",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.61184943062795,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1424",
    "title": "Diagonal Traverse II",
    "titleSlug": "diagonal-traverse-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.203904234240596,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1425",
    "title": "Constrained Subsequence Sum",
    "titleSlug": "constrained-subsequence-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.356636738034936,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1426",
    "title": "Counting Elements",
    "titleSlug": "counting-elements",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 60.59443141426161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1427",
    "title": "Perform String Shifts",
    "titleSlug": "perform-string-shifts",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 55.908379793782046,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1428",
    "title": "Leftmost Column with at Least a One",
    "titleSlug": "leftmost-column-with-at-least-a-one",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.952101097258556,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1429",
    "title": "First Unique Number",
    "titleSlug": "first-unique-number",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.3903500034995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1430",
    "title": "Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree",
    "titleSlug": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.368150191444684,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1431",
    "title": "Kids With the Greatest Number of Candies",
    "titleSlug": "kids-with-the-greatest-number-of-candies",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.06509657492495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1432",
    "title": "Max Difference You Can Get From Changing an Integer",
    "titleSlug": "max-difference-you-can-get-from-changing-an-integer",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.82407193912843,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1433",
    "title": "Check If a String Can Break Another String",
    "titleSlug": "check-if-a-string-can-break-another-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.59710995460082,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1434",
    "title": "Number of Ways to Wear Different Hats to Each Other",
    "titleSlug": "number-of-ways-to-wear-different-hats-to-each-other",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.97228637413395,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1435",
    "title": "Create a Session Bar Chart",
    "titleSlug": "create-a-session-bar-chart",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 74.69144559511987,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1436",
    "title": "Destination City",
    "titleSlug": "destination-city",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.4466001665888,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1437",
    "title": "Check If All 1's Are at Least Length K Places Away",
    "titleSlug": "check-if-all-1s-are-at-least-length-k-places-away",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.166631436678905,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1438",
    "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
    "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.00459087012727,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1439",
    "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
    "titleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.119296978451914,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1440",
    "title": "Evaluate Boolean Expression",
    "titleSlug": "evaluate-boolean-expression",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.99648368822037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1441",
    "title": "Build an Array With Stack Operations",
    "titleSlug": "build-an-array-with-stack-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.37835104552195,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1442",
    "title": "Count Triplets That Can Form Two Arrays of Equal XOR",
    "titleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.83836246891586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1443",
    "title": "Minimum Time to Collect All Apples in a Tree",
    "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.29460889167831,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1444",
    "title": "Number of Ways of Cutting a Pizza",
    "titleSlug": "number-of-ways-of-cutting-a-pizza",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.54043052126597,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1445",
    "title": "Apples & Oranges",
    "titleSlug": "apples-oranges",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 86.04066743227725,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1446",
    "title": "Consecutive Characters",
    "titleSlug": "consecutive-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.27760911619763,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1447",
    "title": "Simplified Fractions",
    "titleSlug": "simplified-fractions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.93530777025923,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1448",
    "title": "Count Good Nodes in Binary Tree",
    "titleSlug": "count-good-nodes-in-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.62683712643732,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1449",
    "title": "Form Largest Integer With Digits That Add up to Target",
    "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.111200213846566,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1450",
    "title": "Number of Students Doing Homework at a Given Time",
    "titleSlug": "number-of-students-doing-homework-at-a-given-time",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.69173708722315,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1451",
    "title": "Rearrange Words in a Sentence",
    "titleSlug": "rearrange-words-in-a-sentence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.37384777027978,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1452",
    "title": "People Whose List of Favorite Companies Is Not a Subset of Another List",
    "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.01122822268101,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1453",
    "title": "Maximum Number of Darts Inside of a Circular Dartboard",
    "titleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.325341787200315,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1454",
    "title": "Active Users",
    "titleSlug": "active-users",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 36.571506646734505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1455",
    "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
    "titleSlug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.73485490551849,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1456",
    "title": "Maximum Number of Vowels in a Substring of Given Length",
    "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.01395734469233,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1457",
    "title": "Pseudo-Palindromic Paths in a Binary Tree",
    "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.34537037855549,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1458",
    "title": "Max Dot Product of Two Subsequences",
    "titleSlug": "max-dot-product-of-two-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.39390367751165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1459",
    "title": "Rectangles Area",
    "titleSlug": "rectangles-area",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.58658982288446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1460",
    "title": "Make Two Arrays Equal by Reversing Subarrays",
    "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.81989994441356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1461",
    "title": "Check If a String Contains All Binary Codes of Size K",
    "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.76398179693134,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1462",
    "title": "Course Schedule IV",
    "titleSlug": "course-schedule-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.61870162691518,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1463",
    "title": "Cherry Pickup II",
    "titleSlug": "cherry-pickup-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 72.14693773552013,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1464",
    "title": "Maximum Product of Two Elements in an Array",
    "titleSlug": "maximum-product-of-two-elements-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.42314935535275,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1465",
    "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
    "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.28900930481943,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1466",
    "title": "Reorder Routes to Make All Paths Lead to the City Zero",
    "titleSlug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.36290784073032,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1467",
    "title": "Probability of a Two Boxes Having The Same Number of Distinct Balls",
    "titleSlug": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.57422182267671,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Probability and Statistics",
        "slug": "probability-and-statistics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1468",
    "title": "Calculate Salaries",
    "titleSlug": "calculate-salaries",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.60422395776042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1469",
    "title": "Find All The Lonely Nodes",
    "titleSlug": "find-all-the-lonely-nodes",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 84.02747720704244,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1470",
    "title": "Shuffle the Array",
    "titleSlug": "shuffle-the-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.89098495627567,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1471",
    "title": "The k Strongest Values in an Array",
    "titleSlug": "the-k-strongest-values-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.22904224729042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1472",
    "title": "Design Browser History",
    "titleSlug": "design-browser-history",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.977651888672,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1473",
    "title": "Paint House III",
    "titleSlug": "paint-house-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.09681147239586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1474",
    "title": "Delete N Nodes After M Nodes of a Linked List",
    "titleSlug": "delete-n-nodes-after-m-nodes-of-a-linked-list",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 74.42524500773709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1475",
    "title": "Final Prices With a Special Discount in a Shop",
    "titleSlug": "final-prices-with-a-special-discount-in-a-shop",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.48150861578215,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1476",
    "title": "Subrectangle Queries",
    "titleSlug": "subrectangle-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.09730212813494,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1477",
    "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
    "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.61300267178188,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1478",
    "title": "Allocate Mailboxes",
    "titleSlug": "allocate-mailboxes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.02290437249374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1479",
    "title": "Sales by Day of the Week",
    "titleSlug": "sales-by-day-of-the-week",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 76.77030645641179,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1480",
    "title": "Running Sum of 1d Array",
    "titleSlug": "running-sum-of-1d-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.89288164315441,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1481",
    "title": "Least Number of Unique Integers after K Removals",
    "titleSlug": "least-number-of-unique-integers-after-k-removals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.56567639529407,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1482",
    "title": "Minimum Number of Days to Make m Bouquets",
    "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.81230893509503,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1483",
    "title": "Kth Ancestor of a Tree Node",
    "titleSlug": "kth-ancestor-of-a-tree-node",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.49460980509423,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1484",
    "title": "Group Sold Products By The Date",
    "titleSlug": "group-sold-products-by-the-date",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.88930972774814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1485",
    "title": "Clone Binary Tree With Random Pointer",
    "titleSlug": "clone-binary-tree-with-random-pointer",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.95404142548294,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1486",
    "title": "XOR Operation in an Array",
    "titleSlug": "xor-operation-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.14910167888812,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1487",
    "title": "Making File Names Unique",
    "titleSlug": "making-file-names-unique",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.18588688636455,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1488",
    "title": "Avoid Flood in The City",
    "titleSlug": "avoid-flood-in-the-city",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.05122468509945,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1489",
    "title": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
    "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.19231914260196,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Minimum Spanning Tree",
        "slug": "minimum-spanning-tree"
      },
      {
        "name": "Strongly Connected Component",
        "slug": "strongly-connected-component"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1490",
    "title": "Clone N-ary Tree",
    "titleSlug": "clone-n-ary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.150283955868,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1491",
    "title": "Average Salary Excluding the Minimum and Maximum Salary",
    "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.460054615843966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1492",
    "title": "The kth Factor of n",
    "titleSlug": "the-kth-factor-of-n",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.80374303870883,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1493",
    "title": "Longest Subarray of 1's After Deleting One Element",
    "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.89706106753746,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1494",
    "title": "Parallel Courses II",
    "titleSlug": "parallel-courses-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.866952896832334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1495",
    "title": "Friendly Movies Streamed Last Month",
    "titleSlug": "friendly-movies-streamed-last-month",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 48.949248381274536,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1496",
    "title": "Path Crossing",
    "titleSlug": "path-crossing",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.54360841800288,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1497",
    "title": "Check If Array Pairs Are Divisible by k",
    "titleSlug": "check-if-array-pairs-are-divisible-by-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.17984477017908,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1498",
    "title": "Number of Subsequences That Satisfy the Given Sum Condition",
    "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.42046301053835,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1499",
    "title": "Max Value of Equation",
    "titleSlug": "max-value-of-equation",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.757187010457685,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1500",
    "title": "Design a File Sharing System",
    "titleSlug": "design-a-file-sharing-system",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.84984900625044,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1501",
    "title": "Countries You Can Safely Invest In",
    "titleSlug": "countries-you-can-safely-invest-in",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.553078556263266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1502",
    "title": "Can Make Arithmetic Progression From Sequence",
    "titleSlug": "can-make-arithmetic-progression-from-sequence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.49325699962695,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1503",
    "title": "Last Moment Before All Ants Fall Out of a Plank",
    "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.23415008091763,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1504",
    "title": "Count Submatrices With All Ones",
    "titleSlug": "count-submatrices-with-all-ones",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.04074424158003,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1505",
    "title": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits",
    "titleSlug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.52213770883847,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1506",
    "title": "Find Root of N-Ary Tree",
    "titleSlug": "find-root-of-n-ary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 78.43452380952381,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1507",
    "title": "Reformat Date",
    "titleSlug": "reformat-date",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.65064778547756,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1508",
    "title": "Range Sum of Sorted Subarray Sums",
    "titleSlug": "range-sum-of-sorted-subarray-sums",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.09783509140111,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1509",
    "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
    "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.19101402684996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1510",
    "title": "Stone Game IV",
    "titleSlug": "stone-game-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.499948569497306,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1511",
    "title": "Customer Order Frequency",
    "titleSlug": "customer-order-frequency",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 66.53605015673982,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1512",
    "title": "Number of Good Pairs",
    "titleSlug": "number-of-good-pairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.67140010579662,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1513",
    "title": "Number of Substrings With Only 1s",
    "titleSlug": "number-of-substrings-with-only-1s",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.23959005106932,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1514",
    "title": "Path with Maximum Probability",
    "titleSlug": "path-with-maximum-probability",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.36651273021252,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1515",
    "title": "Best Position for a Service Centre",
    "titleSlug": "best-position-for-a-service-centre",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.89409574055396,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Randomized",
        "slug": "randomized"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1516",
    "title": "Move Sub-Tree of N-Ary Tree",
    "titleSlug": "move-sub-tree-of-n-ary-tree",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 60.02824858757062,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1517",
    "title": "Find Users With Valid E-Mails",
    "titleSlug": "find-users-with-valid-e-mails",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 39.04396250015794,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1518",
    "title": "Water Bottles",
    "titleSlug": "water-bottles",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.7376342854689,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1519",
    "title": "Number of Nodes in the Sub-Tree With the Same Label",
    "titleSlug": "number-of-nodes-in-the-sub-tree-with-the-same-label",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.17934539835082,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1520",
    "title": "Maximum Number of Non-Overlapping Substrings",
    "titleSlug": "maximum-number-of-non-overlapping-substrings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.79567108905907,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1521",
    "title": "Find a Value of a Mysterious Function Closest to Target",
    "titleSlug": "find-a-value-of-a-mysterious-function-closest-to-target",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.33663366336634,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1522",
    "title": "Diameter of N-Ary Tree",
    "titleSlug": "diameter-of-n-ary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.36538412827073,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1523",
    "title": "Count Odd Numbers in an Interval Range",
    "titleSlug": "count-odd-numbers-in-an-interval-range",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.87673698914625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1524",
    "title": "Number of Sub-arrays With Odd Sum",
    "titleSlug": "number-of-sub-arrays-with-odd-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.88829834439372,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1525",
    "title": "Number of Good Ways to Split a String",
    "titleSlug": "number-of-good-ways-to-split-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.39333299096724,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1526",
    "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
    "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 72.79970865107656,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1527",
    "title": "Patients With a Condition",
    "titleSlug": "patients-with-a-condition",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 38.87833643886419,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1528",
    "title": "Shuffle String",
    "titleSlug": "shuffle-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.21194745393477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1529",
    "title": "Minimum Suffix Flips",
    "titleSlug": "minimum-suffix-flips",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.73851474886749,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1530",
    "title": "Number of Good Leaf Nodes Pairs",
    "titleSlug": "number-of-good-leaf-nodes-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.77331359312534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1531",
    "title": "String Compression II",
    "titleSlug": "string-compression-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.100726837979664,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1532",
    "title": "The Most Recent Three Orders",
    "titleSlug": "the-most-recent-three-orders",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.05752163095548,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1533",
    "title": "Find the Index of the Large Integer",
    "titleSlug": "find-the-index-of-the-large-integer",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.66655695619261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1534",
    "title": "Count Good Triplets",
    "titleSlug": "count-good-triplets",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.4963251242517,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1535",
    "title": "Find the Winner of an Array Game",
    "titleSlug": "find-the-winner-of-an-array-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.82280871022394,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1536",
    "title": "Minimum Swaps to Arrange a Binary Grid",
    "titleSlug": "minimum-swaps-to-arrange-a-binary-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.48202797777109,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1537",
    "title": "Get the Maximum Score",
    "titleSlug": "get-the-maximum-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.35791496516935,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1538",
    "title": "Guess the Majority in a Hidden Array",
    "titleSlug": "guess-the-majority-in-a-hidden-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.38065414057063,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1539",
    "title": "Kth Missing Positive Number",
    "titleSlug": "kth-missing-positive-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.84015917138449,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1540",
    "title": "Can Convert String in K Moves",
    "titleSlug": "can-convert-string-in-k-moves",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.492484770563564,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1541",
    "title": "Minimum Insertions to Balance a Parentheses String",
    "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.36666779283084,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1542",
    "title": "Find Longest Awesome Substring",
    "titleSlug": "find-longest-awesome-substring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.811505507955935,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1543",
    "title": "Fix Product Name Format",
    "titleSlug": "fix-product-name-format",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 58.78108883977339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1544",
    "title": "Make The String Great",
    "titleSlug": "make-the-string-great",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.33450753335741,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1545",
    "title": "Find Kth Bit in Nth Binary String",
    "titleSlug": "find-kth-bit-in-nth-binary-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.15933450919205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1546",
    "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
    "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.403581505153454,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1547",
    "title": "Minimum Cost to Cut a Stick",
    "titleSlug": "minimum-cost-to-cut-a-stick",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.46849980007253,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1548",
    "title": "The Most Similar Path in a Graph",
    "titleSlug": "the-most-similar-path-in-a-graph",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 59.315132501168144,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1549",
    "title": "The Most Recent Orders for Each Product",
    "titleSlug": "the-most-recent-orders-for-each-product",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.89235493213302,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1550",
    "title": "Three Consecutive Odds",
    "titleSlug": "three-consecutive-odds",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.4589543142258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1551",
    "title": "Minimum Operations to Make Array Equal",
    "titleSlug": "minimum-operations-to-make-array-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.51624378913944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1552",
    "title": "Magnetic Force Between Two Balls",
    "titleSlug": "magnetic-force-between-two-balls",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.6047598570351,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1553",
    "title": "Minimum Number of Days to Eat N Oranges",
    "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.86992476738959,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1554",
    "title": "Strings Differ by One Character",
    "titleSlug": "strings-differ-by-one-character",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.728591943163785,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1555",
    "title": "Bank Account Summary",
    "titleSlug": "bank-account-summary",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.063278680653916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1556",
    "title": "Thousand Separator",
    "titleSlug": "thousand-separator",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.55062168455918,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1557",
    "title": "Minimum Number of Vertices to Reach All Nodes",
    "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.28986957885773,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1558",
    "title": "Minimum Numbers of Function Calls to Make Target Array",
    "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.75637629607205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1559",
    "title": "Detect Cycles in 2D Grid",
    "titleSlug": "detect-cycles-in-2d-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.44356503785272,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1560",
    "title": "Most Visited Sector in  a Circular Track",
    "titleSlug": "most-visited-sector-in-a-circular-track",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.49992892230418,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1561",
    "title": "Maximum Number of Coins You Can Get",
    "titleSlug": "maximum-number-of-coins-you-can-get",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.62721772125936,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1562",
    "title": "Find Latest Group of Size M",
    "titleSlug": "find-latest-group-of-size-m",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.40286349049617,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1563",
    "title": "Stone Game V",
    "titleSlug": "stone-game-v",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.48766971924127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1564",
    "title": "Put Boxes Into the Warehouse I",
    "titleSlug": "put-boxes-into-the-warehouse-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.30841261517718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1565",
    "title": "Unique Orders and Customers Per Month",
    "titleSlug": "unique-orders-and-customers-per-month",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 81.95360993139496,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1566",
    "title": "Detect Pattern of Length M Repeated K or More Times",
    "titleSlug": "detect-pattern-of-length-m-repeated-k-or-more-times",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.5742181586994,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1567",
    "title": "Maximum Length of Subarray With Positive Product",
    "titleSlug": "maximum-length-of-subarray-with-positive-product",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.527905862131654,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1568",
    "title": "Minimum Number of Days to Disconnect Island",
    "titleSlug": "minimum-number-of-days-to-disconnect-island",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.91540420967958,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Strongly Connected Component",
        "slug": "strongly-connected-component"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1569",
    "title": "Number of Ways to Reorder Array to Get Same BST",
    "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.74839943168862,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1570",
    "title": "Dot Product of Two Sparse Vectors",
    "titleSlug": "dot-product-of-two-sparse-vectors",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 89.92256516523068,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1571",
    "title": "Warehouse Manager",
    "titleSlug": "warehouse-manager",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.36593886462882,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1572",
    "title": "Matrix Diagonal Sum",
    "titleSlug": "matrix-diagonal-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.91004476403214,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1573",
    "title": "Number of Ways to Split a String",
    "titleSlug": "number-of-ways-to-split-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.11465827784338,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1574",
    "title": "Shortest Subarray to be Removed to Make Array Sorted",
    "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.36732232710941,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1575",
    "title": "Count All Possible Routes",
    "titleSlug": "count-all-possible-routes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.91261919026778,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1576",
    "title": "Replace All ?'s to Avoid Consecutive Repeating Characters",
    "titleSlug": "replace-all-s-to-avoid-consecutive-repeating-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.191543882126844,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1577",
    "title": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
    "titleSlug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.53259413729379,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1578",
    "title": "Minimum Time to Make Rope Colorful",
    "titleSlug": "minimum-time-to-make-rope-colorful",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.35552065526906,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1579",
    "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
    "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 70.30997715536849,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1580",
    "title": "Put Boxes Into the Warehouse II",
    "titleSlug": "put-boxes-into-the-warehouse-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.8034931553038,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1581",
    "title": "Customer Who Visited but Did Not Make Any Transactions",
    "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.61614901078181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1582",
    "title": "Special Positions in a Binary Matrix",
    "titleSlug": "special-positions-in-a-binary-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.75380690119309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1583",
    "title": "Count Unhappy Friends",
    "titleSlug": "count-unhappy-friends",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.27324263038548,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1584",
    "title": "Min Cost to Connect All Points",
    "titleSlug": "min-cost-to-connect-all-points",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.70234459427712,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Minimum Spanning Tree",
        "slug": "minimum-spanning-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1585",
    "title": "Check If String Is Transformable With Substring Sort Operations",
    "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.77462350701056,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1586",
    "title": "Binary Search Tree Iterator II",
    "titleSlug": "binary-search-tree-iterator-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.3328285887341,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Iterator",
        "slug": "iterator"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1587",
    "title": "Bank Account Summary II",
    "titleSlug": "bank-account-summary-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.18465830942743,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1588",
    "title": "Sum of All Odd Length Subarrays",
    "titleSlug": "sum-of-all-odd-length-subarrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.65698404789141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1589",
    "title": "Maximum Sum Obtained of Any Permutation",
    "titleSlug": "maximum-sum-obtained-of-any-permutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.74824792106904,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1590",
    "title": "Make Sum Divisible by P",
    "titleSlug": "make-sum-divisible-by-p",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.40497775298291,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1591",
    "title": "Strange Printer II",
    "titleSlug": "strange-printer-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.261641862698035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1592",
    "title": "Rearrange Spaces Between Words",
    "titleSlug": "rearrange-spaces-between-words",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.039352958804365,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1593",
    "title": "Split a String Into the Max Number of Unique Substrings",
    "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.45962785412783,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1594",
    "title": "Maximum Non Negative Product in a Matrix",
    "titleSlug": "maximum-non-negative-product-in-a-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.26239780112273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1595",
    "title": "Minimum Cost to Connect Two Groups of Points",
    "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.98091934084995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1596",
    "title": "The Most Frequently Ordered Products for Each Customer",
    "titleSlug": "the-most-frequently-ordered-products-for-each-customer",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.73508016229066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1597",
    "title": "Build Binary Expression Tree From Infix Expression",
    "titleSlug": "build-binary-expression-tree-from-infix-expression",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 62.583885353076155,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1598",
    "title": "Crawler Log Folder",
    "titleSlug": "crawler-log-folder",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.60491926524057,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1599",
    "title": "Maximum Profit of Operating a Centennial Wheel",
    "titleSlug": "maximum-profit-of-operating-a-centennial-wheel",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.2440382520276,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1600",
    "title": "Throne Inheritance",
    "titleSlug": "throne-inheritance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.13860858915307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1601",
    "title": "Maximum Number of Achievable Transfer Requests",
    "titleSlug": "maximum-number-of-achievable-transfer-requests",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.49900602629086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1602",
    "title": "Find Nearest Right Node in Binary Tree",
    "titleSlug": "find-nearest-right-node-in-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.04646981747265,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1603",
    "title": "Design Parking System",
    "titleSlug": "design-parking-system",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.13356188343944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1604",
    "title": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
    "titleSlug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.05406276437175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1605",
    "title": "Find Valid Matrix Given Row and Column Sums",
    "titleSlug": "find-valid-matrix-given-row-and-column-sums",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.80812343261624,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1606",
    "title": "Find Servers That Handled Most Number of Requests",
    "titleSlug": "find-servers-that-handled-most-number-of-requests",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.79192273924495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1607",
    "title": "Sellers With No Sales",
    "titleSlug": "sellers-with-no-sales",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 54.27845312167457,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1608",
    "title": "Special Array With X Elements Greater Than or Equal X",
    "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.72909916707351,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1609",
    "title": "Even Odd Tree",
    "titleSlug": "even-odd-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.78737528464237,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1610",
    "title": "Maximum Number of Visible Points",
    "titleSlug": "maximum-number-of-visible-points",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.830034888858414,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1611",
    "title": "Minimum One Bit Operations to Make Integers Zero",
    "titleSlug": "minimum-one-bit-operations-to-make-integers-zero",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 73.21377739823512,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1612",
    "title": "Check If Two Expression Trees are Equivalent",
    "titleSlug": "check-if-two-expression-trees-are-equivalent",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.39195078185081,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1613",
    "title": "Find the Missing IDs",
    "titleSlug": "find-the-missing-ids",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.91005982933926,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1614",
    "title": "Maximum Nesting Depth of the Parentheses",
    "titleSlug": "maximum-nesting-depth-of-the-parentheses",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.54044635764984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1615",
    "title": "Maximal Network Rank",
    "titleSlug": "maximal-network-rank",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.69862130129808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1616",
    "title": "Split Two Strings to Make Palindrome",
    "titleSlug": "split-two-strings-to-make-palindrome",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.82497509133178,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1617",
    "title": "Count Subtrees With Max Distance Between Cities",
    "titleSlug": "count-subtrees-with-max-distance-between-cities",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.70177622444584,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1618",
    "title": "Maximum Font to Fit a Sentence in a Screen",
    "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.588958087864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1619",
    "title": "Mean of Array After Removing Some Elements",
    "titleSlug": "mean-of-array-after-removing-some-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.90035059818557,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1620",
    "title": "Coordinate With Maximum Network Quality",
    "titleSlug": "coordinate-with-maximum-network-quality",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.741364421416236,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1621",
    "title": "Number of Sets of K Non-Overlapping Line Segments",
    "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.08220573257675,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1622",
    "title": "Fancy Sequence",
    "titleSlug": "fancy-sequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.7289020445377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1623",
    "title": "All Valid Triplets That Can Represent a Country",
    "titleSlug": "all-valid-triplets-that-can-represent-a-country",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.80065945093541,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1624",
    "title": "Largest Substring Between Two Equal Characters",
    "titleSlug": "largest-substring-between-two-equal-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.24924773735789,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1625",
    "title": "Lexicographically Smallest String After Applying Operations",
    "titleSlug": "lexicographically-smallest-string-after-applying-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.75908429001997,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1626",
    "title": "Best Team With No Conflicts",
    "titleSlug": "best-team-with-no-conflicts",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.49879435802232,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1627",
    "title": "Graph Connectivity With Threshold",
    "titleSlug": "graph-connectivity-with-threshold",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.75433060440894,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1628",
    "title": "Design an Expression Tree With Evaluate Function",
    "titleSlug": "design-an-expression-tree-with-evaluate-function",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 82.43461964392196,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1629",
    "title": "Slowest Key",
    "titleSlug": "slowest-key",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.39306129975501,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1630",
    "title": "Arithmetic Subarrays",
    "titleSlug": "arithmetic-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.76212522045854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1631",
    "title": "Path With Minimum Effort",
    "titleSlug": "path-with-minimum-effort",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.253002244974475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1632",
    "title": "Rank Transform of a Matrix",
    "titleSlug": "rank-transform-of-a-matrix",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.69747603271394,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1633",
    "title": "Percentage of Users Attended a Contest",
    "titleSlug": "percentage-of-users-attended-a-contest",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.55574363374907,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1634",
    "title": "Add Two Polynomials Represented as Linked Lists",
    "titleSlug": "add-two-polynomials-represented-as-linked-lists",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.82743480071161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1635",
    "title": "Hopper Company Queries I",
    "titleSlug": "hopper-company-queries-i",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 48.273967585385954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1636",
    "title": "Sort Array by Increasing Frequency",
    "titleSlug": "sort-array-by-increasing-frequency",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.46333193079722,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1637",
    "title": "Widest Vertical Area Between Two Points Containing No Points",
    "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.10329702002711,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1638",
    "title": "Count Substrings That Differ by One Character",
    "titleSlug": "count-substrings-that-differ-by-one-character",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.00802494885087,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1639",
    "title": "Number of Ways to Form a Target String Given a Dictionary",
    "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.80783765842145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1640",
    "title": "Check Array Formation Through Concatenation",
    "titleSlug": "check-array-formation-through-concatenation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.104515012942734,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1641",
    "title": "Count Sorted Vowel Strings",
    "titleSlug": "count-sorted-vowel-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.06454071809702,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1642",
    "title": "Furthest Building You Can Reach",
    "titleSlug": "furthest-building-you-can-reach",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.52412978525832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1643",
    "title": "Kth Smallest Instructions",
    "titleSlug": "kth-smallest-instructions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.17435472167513,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1644",
    "title": "Lowest Common Ancestor of a Binary Tree II",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.10323228459406,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1645",
    "title": "Hopper Company Queries II",
    "titleSlug": "hopper-company-queries-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.69671688668597,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1646",
    "title": "Get Maximum in Generated Array",
    "titleSlug": "get-maximum-in-generated-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.20145512167902,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1647",
    "title": "Minimum Deletions to Make Character Frequencies Unique",
    "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.39654528029666,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1648",
    "title": "Sell Diminishing-Valued Colored Balls",
    "titleSlug": "sell-diminishing-valued-colored-balls",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.880183139388627,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1649",
    "title": "Create Sorted Array through Instructions",
    "titleSlug": "create-sorted-array-through-instructions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.67812454095055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1650",
    "title": "Lowest Common Ancestor of a Binary Tree III",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 82.75742490000852,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1651",
    "title": "Hopper Company Queries III",
    "titleSlug": "hopper-company-queries-iii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 65.3663177925785,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1652",
    "title": "Defuse the Bomb",
    "titleSlug": "defuse-the-bomb",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.28727364106109,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1653",
    "title": "Minimum Deletions to Make String Balanced",
    "titleSlug": "minimum-deletions-to-make-string-balanced",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.60146595454647,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1654",
    "title": "Minimum Jumps to Reach Home",
    "titleSlug": "minimum-jumps-to-reach-home",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.34890625656036,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1655",
    "title": "Distribute Repeating Integers",
    "titleSlug": "distribute-repeating-integers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.076628352490424,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1656",
    "title": "Design an Ordered Stream",
    "titleSlug": "design-an-ordered-stream",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.35412200194317,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1657",
    "title": "Determine if Two Strings Are Close",
    "titleSlug": "determine-if-two-strings-are-close",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.20744881707925,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1658",
    "title": "Minimum Operations to Reduce X to Zero",
    "titleSlug": "minimum-operations-to-reduce-x-to-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.23611136434081,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1659",
    "title": "Maximize Grid Happiness",
    "titleSlug": "maximize-grid-happiness",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.26138522655305,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1660",
    "title": "Correct a Binary Tree",
    "titleSlug": "correct-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.18665954819981,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1661",
    "title": "Average Time of Process per Machine",
    "titleSlug": "average-time-of-process-per-machine",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.57545116697534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1662",
    "title": "Check If Two String Arrays are Equivalent",
    "titleSlug": "check-if-two-string-arrays-are-equivalent",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.91298791359746,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1663",
    "title": "Smallest String With A Given Numeric Value",
    "titleSlug": "smallest-string-with-a-given-numeric-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.2548465717608,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1664",
    "title": "Ways to Make a Fair Array",
    "titleSlug": "ways-to-make-a-fair-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.90361381087902,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1665",
    "title": "Minimum Initial Energy to Finish Tasks",
    "titleSlug": "minimum-initial-energy-to-finish-tasks",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.04332250270765,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1666",
    "title": "Change the Root of a Binary Tree",
    "titleSlug": "change-the-root-of-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.94767137624281,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1667",
    "title": "Fix Names in a Table",
    "titleSlug": "fix-names-in-a-table",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.73331253661617,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1668",
    "title": "Maximum Repeating Substring",
    "titleSlug": "maximum-repeating-substring",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 40.20456333595594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1669",
    "title": "Merge In Between Linked Lists",
    "titleSlug": "merge-in-between-linked-lists",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.60019612791118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1670",
    "title": "Design Front Middle Back Queue",
    "titleSlug": "design-front-middle-back-queue",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.52962957542407,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1671",
    "title": "Minimum Number of Removals to Make Mountain Array",
    "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.8335031888255,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1672",
    "title": "Richest Customer Wealth",
    "titleSlug": "richest-customer-wealth",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.59208320932346,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1673",
    "title": "Find the Most Competitive Subsequence",
    "titleSlug": "find-the-most-competitive-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.26635482970779,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1674",
    "title": "Minimum Moves to Make Array Complementary",
    "titleSlug": "minimum-moves-to-make-array-complementary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.694351230425056,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1675",
    "title": "Minimize Deviation in Array",
    "titleSlug": "minimize-deviation-in-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.917618695973246,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1676",
    "title": "Lowest Common Ancestor of a Binary Tree IV",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 79.2795791996804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1677",
    "title": "Product's Worth Over Invoices",
    "titleSlug": "products-worth-over-invoices",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 38.40419927020118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1678",
    "title": "Goal Parser Interpretation",
    "titleSlug": "goal-parser-interpretation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.87926521213649,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1679",
    "title": "Max Number of K-Sum Pairs",
    "titleSlug": "max-number-of-k-sum-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.62600295430893,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1680",
    "title": "Concatenation of Consecutive Binary Numbers",
    "titleSlug": "concatenation-of-consecutive-binary-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.79460269865068,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1681",
    "title": "Minimum Incompatibility",
    "titleSlug": "minimum-incompatibility",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.50923226433431,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1682",
    "title": "Longest Palindromic Subsequence II",
    "titleSlug": "longest-palindromic-subsequence-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.24287564766839,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1683",
    "title": "Invalid Tweets",
    "titleSlug": "invalid-tweets",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.35801859919687,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1684",
    "title": "Count the Number of Consistent Strings",
    "titleSlug": "count-the-number-of-consistent-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.35901720837256,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1685",
    "title": "Sum of Absolute Differences in a Sorted Array",
    "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.1155026715677,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1686",
    "title": "Stone Game VI",
    "titleSlug": "stone-game-vi",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.901257946706345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1687",
    "title": "Delivering Boxes from Storage to Ports",
    "titleSlug": "delivering-boxes-from-storage-to-ports",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.60793575814832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1688",
    "title": "Count of Matches in Tournament",
    "titleSlug": "count-of-matches-in-tournament",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.17530374053916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1689",
    "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
    "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 88.6948617868791,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1690",
    "title": "Stone Game VII",
    "titleSlug": "stone-game-vii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.57998121223168,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1691",
    "title": "Maximum Height by Stacking Cuboids ",
    "titleSlug": "maximum-height-by-stacking-cuboids",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.070591681312244,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1692",
    "title": "Count Ways to Distribute Candies",
    "titleSlug": "count-ways-to-distribute-candies",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 63.6,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1693",
    "title": "Daily Leads and Partners",
    "titleSlug": "daily-leads-and-partners",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.67222543325217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1694",
    "title": "Reformat Phone Number",
    "titleSlug": "reformat-phone-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.24460162741885,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1695",
    "title": "Maximum Erasure Value",
    "titleSlug": "maximum-erasure-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.975225787702804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1696",
    "title": "Jump Game VI",
    "titleSlug": "jump-game-vi",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.19403884694785,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1697",
    "title": "Checking Existence of Edge Length Limited Paths",
    "titleSlug": "checking-existence-of-edge-length-limited-paths",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.98537349817168,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1698",
    "title": "Number of Distinct Substrings in a String",
    "titleSlug": "number-of-distinct-substrings-in-a-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.60594620103822,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1699",
    "title": "Number of Calls Between Two Persons",
    "titleSlug": "number-of-calls-between-two-persons",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.80730069665543,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1700",
    "title": "Number of Students Unable to Eat Lunch",
    "titleSlug": "number-of-students-unable-to-eat-lunch",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.93474592207805,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1701",
    "title": "Average Waiting Time",
    "titleSlug": "average-waiting-time",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 73.04442385093337,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1702",
    "title": "Maximum Binary String After Change",
    "titleSlug": "maximum-binary-string-after-change",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.69517043051679,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1703",
    "title": "Minimum Adjacent Swaps for K Consecutive Ones",
    "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.11423699914749,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1704",
    "title": "Determine if String Halves Are Alike",
    "titleSlug": "determine-if-string-halves-are-alike",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.6887992603628,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1705",
    "title": "Maximum Number of Eaten Apples",
    "titleSlug": "maximum-number-of-eaten-apples",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.0319697390136,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1706",
    "title": "Where Will the Ball Fall",
    "titleSlug": "where-will-the-ball-fall",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.15341864214896,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1707",
    "title": "Maximum XOR With an Element From Array",
    "titleSlug": "maximum-xor-with-an-element-from-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.703592648120384,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1708",
    "title": "Largest Subarray Length K",
    "titleSlug": "largest-subarray-length-k",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 65.50417469492615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1709",
    "title": "Biggest Window Between Visits",
    "titleSlug": "biggest-window-between-visits",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.81204363111873,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1710",
    "title": "Maximum Units on a Truck",
    "titleSlug": "maximum-units-on-a-truck",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.48449532244133,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1711",
    "title": "Count Good Meals",
    "titleSlug": "count-good-meals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.05662593075325,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1712",
    "title": "Ways to Split Array Into Three Subarrays",
    "titleSlug": "ways-to-split-array-into-three-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.77868390231206,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1713",
    "title": "Minimum Operations to Make a Subsequence",
    "titleSlug": "minimum-operations-to-make-a-subsequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.153197243866316,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1714",
    "title": "Sum Of Special Evenly-Spaced Elements In Array",
    "titleSlug": "sum-of-special-evenly-spaced-elements-in-array",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.50702121302659,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1715",
    "title": "Count Apples and Oranges",
    "titleSlug": "count-apples-and-oranges",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.71352085993163,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1716",
    "title": "Calculate Money in Leetcode Bank",
    "titleSlug": "calculate-money-in-leetcode-bank",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.64893059780002,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1717",
    "title": "Maximum Score From Removing Substrings",
    "titleSlug": "maximum-score-from-removing-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.54085529465469,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1718",
    "title": "Construct the Lexicographically Largest Valid Sequence",
    "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.91015484217631,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1719",
    "title": "Number Of Ways To Reconstruct A Tree",
    "titleSlug": "number-of-ways-to-reconstruct-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.47871220099293,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1720",
    "title": "Decode XORed Array",
    "titleSlug": "decode-xored-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.14091920861317,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1721",
    "title": "Swapping Nodes in a Linked List",
    "titleSlug": "swapping-nodes-in-a-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.81329872881699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1722",
    "title": "Minimize Hamming Distance After Swap Operations",
    "titleSlug": "minimize-hamming-distance-after-swap-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.76914350538854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1723",
    "title": "Find Minimum Time to Finish All Jobs",
    "titleSlug": "find-minimum-time-to-finish-all-jobs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.51856819127781,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1724",
    "title": "Checking Existence of Edge Length Limited Paths II",
    "titleSlug": "checking-existence-of-edge-length-limited-paths-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 51.61635052097249,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Minimum Spanning Tree",
        "slug": "minimum-spanning-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1725",
    "title": "Number Of Rectangles That Can Form The Largest Square",
    "titleSlug": "number-of-rectangles-that-can-form-the-largest-square",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.18346007604563,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1726",
    "title": "Tuple with Same Product",
    "titleSlug": "tuple-with-same-product",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.13256110043189,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1727",
    "title": "Largest Submatrix With Rearrangements",
    "titleSlug": "largest-submatrix-with-rearrangements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.2100189694553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1728",
    "title": "Cat and Mouse II",
    "titleSlug": "cat-and-mouse-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.83923410404625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1729",
    "title": "Find Followers Count",
    "titleSlug": "find-followers-count",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.44380230246429,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1730",
    "title": "Shortest Path to Get Food",
    "titleSlug": "shortest-path-to-get-food",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.91546857889717,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1731",
    "title": "The Number of Employees Which Report to Each Employee",
    "titleSlug": "the-number-of-employees-which-report-to-each-employee",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.59955109304424,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1732",
    "title": "Find the Highest Altitude",
    "titleSlug": "find-the-highest-altitude",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.83068642538531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1733",
    "title": "Minimum Number of People to Teach",
    "titleSlug": "minimum-number-of-people-to-teach",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.79023037301182,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1734",
    "title": "Decode XORed Permutation",
    "titleSlug": "decode-xored-permutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.43376090659436,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1735",
    "title": "Count Ways to Make Array With Product",
    "titleSlug": "count-ways-to-make-array-with-product",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.61156711706023,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1736",
    "title": "Latest Time by Replacing Hidden Digits",
    "titleSlug": "latest-time-by-replacing-hidden-digits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.34233515612236,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1737",
    "title": "Change Minimum Characters to Satisfy One of Three Conditions",
    "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.404110237711905,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1738",
    "title": "Find Kth Largest XOR Coordinate Value",
    "titleSlug": "find-kth-largest-xor-coordinate-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.71480168550598,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1739",
    "title": "Building Boxes",
    "titleSlug": "building-boxes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.08191126279863,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1740",
    "title": "Find Distance in a Binary Tree",
    "titleSlug": "find-distance-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.1137181024148,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1741",
    "title": "Find Total Time Spent by Each Employee",
    "titleSlug": "find-total-time-spent-by-each-employee",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.65494653055997,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1742",
    "title": "Maximum Number of Balls in a Box",
    "titleSlug": "maximum-number-of-balls-in-a-box",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.46226009605502,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1743",
    "title": "Restore the Array From Adjacent Pairs",
    "titleSlug": "restore-the-array-from-adjacent-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.8962091866718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1744",
    "title": "Can You Eat Your Favorite Candy on Your Favorite Day?",
    "titleSlug": "can-you-eat-your-favorite-candy-on-your-favorite-day",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.37352020683086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1745",
    "title": "Palindrome Partitioning IV",
    "titleSlug": "palindrome-partitioning-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.95061567245355,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1746",
    "title": "Maximum Subarray Sum After One Operation",
    "titleSlug": "maximum-subarray-sum-after-one-operation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.31778033794163,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1747",
    "title": "Leetflex Banned Accounts",
    "titleSlug": "leetflex-banned-accounts",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.08283416053397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1748",
    "title": "Sum of Unique Elements",
    "titleSlug": "sum-of-unique-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.42523864301427,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1749",
    "title": "Maximum Absolute Sum of Any Subarray",
    "titleSlug": "maximum-absolute-sum-of-any-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.39617332810498,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1750",
    "title": "Minimum Length of String After Deleting Similar Ends",
    "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.975659678724995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1751",
    "title": "Maximum Number of Events That Can Be Attended II",
    "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.72637155355781,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1752",
    "title": "Check if Array Is Sorted and Rotated",
    "titleSlug": "check-if-array-is-sorted-and-rotated",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.3755809028152,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1753",
    "title": "Maximum Score From Removing Stones",
    "titleSlug": "maximum-score-from-removing-stones",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.19231802309965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1754",
    "title": "Largest Merge Of Two Strings",
    "titleSlug": "largest-merge-of-two-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.5491876215272,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1755",
    "title": "Closest Subsequence Sum",
    "titleSlug": "closest-subsequence-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.435820095180645,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1756",
    "title": "Design Most Recently Used Queue",
    "titleSlug": "design-most-recently-used-queue",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.79249030549514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1757",
    "title": "Recyclable and Low Fat Products",
    "titleSlug": "recyclable-and-low-fat-products",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.01944524539651,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1758",
    "title": "Minimum Changes To Make Alternating Binary String",
    "titleSlug": "minimum-changes-to-make-alternating-binary-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.726733515553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1759",
    "title": "Count Number of Homogenous Substrings",
    "titleSlug": "count-number-of-homogenous-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.2807908456903,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1760",
    "title": "Minimum Limit of Balls in a Bag",
    "titleSlug": "minimum-limit-of-balls-in-a-bag",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.87328481902708,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1761",
    "title": "Minimum Degree of a Connected Trio in a Graph",
    "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.850100587932566,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1762",
    "title": "Buildings With an Ocean View",
    "titleSlug": "buildings-with-an-ocean-view",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.84678416974279,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1763",
    "title": "Longest Nice Substring",
    "titleSlug": "longest-nice-substring",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.11090616330141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1764",
    "title": "Form Array by Concatenating Subarrays of Another Array",
    "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.29190510583921,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1765",
    "title": "Map of Highest Peak",
    "titleSlug": "map-of-highest-peak",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.34808230123852,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1766",
    "title": "Tree of Coprimes",
    "titleSlug": "tree-of-coprimes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.969090117544624,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1767",
    "title": "Find the Subtasks That Did Not Execute",
    "titleSlug": "find-the-subtasks-that-did-not-execute",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 78.2919991373733,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1768",
    "title": "Merge Strings Alternately",
    "titleSlug": "merge-strings-alternately",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.13777302361841,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "1769",
    "title": "Minimum Number of Operations to Move All Balls to Each Box",
    "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 90.09193429069984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1770",
    "title": "Maximum Score from Performing Multiplication Operations",
    "titleSlug": "maximum-score-from-performing-multiplication-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.70088319050931,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1771",
    "title": "Maximize Palindrome Length From Subsequences",
    "titleSlug": "maximize-palindrome-length-from-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.755944517833555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1772",
    "title": "Sort Features by Popularity",
    "titleSlug": "sort-features-by-popularity",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.15327861293,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1773",
    "title": "Count Items Matching a Rule",
    "titleSlug": "count-items-matching-a-rule",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.10663081873075,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1774",
    "title": "Closest Dessert Cost",
    "titleSlug": "closest-dessert-cost",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.10405701610468,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1775",
    "title": "Equal Sum Arrays With Minimum Number of Operations",
    "titleSlug": "equal-sum-arrays-with-minimum-number-of-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.30957541756981,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1776",
    "title": "Car Fleet II",
    "titleSlug": "car-fleet-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.98234349919743,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1777",
    "title": "Product's Price for Each Store",
    "titleSlug": "products-price-for-each-store",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 82.05286222952616,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1778",
    "title": "Shortest Path in a Hidden Grid",
    "titleSlug": "shortest-path-in-a-hidden-grid",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 44.34541858932103,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1779",
    "title": "Find Nearest Point That Has the Same X or Y Coordinate",
    "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.63881708699881,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1780",
    "title": "Check if Number is a Sum of Powers of Three",
    "titleSlug": "check-if-number-is-a-sum-of-powers-of-three",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.33479452466794,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1781",
    "title": "Sum of Beauty of All Substrings",
    "titleSlug": "sum-of-beauty-of-all-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.51670595096348,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1782",
    "title": "Count Pairs Of Nodes",
    "titleSlug": "count-pairs-of-nodes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.4412745461282,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1783",
    "title": "Grand Slam Titles",
    "titleSlug": "grand-slam-titles",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.12263119070028,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1784",
    "title": "Check if Binary String Has at Most One Segment of Ones",
    "titleSlug": "check-if-binary-string-has-at-most-one-segment-of-ones",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 39.18284392739505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1785",
    "title": "Minimum Elements to Add to Form a Given Sum",
    "titleSlug": "minimum-elements-to-add-to-form-a-given-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.58542648505878,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1786",
    "title": "Number of Restricted Paths From First to Last Node",
    "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.45949460693067,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1787",
    "title": "Make the XOR of All Segments Equal to Zero",
    "titleSlug": "make-the-xor-of-all-segments-equal-to-zero",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.344251129960995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1788",
    "title": "Maximize the Beauty of the Garden",
    "titleSlug": "maximize-the-beauty-of-the-garden",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 64.21886249100072,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1789",
    "title": "Primary Department for Each Employee",
    "titleSlug": "primary-department-for-each-employee",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.02966574807303,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1790",
    "title": "Check if One String Swap Can Make Strings Equal",
    "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.48257717971421,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1791",
    "title": "Find Center of Star Graph",
    "titleSlug": "find-center-of-star-graph",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.67794263979788,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1792",
    "title": "Maximum Average Pass Ratio",
    "titleSlug": "maximum-average-pass-ratio",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.13305524475777,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1793",
    "title": "Maximum Score of a Good Subarray",
    "titleSlug": "maximum-score-of-a-good-subarray",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.3164733596411,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1794",
    "title": "Count Pairs of Equal Substrings With Minimum Difference",
    "titleSlug": "count-pairs-of-equal-substrings-with-minimum-difference",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.90835579514825,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1795",
    "title": "Rearrange Products Table",
    "titleSlug": "rearrange-products-table",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.59490724245231,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1796",
    "title": "Second Largest Digit in a String",
    "titleSlug": "second-largest-digit-in-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.75391233867448,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1797",
    "title": "Design Authentication Manager",
    "titleSlug": "design-authentication-manager",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.09769303506431,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1798",
    "title": "Maximum Number of Consecutive Values You Can Make",
    "titleSlug": "maximum-number-of-consecutive-values-you-can-make",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.91208791208791,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1799",
    "title": "Maximize Score After N Operations",
    "titleSlug": "maximize-score-after-n-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.92949286738107,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1800",
    "title": "Maximum Ascending Subarray Sum",
    "titleSlug": "maximum-ascending-subarray-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.31508881893696,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1801",
    "title": "Number of Orders in the Backlog",
    "titleSlug": "number-of-orders-in-the-backlog",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.77971819467398,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1802",
    "title": "Maximum Value at a Given Index in a Bounded Array",
    "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.84885888023798,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1803",
    "title": "Count Pairs With XOR in a Range",
    "titleSlug": "count-pairs-with-xor-in-a-range",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.95210490544916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1804",
    "title": "Implement Trie II (Prefix Tree)",
    "titleSlug": "implement-trie-ii-prefix-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.112748127456555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1805",
    "title": "Number of Different Integers in a String",
    "titleSlug": "number-of-different-integers-in-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 39.56243644832224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1806",
    "title": "Minimum Number of Operations to Reinitialize a Permutation",
    "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.4250859669232,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1807",
    "title": "Evaluate the Bracket Pairs of a String",
    "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.62021471959316,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1808",
    "title": "Maximize Number of Nice Divisors",
    "titleSlug": "maximize-number-of-nice-divisors",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.68078868284102,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1809",
    "title": "Ad-Free Sessions",
    "titleSlug": "ad-free-sessions",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 58.70701254811153,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1810",
    "title": "Minimum Path Cost in a Hidden Grid",
    "titleSlug": "minimum-path-cost-in-a-hidden-grid",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.7966573816156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1811",
    "title": "Find Interview Candidates",
    "titleSlug": "find-interview-candidates",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.38882928573751,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1812",
    "title": "Determine Color of a Chessboard Square",
    "titleSlug": "determine-color-of-a-chessboard-square",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.56776711164079,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1813",
    "title": "Sentence Similarity III",
    "titleSlug": "sentence-similarity-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.56180221641738,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1814",
    "title": "Count Nice Pairs in an Array",
    "titleSlug": "count-nice-pairs-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.48069738480697,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1815",
    "title": "Maximum Number of Groups Getting Fresh Donuts",
    "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.92427903151185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1816",
    "title": "Truncate Sentence",
    "titleSlug": "truncate-sentence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.29616111215842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1817",
    "title": "Finding the Users Active Minutes",
    "titleSlug": "finding-the-users-active-minutes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.68149210903873,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1818",
    "title": "Minimum Absolute Sum Difference",
    "titleSlug": "minimum-absolute-sum-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.720989246417208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1819",
    "title": "Number of Different Subsequences GCDs",
    "titleSlug": "number-of-different-subsequences-gcds",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.803640313096885,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1820",
    "title": "Maximum Number of Accepted Invitations",
    "titleSlug": "maximum-number-of-accepted-invitations",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.91890292028414,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1821",
    "title": "Find Customers With Positive Revenue this Year",
    "titleSlug": "find-customers-with-positive-revenue-this-year",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.61401824291887,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1822",
    "title": "Sign of the Product of an Array",
    "titleSlug": "sign-of-the-product-of-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.86152969932841,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1823",
    "title": "Find the Winner of the Circular Game",
    "titleSlug": "find-the-winner-of-the-circular-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.13926911232626,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1824",
    "title": "Minimum Sideway Jumps",
    "titleSlug": "minimum-sideway-jumps",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.23876160762087,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1825",
    "title": "Finding MK Average",
    "titleSlug": "finding-mk-average",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.3878001812415,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1826",
    "title": "Faulty Sensor",
    "titleSlug": "faulty-sensor",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.261350059737154,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1827",
    "title": "Minimum Operations to Make the Array Increasing",
    "titleSlug": "minimum-operations-to-make-the-array-increasing",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.49390105212537,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1828",
    "title": "Queries on Number of Points Inside a Circle",
    "titleSlug": "queries-on-number-of-points-inside-a-circle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.62198749237339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1829",
    "title": "Maximum XOR for Each Query",
    "titleSlug": "maximum-xor-for-each-query",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.76531709064852,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1830",
    "title": "Minimum Number of Operations to Make String Sorted",
    "titleSlug": "minimum-number-of-operations-to-make-string-sorted",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.491642084562436,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1831",
    "title": "Maximum Transaction Each Day",
    "titleSlug": "maximum-transaction-each-day",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 82.32565379825654,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1832",
    "title": "Check if the Sentence Is Pangram",
    "titleSlug": "check-if-the-sentence-is-pangram",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.99919348862699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1833",
    "title": "Maximum Ice Cream Bars",
    "titleSlug": "maximum-ice-cream-bars",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.07970073427916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1834",
    "title": "Single-Threaded CPU",
    "titleSlug": "single-threaded-cpu",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.93502956842119,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1835",
    "title": "Find XOR Sum of All Pairs Bitwise AND",
    "titleSlug": "find-xor-sum-of-all-pairs-bitwise-and",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.071471531676025,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1836",
    "title": "Remove Duplicates From an Unsorted Linked List",
    "titleSlug": "remove-duplicates-from-an-unsorted-linked-list",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.519841424074,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1837",
    "title": "Sum of Digits in Base K",
    "titleSlug": "sum-of-digits-in-base-k",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.2787152257476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1838",
    "title": "Frequency of the Most Frequent Element",
    "titleSlug": "frequency-of-the-most-frequent-element",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.38995684582189,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1839",
    "title": "Longest Substring Of All Vowels in Order",
    "titleSlug": "longest-substring-of-all-vowels-in-order",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.02087087266261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1840",
    "title": "Maximum Building Height",
    "titleSlug": "maximum-building-height",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.01515667574932,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1841",
    "title": "League Statistics",
    "titleSlug": "league-statistics",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.51391666949181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1842",
    "title": "Next Palindrome Using Same Digits",
    "titleSlug": "next-palindrome-using-same-digits",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 53.87662705149972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1843",
    "title": "Suspicious Bank Accounts",
    "titleSlug": "suspicious-bank-accounts",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 44.45383411580595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1844",
    "title": "Replace All Digits with Characters",
    "titleSlug": "replace-all-digits-with-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.37501337368364,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1845",
    "title": "Seat Reservation Manager",
    "titleSlug": "seat-reservation-manager",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.72165678708572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1846",
    "title": "Maximum Element After Decreasing and Rearranging",
    "titleSlug": "maximum-element-after-decreasing-and-rearranging",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.74309960117364,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1847",
    "title": "Closest Room",
    "titleSlug": "closest-room",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.403020916715974,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1848",
    "title": "Minimum Distance to the Target Element",
    "titleSlug": "minimum-distance-to-the-target-element",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.22217129324586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1849",
    "title": "Splitting a String Into Descending Consecutive Values",
    "titleSlug": "splitting-a-string-into-descending-consecutive-values",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.11291144977621,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1850",
    "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
    "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.70911071769032,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1851",
    "title": "Minimum Interval to Include Each Query",
    "titleSlug": "minimum-interval-to-include-each-query",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.12670263810043,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1852",
    "title": "Distinct Numbers in Each Subarray",
    "titleSlug": "distinct-numbers-in-each-subarray",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.08076302552908,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1853",
    "title": "Convert Date Format",
    "titleSlug": "convert-date-format",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 84.99778809997788,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1854",
    "title": "Maximum Population Year",
    "titleSlug": "maximum-population-year",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.0547094765614,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1855",
    "title": "Maximum Distance Between a Pair of Values",
    "titleSlug": "maximum-distance-between-a-pair-of-values",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.08495094779606,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1856",
    "title": "Maximum Subarray Min-Product",
    "titleSlug": "maximum-subarray-min-product",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.38196774542699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1857",
    "title": "Largest Color Value in a Directed Graph",
    "titleSlug": "largest-color-value-in-a-directed-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.450323217526986,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1858",
    "title": "Longest Word With All Prefixes",
    "titleSlug": "longest-word-with-all-prefixes",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.86425014119217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1859",
    "title": "Sorting the Sentence",
    "titleSlug": "sorting-the-sentence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.92839983549028,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1860",
    "title": "Incremental Memory Leak",
    "titleSlug": "incremental-memory-leak",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.77622480506105,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1861",
    "title": "Rotating the Box",
    "titleSlug": "rotating-the-box",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.17634676664453,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1862",
    "title": "Sum of Floored Pairs",
    "titleSlug": "sum-of-floored-pairs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.184307530279092,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1863",
    "title": "Sum of All Subset XOR Totals",
    "titleSlug": "sum-of-all-subset-xor-totals",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.06962797998364,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1864",
    "title": "Minimum Number of Swaps to Make the Binary String Alternating",
    "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.68076082765711,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1865",
    "title": "Finding Pairs With a Certain Sum",
    "titleSlug": "finding-pairs-with-a-certain-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.698070232635,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1866",
    "title": "Number of Ways to Rearrange Sticks With K Sticks Visible",
    "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.261431572144126,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1867",
    "title": "Orders With Maximum Quantity Above Average",
    "titleSlug": "orders-with-maximum-quantity-above-average",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.67694495378512,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1868",
    "title": "Product of Two Run-Length Encoded Arrays",
    "titleSlug": "product-of-two-run-length-encoded-arrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.50717814140166,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1869",
    "title": "Longer Contiguous Segments of Ones than Zeros",
    "titleSlug": "longer-contiguous-segments-of-ones-than-zeros",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.809732094040456,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1870",
    "title": "Minimum Speed to Arrive on Time",
    "titleSlug": "minimum-speed-to-arrive-on-time",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.47515213184894,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1871",
    "title": "Jump Game VII",
    "titleSlug": "jump-game-vii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.9437156157427,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1872",
    "title": "Stone Game VIII",
    "titleSlug": "stone-game-viii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.51882160392799,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1873",
    "title": "Calculate Special Bonus",
    "titleSlug": "calculate-special-bonus",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.156385108269426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1874",
    "title": "Minimize Product Sum of Two Arrays",
    "titleSlug": "minimize-product-sum-of-two-arrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 89.08275580921321,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1875",
    "title": "Group Employees of the Same Salary",
    "titleSlug": "group-employees-of-the-same-salary",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.70195937443826,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1876",
    "title": "Substrings of Size Three with Distinct Characters",
    "titleSlug": "substrings-of-size-three-with-distinct-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.07672417691286,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1877",
    "title": "Minimize Maximum Pair Sum in Array",
    "titleSlug": "minimize-maximum-pair-sum-in-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.57039832318218,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1878",
    "title": "Get Biggest Three Rhombus Sums in a Grid",
    "titleSlug": "get-biggest-three-rhombus-sums-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.63932942921054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1879",
    "title": "Minimum XOR Sum of Two Arrays",
    "titleSlug": "minimum-xor-sum-of-two-arrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.74140229272194,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1880",
    "title": "Check if Word Equals Summation of Two Words",
    "titleSlug": "check-if-word-equals-summation-of-two-words",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.90968208092485,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1881",
    "title": "Maximum Value after Insertion",
    "titleSlug": "maximum-value-after-insertion",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.85622017641105,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1882",
    "title": "Process Tasks Using Servers",
    "titleSlug": "process-tasks-using-servers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.64637960067356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1883",
    "title": "Minimum Skips to Arrive at Meeting On Time",
    "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.41298045450295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1884",
    "title": "Egg Drop With 2 Eggs and N Floors",
    "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.17949569904381,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1885",
    "title": "Count Pairs in Two Arrays",
    "titleSlug": "count-pairs-in-two-arrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.23634131368938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1886",
    "title": "Determine Whether Matrix Can Be Obtained By Rotation",
    "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.66508576804609,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1887",
    "title": "Reduction Operations to Make the Array Elements Equal",
    "titleSlug": "reduction-operations-to-make-the-array-elements-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.35489992480933,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1888",
    "title": "Minimum Number of Flips to Make the Binary String Alternating",
    "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.75198150979957,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1889",
    "title": "Minimum Space Wasted From Packaging",
    "titleSlug": "minimum-space-wasted-from-packaging",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.97280905690892,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1890",
    "title": "The Latest Login in 2020",
    "titleSlug": "the-latest-login-in-2020",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.22599819727643,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1891",
    "title": "Cutting Ribbons",
    "titleSlug": "cutting-ribbons",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.91354996934396,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1892",
    "title": "Page Recommendations II",
    "titleSlug": "page-recommendations-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.221811460258785,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1893",
    "title": "Check if All the Integers in a Range Are Covered",
    "titleSlug": "check-if-all-the-integers-in-a-range-are-covered",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.67465770434264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1894",
    "title": "Find the Student that Will Replace the Chalk",
    "titleSlug": "find-the-student-that-will-replace-the-chalk",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.16059950359575,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1895",
    "title": "Largest Magic Square",
    "titleSlug": "largest-magic-square",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.89337788578372,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1896",
    "title": "Minimum Cost to Change the Final Value of Expression",
    "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 51.06992935394696,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1897",
    "title": "Redistribute Characters to Make All Strings Equal",
    "titleSlug": "redistribute-characters-to-make-all-strings-equal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.76408788662245,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1898",
    "title": "Maximum Number of Removable Characters",
    "titleSlug": "maximum-number-of-removable-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.37496377861489,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1899",
    "title": "Merge Triplets to Form Target Triplet",
    "titleSlug": "merge-triplets-to-form-target-triplet",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.29114929443224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1900",
    "title": "The Earliest and Latest Rounds Where Players Compete",
    "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 73.19710963296167,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1901",
    "title": "Find a Peak Element II",
    "titleSlug": "find-a-peak-element-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.85377987030292,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1902",
    "title": "Depth of BST Given Insertion Order",
    "titleSlug": "depth-of-bst-given-insertion-order",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 42.377727614747926,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1903",
    "title": "Largest Odd Number in String",
    "titleSlug": "largest-odd-number-in-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.29921819279842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1904",
    "title": "The Number of Full Rounds You Have Played",
    "titleSlug": "the-number-of-full-rounds-you-have-played",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.36577467486115,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1905",
    "title": "Count Sub Islands",
    "titleSlug": "count-sub-islands",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.89377791172362,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1906",
    "title": "Minimum Absolute Difference Queries",
    "titleSlug": "minimum-absolute-difference-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.050155655482534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1907",
    "title": "Count Salary Categories",
    "titleSlug": "count-salary-categories",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.40962167211583,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1908",
    "title": "Game of Nim",
    "titleSlug": "game-of-nim",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.53580769709802,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1909",
    "title": "Remove One Element to Make the Array Strictly Increasing",
    "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 29.112627375132078,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1910",
    "title": "Remove All Occurrences of a Substring",
    "titleSlug": "remove-all-occurrences-of-a-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.32625967209509,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1911",
    "title": "Maximum Alternating Subsequence Sum",
    "titleSlug": "maximum-alternating-subsequence-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.818790282597924,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1912",
    "title": "Design Movie Rental System",
    "titleSlug": "design-movie-rental-system",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.9095722170699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1913",
    "title": "Maximum Product Difference Between Two Pairs",
    "titleSlug": "maximum-product-difference-between-two-pairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.97144150995976,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1914",
    "title": "Cyclically Rotating a Grid",
    "titleSlug": "cyclically-rotating-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.073217662475535,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1915",
    "title": "Number of Wonderful Substrings",
    "titleSlug": "number-of-wonderful-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.65430014309834,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1916",
    "title": "Count Ways to Build Rooms in an Ant Colony",
    "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.33771486349848,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1917",
    "title": "Leetcodify Friends Recommendations",
    "titleSlug": "leetcodify-friends-recommendations",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 28.20400899842192,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1918",
    "title": "Kth Smallest Subarray Sum",
    "titleSlug": "kth-smallest-subarray-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.68713082211678,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1919",
    "title": "Leetcodify Similar Friends",
    "titleSlug": "leetcodify-similar-friends",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.824400564174894,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1920",
    "title": "Build Array from Permutation",
    "titleSlug": "build-array-from-permutation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 91.04285111460995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1921",
    "title": "Eliminate Maximum Number of Monsters",
    "titleSlug": "eliminate-maximum-number-of-monsters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.8763711930231,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1922",
    "title": "Count Good Numbers",
    "titleSlug": "count-good-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.09175301233063,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1923",
    "title": "Longest Common Subpath",
    "titleSlug": "longest-common-subpath",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.783771435533488,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1924",
    "title": "Erect the Fence II",
    "titleSlug": "erect-the-fence-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.65934065934066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1925",
    "title": "Count Square Sum Triples",
    "titleSlug": "count-square-sum-triples",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.50471066391829,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1926",
    "title": "Nearest Exit from Entrance in Maze",
    "titleSlug": "nearest-exit-from-entrance-in-maze",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.93534457067818,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1927",
    "title": "Sum Game",
    "titleSlug": "sum-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.81809493469258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1928",
    "title": "Minimum Cost to Reach Destination in Time",
    "titleSlug": "minimum-cost-to-reach-destination-in-time",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.5047874476879,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1929",
    "title": "Concatenation of Array",
    "titleSlug": "concatenation-of-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.56144503270009,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1930",
    "title": "Unique Length-3 Palindromic Subsequences",
    "titleSlug": "unique-length-3-palindromic-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.95738859866664,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1931",
    "title": "Painting a Grid With Three Different Colors",
    "titleSlug": "painting-a-grid-with-three-different-colors",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 78.03661471776608,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1932",
    "title": "Merge BSTs to Create Single BST",
    "titleSlug": "merge-bsts-to-create-single-bst",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.77613706662363,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1933",
    "title": "Check if String Is Decomposable Into Value-Equal Substrings",
    "titleSlug": "check-if-string-is-decomposable-into-value-equal-substrings",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.80906148867314,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1934",
    "title": "Confirmation Rate",
    "titleSlug": "confirmation-rate",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.433140778131836,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1935",
    "title": "Maximum Number of Words You Can Type",
    "titleSlug": "maximum-number-of-words-you-can-type",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.89270285694849,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1936",
    "title": "Add Minimum Number of Rungs",
    "titleSlug": "add-minimum-number-of-rungs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.56354300385109,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1937",
    "title": "Maximum Number of Points with Cost",
    "titleSlug": "maximum-number-of-points-with-cost",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.97926147445066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1938",
    "title": "Maximum Genetic Difference Query",
    "titleSlug": "maximum-genetic-difference-query",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.41585831403717,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1939",
    "title": "Users That Actively Request Confirmation Messages",
    "titleSlug": "users-that-actively-request-confirmation-messages",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 56.6122331454897,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1940",
    "title": "Longest Common Subsequence Between Sorted Arrays",
    "titleSlug": "longest-common-subsequence-between-sorted-arrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.31776480400333,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1941",
    "title": "Check if All Characters Have Equal Number of Occurrences",
    "titleSlug": "check-if-all-characters-have-equal-number-of-occurrences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.94403214324026,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1942",
    "title": "The Number of the Smallest Unoccupied Chair",
    "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.3671778905289,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1943",
    "title": "Describe the Painting",
    "titleSlug": "describe-the-painting",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.183844011142064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1944",
    "title": "Number of Visible People in a Queue",
    "titleSlug": "number-of-visible-people-in-a-queue",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 71.87486396680065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1945",
    "title": "Sum of Digits of String After Convert",
    "titleSlug": "sum-of-digits-of-string-after-convert",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.77537233027142,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1946",
    "title": "Largest Number After Mutating Substring",
    "titleSlug": "largest-number-after-mutating-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.449281393516934,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1947",
    "title": "Maximum Compatibility Score Sum",
    "titleSlug": "maximum-compatibility-score-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.831742100427434,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1948",
    "title": "Delete Duplicate Folders in System",
    "titleSlug": "delete-duplicate-folders-in-system",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 78.02966925496942,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1949",
    "title": "Strong Friendship",
    "titleSlug": "strong-friendship",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.150394092167865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1950",
    "title": "Maximum of Minimum Values in All Subarrays",
    "titleSlug": "maximum-of-minimum-values-in-all-subarrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.1183169004305,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1951",
    "title": "All the Pairs With the Maximum Number of Common Followers",
    "titleSlug": "all-the-pairs-with-the-maximum-number-of-common-followers",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.3340738122886,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1952",
    "title": "Three Divisors",
    "titleSlug": "three-divisors",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.29116638078902,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1953",
    "title": "Maximum Number of Weeks for Which You Can Work",
    "titleSlug": "maximum-number-of-weeks-for-which-you-can-work",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.81826056826057,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1954",
    "title": "Minimum Garden Perimeter to Collect Enough Apples",
    "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.028529706049376,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1955",
    "title": "Count Number of Special Subsequences",
    "titleSlug": "count-number-of-special-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.30121002592912,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1956",
    "title": "Minimum Time For K Virus Variants to Spread",
    "titleSlug": "minimum-time-for-k-virus-variants-to-spread",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.98033818324813,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1957",
    "title": "Delete Characters to Make Fancy String",
    "titleSlug": "delete-characters-to-make-fancy-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.21169592984845,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1958",
    "title": "Check if Move is Legal",
    "titleSlug": "check-if-move-is-legal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.58029092163514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1959",
    "title": "Minimum Total Space Wasted With K Resizing Operations",
    "titleSlug": "minimum-total-space-wasted-with-k-resizing-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.33610995418576,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1960",
    "title": "Maximum Product of the Length of Two Palindromic Substrings",
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-substrings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.438189773395152,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1961",
    "title": "Check If String Is a Prefix of Array",
    "titleSlug": "check-if-string-is-a-prefix-of-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.68481974063879,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1962",
    "title": "Remove Stones to Minimize the Total",
    "titleSlug": "remove-stones-to-minimize-the-total",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.05028668107904,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1963",
    "title": "Minimum Number of Swaps to Make the String Balanced",
    "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.04796393589339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1964",
    "title": "Find the Longest Valid Obstacle Course at Each Position",
    "titleSlug": "find-the-longest-valid-obstacle-course-at-each-position",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.561240896623474,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1965",
    "title": "Employees With Missing Information",
    "titleSlug": "employees-with-missing-information",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.97518542340406,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1966",
    "title": "Binary Searchable Numbers in an Unsorted Array",
    "titleSlug": "binary-searchable-numbers-in-an-unsorted-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.561286526769955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1967",
    "title": "Number of Strings That Appear as Substrings in Word",
    "titleSlug": "number-of-strings-that-appear-as-substrings-in-word",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.21445065426191,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1968",
    "title": "Array With Elements Not Equal to Average of Neighbors",
    "titleSlug": "array-with-elements-not-equal-to-average-of-neighbors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.33937015472706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1969",
    "title": "Minimum Non-Zero Product of the Array Elements",
    "titleSlug": "minimum-non-zero-product-of-the-array-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.71201475058554,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1970",
    "title": "Last Day Where You Can Still Cross",
    "titleSlug": "last-day-where-you-can-still-cross",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.50153442300973,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1971",
    "title": "Find if Path Exists in Graph",
    "titleSlug": "find-if-path-exists-in-graph",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.33803510010644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1972",
    "title": "First and Last Call On the Same Day",
    "titleSlug": "first-and-last-call-on-the-same-day",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.99406145107152,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1973",
    "title": "Count Nodes Equal to Sum of Descendants",
    "titleSlug": "count-nodes-equal-to-sum-of-descendants",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.21379586524503,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1974",
    "title": "Minimum Time to Type Word Using Special Typewriter",
    "titleSlug": "minimum-time-to-type-word-using-special-typewriter",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.11186958222402,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1975",
    "title": "Maximum Matrix Sum",
    "titleSlug": "maximum-matrix-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.85757026133308,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1976",
    "title": "Number of Ways to Arrive at Destination",
    "titleSlug": "number-of-ways-to-arrive-at-destination",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.21413549820566,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1977",
    "title": "Number of Ways to Separate Numbers",
    "titleSlug": "number-of-ways-to-separate-numbers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.124876247558397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1978",
    "title": "Employees Whose Manager Left the Company",
    "titleSlug": "employees-whose-manager-left-the-company",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 48.79641819877872,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1979",
    "title": "Find Greatest Common Divisor of Array",
    "titleSlug": "find-greatest-common-divisor-of-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.08285890252512,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1980",
    "title": "Find Unique Binary String",
    "titleSlug": "find-unique-binary-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.4118274921682,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1981",
    "title": "Minimize the Difference Between Target and Chosen Elements",
    "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.2678270242218,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1982",
    "title": "Find Array Given Subset Sums",
    "titleSlug": "find-array-given-subset-sums",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.0477165676838,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1983",
    "title": "Widest Pair of Indices With Equal Range Sum",
    "titleSlug": "widest-pair-of-indices-with-equal-range-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.62801013941698,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1984",
    "title": "Minimum Difference Between Highest and Lowest of K Scores",
    "titleSlug": "minimum-difference-between-highest-and-lowest-of-k-scores",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.134740172287984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1985",
    "title": "Find the Kth Largest Integer in the Array",
    "titleSlug": "find-the-kth-largest-integer-in-the-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.20284488985649,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1986",
    "title": "Minimum Number of Work Sessions to Finish the Tasks",
    "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.11887514630057,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1987",
    "title": "Number of Unique Good Subsequences",
    "titleSlug": "number-of-unique-good-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.35363924050633,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1988",
    "title": "Find Cutoff Score for Each School",
    "titleSlug": "find-cutoff-score-for-each-school",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.85356695869838,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1989",
    "title": "Maximum Number of People That Can Be Caught in Tag",
    "titleSlug": "maximum-number-of-people-that-can-be-caught-in-tag",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.308319120712525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1990",
    "title": "Count the Number of Experiments",
    "titleSlug": "count-the-number-of-experiments",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.6303900353618,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1991",
    "title": "Find the Middle Index in Array",
    "titleSlug": "find-the-middle-index-in-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.51635986468678,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1992",
    "title": "Find All Groups of Farmland",
    "titleSlug": "find-all-groups-of-farmland",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.48272509518713,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1993",
    "title": "Operations on Tree",
    "titleSlug": "operations-on-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.42836468885673,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1994",
    "title": "The Number of Good Subsets",
    "titleSlug": "the-number-of-good-subsets",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.36331914299672,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1995",
    "title": "Count Special Quadruplets",
    "titleSlug": "count-special-quadruplets",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.84662270737519,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1996",
    "title": "The Number of Weak Characters in the Game",
    "titleSlug": "the-number-of-weak-characters-in-the-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.30748742804273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1997",
    "title": "First Day Where You Have Been in All the Rooms",
    "titleSlug": "first-day-where-you-have-been-in-all-the-rooms",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.01610089896686,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1998",
    "title": "GCD Sort of an Array",
    "titleSlug": "gcd-sort-of-an-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.76495356968307,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "1999",
    "title": "Smallest Greater Multiple Made of Two Digits",
    "titleSlug": "smallest-greater-multiple-made-of-two-digits",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.238956995524426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2000",
    "title": "Reverse Prefix of Word",
    "titleSlug": "reverse-prefix-of-word",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.43676355452365,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2001",
    "title": "Number of Pairs of Interchangeable Rectangles",
    "titleSlug": "number-of-pairs-of-interchangeable-rectangles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.801140994295025,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2002",
    "title": "Maximum Product of the Length of Two Palindromic Subsequences",
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.87623762376238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2003",
    "title": "Smallest Missing Genetic Value in Each Subtree",
    "titleSlug": "smallest-missing-genetic-value-in-each-subtree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.10616748055706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2004",
    "title": "The Number of Seniors and Juniors to Join the Company",
    "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.46411189547069,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2005",
    "title": "Subtree Removal Game with Fibonacci Tree",
    "titleSlug": "subtree-removal-game-with-fibonacci-tree",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.25860904794058,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2006",
    "title": "Count Number of Pairs With Absolute Difference K",
    "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.11473131989374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2007",
    "title": "Find Original Array From Doubled Array",
    "titleSlug": "find-original-array-from-doubled-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.639647987688235,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2008",
    "title": "Maximum Earnings From Taxi",
    "titleSlug": "maximum-earnings-from-taxi",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.665451932453934,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2009",
    "title": "Minimum Number of Operations to Make Array Continuous",
    "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.156439548989695,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2010",
    "title": "The Number of Seniors and Juniors to Join the Company II",
    "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 65.20074696545285,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2011",
    "title": "Final Value of Variable After Performing Operations",
    "titleSlug": "final-value-of-variable-after-performing-operations",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.60771150762902,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2012",
    "title": "Sum of Beauty in the Array",
    "titleSlug": "sum-of-beauty-in-the-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.56077398406309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2013",
    "title": "Detect Squares",
    "titleSlug": "detect-squares",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.80373120121835,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2014",
    "title": "Longest Subsequence Repeated k Times",
    "titleSlug": "longest-subsequence-repeated-k-times",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 71.44588125459349,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2015",
    "title": "Average Height of Buildings in Each Segment",
    "titleSlug": "average-height-of-buildings-in-each-segment",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.895912441366995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2016",
    "title": "Maximum Difference Between Increasing Elements",
    "titleSlug": "maximum-difference-between-increasing-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.34706419017782,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2017",
    "title": "Grid Game",
    "titleSlug": "grid-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.91375984962205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2018",
    "title": "Check if Word Can Be Placed In Crossword",
    "titleSlug": "check-if-word-can-be-placed-in-crossword",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.29304844573039,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2019",
    "title": "The Score of Students Solving Math Expression",
    "titleSlug": "the-score-of-students-solving-math-expression",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.61728252945014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2020",
    "title": "Number of Accounts That Did Not Stream",
    "titleSlug": "number-of-accounts-that-did-not-stream",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.00963486067774,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2021",
    "title": "Brightest Position on Street",
    "titleSlug": "brightest-position-on-street",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.343908291122375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2022",
    "title": "Convert 1D Array Into 2D Array",
    "titleSlug": "convert-1d-array-into-2d-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.95516702833373,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2023",
    "title": "Number of Pairs of Strings With Concatenation Equal to Target",
    "titleSlug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.09528726401264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2024",
    "title": "Maximize the Confusion of an Exam",
    "titleSlug": "maximize-the-confusion-of-an-exam",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.1908761774294,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2025",
    "title": "Maximum Number of Ways to Partition an Array",
    "titleSlug": "maximum-number-of-ways-to-partition-an-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.98063058215861,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2026",
    "title": "Low-Quality Problems",
    "titleSlug": "low-quality-problems",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 84.10528694080433,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2027",
    "title": "Minimum Moves to Convert String",
    "titleSlug": "minimum-moves-to-convert-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.06102117061022,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2028",
    "title": "Find Missing Observations",
    "titleSlug": "find-missing-observations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.38335338655747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2029",
    "title": "Stone Game IX",
    "titleSlug": "stone-game-ix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.320361742943273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2030",
    "title": "Smallest K-Length Subsequence With Occurrences of a Letter",
    "titleSlug": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.17415647561515,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2031",
    "title": "Count Subarrays With More Ones Than Zeros",
    "titleSlug": "count-subarrays-with-more-ones-than-zeros",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.172785119921684,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2032",
    "title": "Two Out of Three",
    "titleSlug": "two-out-of-three",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.98692641252993,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2033",
    "title": "Minimum Operations to Make a Uni-Value Grid",
    "titleSlug": "minimum-operations-to-make-a-uni-value-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.4751617070114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2034",
    "title": "Stock Price Fluctuation ",
    "titleSlug": "stock-price-fluctuation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.50459607708301,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2035",
    "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
    "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.461833671651867,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2036",
    "title": "Maximum Alternating Subarray Sum",
    "titleSlug": "maximum-alternating-subarray-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.02472422974515,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2037",
    "title": "Minimum Number of Moves to Seat Everyone",
    "titleSlug": "minimum-number-of-moves-to-seat-everyone",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.27817491666507,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2038",
    "title": "Remove Colored Pieces if Both Neighbors are the Same Color",
    "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.928356363781376,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2039",
    "title": "The Time When the Network Becomes Idle",
    "titleSlug": "the-time-when-the-network-becomes-idle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.50605481198215,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2040",
    "title": "Kth Smallest Product of Two Sorted Arrays",
    "titleSlug": "kth-smallest-product-of-two-sorted-arrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.99120163914668,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2041",
    "title": "Accepted Candidates From the Interviews",
    "titleSlug": "accepted-candidates-from-the-interviews",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 78.66883457463548,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2042",
    "title": "Check if Numbers Are Ascending in a Sentence",
    "titleSlug": "check-if-numbers-are-ascending-in-a-sentence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.31472827418492,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2043",
    "title": "Simple Bank System",
    "titleSlug": "simple-bank-system",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.404722690549754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2044",
    "title": "Count Number of Maximum Bitwise-OR Subsets",
    "titleSlug": "count-number-of-maximum-bitwise-or-subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 89.63203142370118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2045",
    "title": "Second Minimum Time to Reach Destination",
    "titleSlug": "second-minimum-time-to-reach-destination",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.403260938079995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2046",
    "title": "Sort Linked List Already Sorted Using Absolute Values",
    "titleSlug": "sort-linked-list-already-sorted-using-absolute-values",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.98107314635517,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2047",
    "title": "Number of Valid Words in a Sentence",
    "titleSlug": "number-of-valid-words-in-a-sentence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 30.349180479104525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2048",
    "title": "Next Greater Numerically Balanced Number",
    "titleSlug": "next-greater-numerically-balanced-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.39352511707729,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2049",
    "title": "Count Nodes With the Highest Score",
    "titleSlug": "count-nodes-with-the-highest-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.71833989501312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2050",
    "title": "Parallel Courses III",
    "titleSlug": "parallel-courses-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.78528908521947,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2051",
    "title": "The Category of Each Member in the Store",
    "titleSlug": "the-category-of-each-member-in-the-store",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.63838635891038,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2052",
    "title": "Minimum Cost to Separate Sentence Into Rows",
    "titleSlug": "minimum-cost-to-separate-sentence-into-rows",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.85947571981092,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2053",
    "title": "Kth Distinct String in an Array",
    "titleSlug": "kth-distinct-string-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.05738558697767,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2054",
    "title": "Two Best Non-Overlapping Events",
    "titleSlug": "two-best-non-overlapping-events",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.82174053704302,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2055",
    "title": "Plates Between Candles",
    "titleSlug": "plates-between-candles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.960139664092566,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2056",
    "title": "Number of Valid Move Combinations On Chessboard",
    "titleSlug": "number-of-valid-move-combinations-on-chessboard",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.30772045371386,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2057",
    "title": "Smallest Index With Equal Value",
    "titleSlug": "smallest-index-with-equal-value",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.74333411455048,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2058",
    "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
    "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.44132182323372,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2059",
    "title": "Minimum Operations to Convert Number",
    "titleSlug": "minimum-operations-to-convert-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.02040816326531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2060",
    "title": "Check if an Original String Exists Given Two Encoded Strings",
    "titleSlug": "check-if-an-original-string-exists-given-two-encoded-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.31210191082803,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2061",
    "title": "Number of Spaces Cleaning Robot Cleaned",
    "titleSlug": "number-of-spaces-cleaning-robot-cleaned",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.30943306336351,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2062",
    "title": "Count Vowel Substrings of a String",
    "titleSlug": "count-vowel-substrings-of-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.23982787675807,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2063",
    "title": "Vowels of All Substrings",
    "titleSlug": "vowels-of-all-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.90710684439533,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2064",
    "title": "Minimized Maximum of Products Distributed to Any Store",
    "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.78705452491483,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2065",
    "title": "Maximum Path Quality of a Graph",
    "titleSlug": "maximum-path-quality-of-a-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.26926746528146,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2066",
    "title": "Account Balance",
    "titleSlug": "account-balance",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.929256109086,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2067",
    "title": "Number of Equal Count Substrings",
    "titleSlug": "number-of-equal-count-substrings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 44.890116488531284,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2068",
    "title": "Check Whether Two Strings are Almost Equivalent",
    "titleSlug": "check-whether-two-strings-are-almost-equivalent",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.93608074011775,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2069",
    "title": "Walking Robot Simulation II",
    "titleSlug": "walking-robot-simulation-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.183826436218155,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2070",
    "title": "Most Beautiful Item for Each Query",
    "titleSlug": "most-beautiful-item-for-each-query",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.0561030935899,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2071",
    "title": "Maximum Number of Tasks You Can Assign",
    "titleSlug": "maximum-number-of-tasks-you-can-assign",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.32440714892802,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2072",
    "title": "The Winner University",
    "titleSlug": "the-winner-university",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 75.12997802433404,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2073",
    "title": "Time Needed to Buy Tickets",
    "titleSlug": "time-needed-to-buy-tickets",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.22895257074109,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2074",
    "title": "Reverse Nodes in Even Length Groups",
    "titleSlug": "reverse-nodes-in-even-length-groups",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.431645037157054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2075",
    "title": "Decode the Slanted Ciphertext",
    "titleSlug": "decode-the-slanted-ciphertext",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.92940537605213,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2076",
    "title": "Process Restricted Friend Requests",
    "titleSlug": "process-restricted-friend-requests",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.642695904546926,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2077",
    "title": "Paths in Maze That Lead to Same Room",
    "titleSlug": "paths-in-maze-that-lead-to-same-room",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.21495327102804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2078",
    "title": "Two Furthest Houses With Different Colors",
    "titleSlug": "two-furthest-houses-with-different-colors",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.55458004097162,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2079",
    "title": "Watering Plants",
    "titleSlug": "watering-plants",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.09978242928952,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2080",
    "title": "Range Frequency Queries",
    "titleSlug": "range-frequency-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.60672718160049,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2081",
    "title": "Sum of k-Mirror Numbers",
    "titleSlug": "sum-of-k-mirror-numbers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.85462296292567,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2082",
    "title": "The Number of Rich Customers",
    "titleSlug": "the-number-of-rich-customers",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 77.38767427546898,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2083",
    "title": "Substrings That Begin and End With the Same Letter",
    "titleSlug": "substrings-that-begin-and-end-with-the-same-letter",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.3344673038501,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2084",
    "title": "Drop Type 1 Orders for Customers With Type 0 Orders",
    "titleSlug": "drop-type-1-orders-for-customers-with-type-0-orders",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 86.49577993122851,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2085",
    "title": "Count Common Words With One Occurrence",
    "titleSlug": "count-common-words-with-one-occurrence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.8603803610375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2086",
    "title": "Minimum Number of Food Buckets to Feed the Hamsters",
    "titleSlug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.5093117972639,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2087",
    "title": "Minimum Cost Homecoming of a Robot in a Grid",
    "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.46249281077972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2088",
    "title": "Count Fertile Pyramids in a Land",
    "titleSlug": "count-fertile-pyramids-in-a-land",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.00406113070429,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2089",
    "title": "Find Target Indices After Sorting Array",
    "titleSlug": "find-target-indices-after-sorting-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.52674292757258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2090",
    "title": "K Radius Subarray Averages",
    "titleSlug": "k-radius-subarray-averages",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.889886990761234,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2091",
    "title": "Removing Minimum and Maximum From Array",
    "titleSlug": "removing-minimum-and-maximum-from-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.75164048518593,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2092",
    "title": "Find All People With Secret",
    "titleSlug": "find-all-people-with-secret",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.29339277920877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2093",
    "title": "Minimum Cost to Reach City With Discounts",
    "titleSlug": "minimum-cost-to-reach-city-with-discounts",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.85498366013072,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2094",
    "title": "Finding 3-Digit Even Numbers",
    "titleSlug": "finding-3-digit-even-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.90666654303186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2095",
    "title": "Delete the Middle Node of a Linked List",
    "titleSlug": "delete-the-middle-node-of-a-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.44281235251723,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2096",
    "title": "Step-By-Step Directions From a Binary Tree Node to Another",
    "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.334833243141055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2097",
    "title": "Valid Arrangement of Pairs",
    "titleSlug": "valid-arrangement-of-pairs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 66.41570810557027,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Eulerian Circuit",
        "slug": "eulerian-circuit"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2098",
    "title": "Subsequence of Size K With the Largest Even Sum",
    "titleSlug": "subsequence-of-size-k-with-the-largest-even-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 35.74050430896904,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2099",
    "title": "Find Subsequence of Length K With the Largest Sum",
    "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 57.45853759950641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2100",
    "title": "Find Good Days to Rob the Bank",
    "titleSlug": "find-good-days-to-rob-the-bank",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.860854891711185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2101",
    "title": "Detonate the Maximum Bombs",
    "titleSlug": "detonate-the-maximum-bombs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.54988905503835,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2102",
    "title": "Sequentially Ordinal Rank Tracker",
    "titleSlug": "sequentially-ordinal-rank-tracker",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.51887309415594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2103",
    "title": "Rings and Rods",
    "titleSlug": "rings-and-rods",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.36641515175927,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2104",
    "title": "Sum of Subarray Ranges",
    "titleSlug": "sum-of-subarray-ranges",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.21035076565251,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2105",
    "title": "Watering Plants II",
    "titleSlug": "watering-plants-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.29709889179078,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2106",
    "title": "Maximum Fruits Harvested After at Most K Steps",
    "titleSlug": "maximum-fruits-harvested-after-at-most-k-steps",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.05044880439669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2107",
    "title": "Number of Unique Flavors After Sharing K Candies",
    "titleSlug": "number-of-unique-flavors-after-sharing-k-candies",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.41310353900803,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2108",
    "title": "Find First Palindromic String in the Array",
    "titleSlug": "find-first-palindromic-string-in-the-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.97629383635055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2109",
    "title": "Adding Spaces to a String",
    "titleSlug": "adding-spaces-to-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 71.71608230058155,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2110",
    "title": "Number of Smooth Descent Periods of a Stock",
    "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.813889142663236,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2111",
    "title": "Minimum Operations to Make the Array K-Increasing",
    "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.77365015325771,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2112",
    "title": "The Airport With the Most Traffic",
    "titleSlug": "the-airport-with-the-most-traffic",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.3840676457499,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2113",
    "title": "Elements in Array After Removing and Replacing Elements",
    "titleSlug": "elements-in-array-after-removing-and-replacing-elements",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.20764369545591,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2114",
    "title": "Maximum Number of Words Found in Sentences",
    "titleSlug": "maximum-number-of-words-found-in-sentences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.61465741885931,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2115",
    "title": "Find All Possible Recipes from Given Supplies",
    "titleSlug": "find-all-possible-recipes-from-given-supplies",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.52778444900054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2116",
    "title": "Check if a Parentheses String Can Be Valid",
    "titleSlug": "check-if-a-parentheses-string-can-be-valid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.94875505716408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2117",
    "title": "Abbreviating the Product of a Range",
    "titleSlug": "abbreviating-the-product-of-a-range",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 24.44797638644491,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2118",
    "title": "Build the Equation",
    "titleSlug": "build-the-equation",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 56.475515463917525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2119",
    "title": "A Number After a Double Reversal",
    "titleSlug": "a-number-after-a-double-reversal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.52168706440256,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2120",
    "title": "Execution of All Suffix Instructions Staying in a Grid",
    "titleSlug": "execution-of-all-suffix-instructions-staying-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.75798932504561,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2121",
    "title": "Intervals Between Identical Elements",
    "titleSlug": "intervals-between-identical-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.27670897910748,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2122",
    "title": "Recover the Original Array",
    "titleSlug": "recover-the-original-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.686030600821,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2123",
    "title": "Minimum Operations to Remove Adjacent Ones in Matrix",
    "titleSlug": "minimum-operations-to-remove-adjacent-ones-in-matrix",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 41.959972394755,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2124",
    "title": "Check if All A's Appears Before All B's",
    "titleSlug": "check-if-all-as-appears-before-all-bs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.55692630325312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2125",
    "title": "Number of Laser Beams in a Bank",
    "titleSlug": "number-of-laser-beams-in-a-bank",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.40071710582306,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2126",
    "title": "Destroying Asteroids",
    "titleSlug": "destroying-asteroids",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.953305445011075,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2127",
    "title": "Maximum Employees to Be Invited to a Meeting",
    "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.91305340678789,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2128",
    "title": "Remove All Ones With Row and Column Flips",
    "titleSlug": "remove-all-ones-with-row-and-column-flips",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 76.18561505514747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2129",
    "title": "Capitalize the Title",
    "titleSlug": "capitalize-the-title",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.26458437898151,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2130",
    "title": "Maximum Twin Sum of a Linked List",
    "titleSlug": "maximum-twin-sum-of-a-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.56578518733161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2131",
    "title": "Longest Palindrome by Concatenating Two Letter Words",
    "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.6596938752344,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2132",
    "title": "Stamping the Grid",
    "titleSlug": "stamping-the-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.21149594694178,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2133",
    "title": "Check if Every Row and Column Contains All Numbers",
    "titleSlug": "check-if-every-row-and-column-contains-all-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.532067021153736,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2134",
    "title": "Minimum Swaps to Group All 1's Together II",
    "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.58027582617747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2135",
    "title": "Count Words Obtained After Adding a Letter",
    "titleSlug": "count-words-obtained-after-adding-a-letter",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.72540397933385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2136",
    "title": "Earliest Possible Day of Full Bloom",
    "titleSlug": "earliest-possible-day-of-full-bloom",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 71.16524028966425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2137",
    "title": "Pour Water Between Buckets to Make Water Levels Equal",
    "titleSlug": "pour-water-between-buckets-to-make-water-levels-equal",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.47011183956808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2138",
    "title": "Divide a String Into Groups of Size k",
    "titleSlug": "divide-a-string-into-groups-of-size-k",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.06421183811958,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2139",
    "title": "Minimum Moves to Reach Target Score",
    "titleSlug": "minimum-moves-to-reach-target-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.77649158255516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2140",
    "title": "Solving Questions With Brainpower",
    "titleSlug": "solving-questions-with-brainpower",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.25990231207699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2141",
    "title": "Maximum Running Time of N Computers",
    "titleSlug": "maximum-running-time-of-n-computers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.83790970749051,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2142",
    "title": "The Number of Passengers in Each Bus I",
    "titleSlug": "the-number-of-passengers-in-each-bus-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.9014518823076,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2143",
    "title": "Choose Numbers From Two Arrays in Range",
    "titleSlug": "choose-numbers-from-two-arrays-in-range",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 52.37520128824477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2144",
    "title": "Minimum Cost of Buying Candies With Discount",
    "titleSlug": "minimum-cost-of-buying-candies-with-discount",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.433505984461405,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2145",
    "title": "Count the Hidden Sequences",
    "titleSlug": "count-the-hidden-sequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.78601399912798,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2146",
    "title": "K Highest Ranked Items Within a Price Range",
    "titleSlug": "k-highest-ranked-items-within-a-price-range",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.72006546049641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2147",
    "title": "Number of Ways to Divide a Long Corridor",
    "titleSlug": "number-of-ways-to-divide-a-long-corridor",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.70623946939103,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2148",
    "title": "Count Elements With Strictly Smaller and Greater Elements ",
    "titleSlug": "count-elements-with-strictly-smaller-and-greater-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.3798374220947,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2149",
    "title": "Rearrange Array Elements by Sign",
    "titleSlug": "rearrange-array-elements-by-sign",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.45984362629366,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2150",
    "title": "Find All Lonely Numbers in the Array",
    "titleSlug": "find-all-lonely-numbers-in-the-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.14045139560993,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2151",
    "title": "Maximum Good People Based on Statements",
    "titleSlug": "maximum-good-people-based-on-statements",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 51.5889999680603,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2152",
    "title": "Minimum Number of Lines to Cover Points",
    "titleSlug": "minimum-number-of-lines-to-cover-points",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 43.31903662157704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2153",
    "title": "The Number of Passengers in Each Bus II",
    "titleSlug": "the-number-of-passengers-in-each-bus-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.89281886387996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2154",
    "title": "Keep Multiplying Found Values by Two",
    "titleSlug": "keep-multiplying-found-values-by-two",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.27539157247924,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2155",
    "title": "All Divisions With the Highest Score of a Binary Array",
    "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.72566704246525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2156",
    "title": "Find Substring With Given Hash Value",
    "titleSlug": "find-substring-with-given-hash-value",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.318129767914456,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2157",
    "title": "Groups of Strings",
    "titleSlug": "groups-of-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.036511790015144,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2158",
    "title": "Amount of New Area Painted Each Day",
    "titleSlug": "amount-of-new-area-painted-each-day",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 55.48398149734452,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2159",
    "title": "Order Two Columns Independently",
    "titleSlug": "order-two-columns-independently",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.17555141534948,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2160",
    "title": "Minimum Sum of Four Digit Number After Splitting Digits",
    "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.17145136425869,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2161",
    "title": "Partition Array According to Given Pivot",
    "titleSlug": "partition-array-according-to-given-pivot",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 89.81927729610672,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2162",
    "title": "Minimum Cost to Set Cooking Time",
    "titleSlug": "minimum-cost-to-set-cooking-time",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.16019692414935,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2163",
    "title": "Minimum Difference in Sums After Removal of Elements",
    "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.9376784346494,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2164",
    "title": "Sort Even and Odd Indices Independently",
    "titleSlug": "sort-even-and-odd-indices-independently",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.861229252135956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2165",
    "title": "Smallest Value of the Rearranged Number",
    "titleSlug": "smallest-value-of-the-rearranged-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.0779129620964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2166",
    "title": "Design Bitset",
    "titleSlug": "design-bitset",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.23875924186596,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2167",
    "title": "Minimum Time to Remove All Cars Containing Illegal Goods",
    "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.57636591764572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2168",
    "title": "Unique Substrings With Equal Digit Frequency",
    "titleSlug": "unique-substrings-with-equal-digit-frequency",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.24122116503526,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2169",
    "title": "Count Operations to Obtain Zero",
    "titleSlug": "count-operations-to-obtain-zero",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.20099367660343,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2170",
    "title": "Minimum Operations to Make the Array Alternating",
    "titleSlug": "minimum-operations-to-make-the-array-alternating",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.941424000597586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2171",
    "title": "Removing Minimum Number of Magic Beans",
    "titleSlug": "removing-minimum-number-of-magic-beans",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.96663405864157,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2172",
    "title": "Maximum AND Sum of Array",
    "titleSlug": "maximum-and-sum-of-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.259238169448864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2173",
    "title": "Longest Winning Streak",
    "titleSlug": "longest-winning-streak",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 54.15996938384998,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2174",
    "title": "Remove All Ones With Row and Column Flips II",
    "titleSlug": "remove-all-ones-with-row-and-column-flips-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.19951189749848,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2175",
    "title": "The Change in Global Rankings",
    "titleSlug": "the-change-in-global-rankings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.6997084548105,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2176",
    "title": "Count Equal and Divisible Pairs in an Array",
    "titleSlug": "count-equal-and-divisible-pairs-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.01240790429458,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2177",
    "title": "Find Three Consecutive Integers That Sum to a Given Number",
    "titleSlug": "find-three-consecutive-integers-that-sum-to-a-given-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.97346474601972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2178",
    "title": "Maximum Split of Positive Even Integers",
    "titleSlug": "maximum-split-of-positive-even-integers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.52468169658219,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2179",
    "title": "Count Good Triplets in an Array",
    "titleSlug": "count-good-triplets-in-an-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.8800970151214,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2180",
    "title": "Count Integers With Even Digit Sum",
    "titleSlug": "count-integers-with-even-digit-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.31396119715329,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2181",
    "title": "Merge Nodes in Between Zeros",
    "titleSlug": "merge-nodes-in-between-zeros",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 89.61199631342528,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2182",
    "title": "Construct String With Repeat Limit",
    "titleSlug": "construct-string-with-repeat-limit",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.91520952413163,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2183",
    "title": "Count Array Pairs Divisible by K",
    "titleSlug": "count-array-pairs-divisible-by-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.264857881136955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2184",
    "title": "Number of Ways to Build Sturdy Brick Wall",
    "titleSlug": "number-of-ways-to-build-sturdy-brick-wall",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.45950022625572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2185",
    "title": "Counting Words With a Given Prefix",
    "titleSlug": "counting-words-with-a-given-prefix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.48898780276316,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2186",
    "title": "Minimum Number of Steps to Make Two Strings Anagram II",
    "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.96544114526601,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2187",
    "title": "Minimum Time to Complete Trips",
    "titleSlug": "minimum-time-to-complete-trips",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.26426756706224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2188",
    "title": "Minimum Time to Finish the Race",
    "titleSlug": "minimum-time-to-finish-the-race",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.74444675108989,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2189",
    "title": "Number of Ways to Build House of Cards",
    "titleSlug": "number-of-ways-to-build-house-of-cards",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.45977833392921,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2190",
    "title": "Most Frequent Number Following Key In an Array",
    "titleSlug": "most-frequent-number-following-key-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.30414925785122,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2191",
    "title": "Sort the Jumbled Numbers",
    "titleSlug": "sort-the-jumbled-numbers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.99561484219305,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2192",
    "title": "All Ancestors of a Node in a Directed Acyclic Graph",
    "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.03419606065267,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2193",
    "title": "Minimum Number of Moves to Make Palindrome",
    "titleSlug": "minimum-number-of-moves-to-make-palindrome",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.280002613183505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2194",
    "title": "Cells in a Range on an Excel Sheet",
    "titleSlug": "cells-in-a-range-on-an-excel-sheet",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.06005884143248,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2195",
    "title": "Append K Integers With Minimal Sum",
    "titleSlug": "append-k-integers-with-minimal-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.388740089993572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2196",
    "title": "Create Binary Tree From Descriptions",
    "titleSlug": "create-binary-tree-from-descriptions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.6629491945477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2197",
    "title": "Replace Non-Coprime Numbers in Array",
    "titleSlug": "replace-non-coprime-numbers-in-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.58522164405561,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2198",
    "title": "Number of Single Divisor Triplets",
    "titleSlug": "number-of-single-divisor-triplets",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.64181286549707,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2199",
    "title": "Finding the Topic of Each Post",
    "titleSlug": "finding-the-topic-of-each-post",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.0551489020355,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2200",
    "title": "Find All K-Distant Indices in an Array",
    "titleSlug": "find-all-k-distant-indices-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.41542607058571,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2201",
    "title": "Count Artifacts That Can Be Extracted",
    "titleSlug": "count-artifacts-that-can-be-extracted",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.625376801681995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2202",
    "title": "Maximize the Topmost Element After K Moves",
    "titleSlug": "maximize-the-topmost-element-after-k-moves",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 23.684752086140858,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2203",
    "title": "Minimum Weighted Subgraph With the Required Paths",
    "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.380702358409366,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2204",
    "title": "Distance to a Cycle in Undirected Graph",
    "titleSlug": "distance-to-a-cycle-in-undirected-graph",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 73.06684887825988,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2205",
    "title": "The Number of Users That Are Eligible for Discount",
    "titleSlug": "the-number-of-users-that-are-eligible-for-discount",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.757961783439484,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2206",
    "title": "Divide Array Into Equal Pairs",
    "titleSlug": "divide-array-into-equal-pairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.25797942423723,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2207",
    "title": "Maximize Number of Subsequences in a String",
    "titleSlug": "maximize-number-of-subsequences-in-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.47968819123458,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2208",
    "title": "Minimum Operations to Halve Array Sum",
    "titleSlug": "minimum-operations-to-halve-array-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.41641738072302,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2209",
    "title": "Minimum White Tiles After Covering With Carpets",
    "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.945239269856934,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2210",
    "title": "Count Hills and Valleys in an Array",
    "titleSlug": "count-hills-and-valleys-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.3034873437388,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2211",
    "title": "Count Collisions on a Road",
    "titleSlug": "count-collisions-on-a-road",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.76039438420496,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2212",
    "title": "Maximum Points in an Archery Competition",
    "titleSlug": "maximum-points-in-an-archery-competition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.922850764958895,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2213",
    "title": "Longest Substring of One Repeating Character",
    "titleSlug": "longest-substring-of-one-repeating-character",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.74081789277491,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2214",
    "title": "Minimum Health to Beat Game",
    "titleSlug": "minimum-health-to-beat-game",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.80694269935424,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2215",
    "title": "Find the Difference of Two Arrays",
    "titleSlug": "find-the-difference-of-two-arrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.10466206390807,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2216",
    "title": "Minimum Deletions to Make Array Beautiful",
    "titleSlug": "minimum-deletions-to-make-array-beautiful",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.406717427434,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2217",
    "title": "Find Palindrome With Fixed Length",
    "titleSlug": "find-palindrome-with-fixed-length",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.59592249320178,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2218",
    "title": "Maximum Value of K Coins From Piles",
    "titleSlug": "maximum-value-of-k-coins-from-piles",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.36633312261984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2219",
    "title": "Maximum Sum Score of Array",
    "titleSlug": "maximum-sum-score-of-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.63811368037362,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2220",
    "title": "Minimum Bit Flips to Convert Number",
    "titleSlug": "minimum-bit-flips-to-convert-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.70424825868425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2221",
    "title": "Find Triangular Sum of an Array",
    "titleSlug": "find-triangular-sum-of-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.95810299679952,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2222",
    "title": "Number of Ways to Select Buildings",
    "titleSlug": "number-of-ways-to-select-buildings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.52564154703323,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2223",
    "title": "Sum of Scores of Built Strings",
    "titleSlug": "sum-of-scores-of-built-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.13695544270933,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2224",
    "title": "Minimum Number of Operations to Convert Time",
    "titleSlug": "minimum-number-of-operations-to-convert-time",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.92214826250917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2225",
    "title": "Find Players With Zero or One Losses",
    "titleSlug": "find-players-with-zero-or-one-losses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.54056399555357,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2226",
    "title": "Maximum Candies Allocated to K Children",
    "titleSlug": "maximum-candies-allocated-to-k-children",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.008689719931624,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2227",
    "title": "Encrypt and Decrypt Strings",
    "titleSlug": "encrypt-and-decrypt-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.39191236452628,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2228",
    "title": "Users With Two Purchases Within Seven Days",
    "titleSlug": "users-with-two-purchases-within-seven-days",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 46.43018619754203,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2229",
    "title": "Check if an Array Is Consecutive",
    "titleSlug": "check-if-an-array-is-consecutive",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 61.841669426962575,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2230",
    "title": "The Users That Are Eligible for Discount",
    "titleSlug": "the-users-that-are-eligible-for-discount",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.682064236737645,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2231",
    "title": "Largest Number After Digit Swaps by Parity",
    "titleSlug": "largest-number-after-digit-swaps-by-parity",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.35421321080807,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2232",
    "title": "Minimize Result by Adding Parentheses to Expression",
    "titleSlug": "minimize-result-by-adding-parentheses-to-expression",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.98013860492287,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2233",
    "title": "Maximum Product After K Increments",
    "titleSlug": "maximum-product-after-k-increments",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.75087151394422,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2234",
    "title": "Maximum Total Beauty of the Gardens",
    "titleSlug": "maximum-total-beauty-of-the-gardens",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.022178909872977,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2235",
    "title": "Add Two Integers",
    "titleSlug": "add-two-integers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.81133177769266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2236",
    "title": "Root Equals Sum of Children",
    "titleSlug": "root-equals-sum-of-children",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.91096261323547,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2237",
    "title": "Count Positions on Street With Required Brightness",
    "titleSlug": "count-positions-on-street-with-required-brightness",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.51005631536605,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2238",
    "title": "Number of Times a Driver Was a Passenger",
    "titleSlug": "number-of-times-a-driver-was-a-passenger",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.93922539510275,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2239",
    "title": "Find Closest Number to Zero",
    "titleSlug": "find-closest-number-to-zero",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.46078910745853,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2240",
    "title": "Number of Ways to Buy Pens and Pencils",
    "titleSlug": "number-of-ways-to-buy-pens-and-pencils",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.295493263125294,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2241",
    "title": "Design an ATM Machine",
    "titleSlug": "design-an-atm-machine",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.16766638103399,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2242",
    "title": "Maximum Score of a Node Sequence",
    "titleSlug": "maximum-score-of-a-node-sequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.44113153614903,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2243",
    "title": "Calculate Digit Sum of a String",
    "titleSlug": "calculate-digit-sum-of-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.00207634563169,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2244",
    "title": "Minimum Rounds to Complete All Tasks",
    "titleSlug": "minimum-rounds-to-complete-all-tasks",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.07662678992207,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2245",
    "title": "Maximum Trailing Zeros in a Cornered Path",
    "titleSlug": "maximum-trailing-zeros-in-a-cornered-path",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.962900438120506,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2246",
    "title": "Longest Path With Different Adjacent Characters",
    "titleSlug": "longest-path-with-different-adjacent-characters",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.85523522898965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2247",
    "title": "Maximum Cost of Trip With K Highways",
    "titleSlug": "maximum-cost-of-trip-with-k-highways",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.63723258989531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2248",
    "title": "Intersection of Multiple Arrays",
    "titleSlug": "intersection-of-multiple-arrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.51305519420183,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2249",
    "title": "Count Lattice Points Inside a Circle",
    "titleSlug": "count-lattice-points-inside-a-circle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.86006567314978,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2250",
    "title": "Count Number of Rectangles Containing Each Point",
    "titleSlug": "count-number-of-rectangles-containing-each-point",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.50850340136054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2251",
    "title": "Number of Flowers in Full Bloom",
    "titleSlug": "number-of-flowers-in-full-bloom",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.50469943380996,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2252",
    "title": "Dynamic Pivoting of a Table",
    "titleSlug": "dynamic-pivoting-of-a-table",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.738595018191994,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2253",
    "title": "Dynamic Unpivoting of a Table",
    "titleSlug": "dynamic-unpivoting-of-a-table",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 69.26229508196722,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2254",
    "title": "Design Video Sharing Platform",
    "titleSlug": "design-video-sharing-platform",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 63.811776422258184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2255",
    "title": "Count Prefixes of a Given String",
    "titleSlug": "count-prefixes-of-a-given-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.07090119051824,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2256",
    "title": "Minimum Average Difference",
    "titleSlug": "minimum-average-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.661136896282336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2257",
    "title": "Count Unguarded Cells in the Grid",
    "titleSlug": "count-unguarded-cells-in-the-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.66968847668505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2258",
    "title": "Escape the Spreading Fire",
    "titleSlug": "escape-the-spreading-fire",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.68775281865909,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2259",
    "title": "Remove Digit From Number to Maximize Result",
    "titleSlug": "remove-digit-from-number-to-maximize-result",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.775264541982345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2260",
    "title": "Minimum Consecutive Cards to Pick Up",
    "titleSlug": "minimum-consecutive-cards-to-pick-up",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.092949172409234,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2261",
    "title": "K Divisible Elements Subarrays",
    "titleSlug": "k-divisible-elements-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.434436067445844,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2262",
    "title": "Total Appeal of A String",
    "titleSlug": "total-appeal-of-a-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.028724324188836,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2263",
    "title": "Make Array Non-decreasing or Non-increasing",
    "titleSlug": "make-array-non-decreasing-or-non-increasing",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 65.4320987654321,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2264",
    "title": "Largest 3-Same-Digit Number in String",
    "titleSlug": "largest-3-same-digit-number-in-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.72720970697452,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2265",
    "title": "Count Nodes Equal to Average of Subtree",
    "titleSlug": "count-nodes-equal-to-average-of-subtree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.62966865706592,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2266",
    "title": "Count Number of Texts",
    "titleSlug": "count-number-of-texts",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.311934933372065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2267",
    "title": " Check if There Is a Valid Parentheses String Path",
    "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.697291003970975,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2268",
    "title": "Minimum Number of Keypresses",
    "titleSlug": "minimum-number-of-keypresses",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.34387351778656,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2269",
    "title": "Find the K-Beauty of a Number",
    "titleSlug": "find-the-k-beauty-of-a-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.313802619341665,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2270",
    "title": "Number of Ways to Split Array",
    "titleSlug": "number-of-ways-to-split-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.00562356102263,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2271",
    "title": "Maximum White Tiles Covered by a Carpet",
    "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.27382050493662,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2272",
    "title": "Substring With Largest Variance",
    "titleSlug": "substring-with-largest-variance",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.953849950641654,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2273",
    "title": "Find Resultant Array After Removing Anagrams",
    "titleSlug": "find-resultant-array-after-removing-anagrams",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.033390663567474,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2274",
    "title": "Maximum Consecutive Floors Without Special Floors",
    "titleSlug": "maximum-consecutive-floors-without-special-floors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.29042816111148,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2275",
    "title": "Largest Combination With Bitwise AND Greater Than Zero",
    "titleSlug": "largest-combination-with-bitwise-and-greater-than-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.81858407079646,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2276",
    "title": "Count Integers in Intervals",
    "titleSlug": "count-integers-in-intervals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.903083993871974,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2277",
    "title": "Closest Node to Path in Tree",
    "titleSlug": "closest-node-to-path-in-tree",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 62.27974116475858,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2278",
    "title": "Percentage of Letter in String",
    "titleSlug": "percentage-of-letter-in-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.75860203935542,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2279",
    "title": "Maximum Bags With Full Capacity of Rocks",
    "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.79549347740151,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2280",
    "title": "Minimum Lines to Represent a Line Chart",
    "titleSlug": "minimum-lines-to-represent-a-line-chart",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.408350384625344,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2281",
    "title": "Sum of Total Strength of Wizards",
    "titleSlug": "sum-of-total-strength-of-wizards",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.744255283957326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2282",
    "title": "Number of People That Can Be Seen in a Grid",
    "titleSlug": "number-of-people-that-can-be-seen-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.53656658968437,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2283",
    "title": "Check if Number Has Equal Digit Count and Digit Value",
    "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.79565902977461,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2284",
    "title": "Sender With Largest Word Count",
    "titleSlug": "sender-with-largest-word-count",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.88583486034761,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2285",
    "title": "Maximum Total Importance of Roads",
    "titleSlug": "maximum-total-importance-of-roads",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.13287955016277,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2286",
    "title": "Booking Concert Tickets in Groups",
    "titleSlug": "booking-concert-tickets-in-groups",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.98366834170854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2287",
    "title": "Rearrange Characters to Make Target String",
    "titleSlug": "rearrange-characters-to-make-target-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.59373917061338,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2288",
    "title": "Apply Discount to Prices",
    "titleSlug": "apply-discount-to-prices",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.31079733114623,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2289",
    "title": "Steps to Make Array Non-decreasing",
    "titleSlug": "steps-to-make-array-non-decreasing",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 23.56509838610077,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2290",
    "title": "Minimum Obstacle Removal to Reach Corner",
    "titleSlug": "minimum-obstacle-removal-to-reach-corner",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 70.24716842927278,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2291",
    "title": "Maximum Profit From Trading Stocks",
    "titleSlug": "maximum-profit-from-trading-stocks",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.170162014807474,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2292",
    "title": "Products With Three or More Orders in Two Consecutive Years",
    "titleSlug": "products-with-three-or-more-orders-in-two-consecutive-years",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.382103200522536,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2293",
    "title": "Min Max Game",
    "titleSlug": "min-max-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.92769876574149,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2294",
    "title": "Partition Array Such That Maximum Difference Is K",
    "titleSlug": "partition-array-such-that-maximum-difference-is-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.84666347381865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2295",
    "title": "Replace Elements in an Array",
    "titleSlug": "replace-elements-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.22655742486312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2296",
    "title": "Design a Text Editor",
    "titleSlug": "design-a-text-editor",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.48436204082724,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2297",
    "title": "Jump Game VIII",
    "titleSlug": "jump-game-viii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 45.0089552238806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2298",
    "title": "Tasks Count in the Weekend",
    "titleSlug": "tasks-count-in-the-weekend",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.71254405181446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2299",
    "title": "Strong Password Checker II",
    "titleSlug": "strong-password-checker-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.17400488074975,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2300",
    "title": "Successful Pairs of Spells and Potions",
    "titleSlug": "successful-pairs-of-spells-and-potions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.29505904661322,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2301",
    "title": "Match Substring After Replacement",
    "titleSlug": "match-substring-after-replacement",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.68558132552728,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2302",
    "title": "Count Subarrays With Score Less Than K",
    "titleSlug": "count-subarrays-with-score-less-than-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.30524127129857,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2303",
    "title": "Calculate Amount Paid in Taxes",
    "titleSlug": "calculate-amount-paid-in-taxes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.14409656733308,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2304",
    "title": "Minimum Path Cost in a Grid",
    "titleSlug": "minimum-path-cost-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.6398121067092,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2305",
    "title": "Fair Distribution of Cookies",
    "titleSlug": "fair-distribution-of-cookies",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.66171948121406,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2306",
    "title": "Naming a Company",
    "titleSlug": "naming-a-company",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.43268207061261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2307",
    "title": "Check for Contradictions in Equations",
    "titleSlug": "check-for-contradictions-in-equations",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 43.58288770053476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2308",
    "title": "Arrange Table by Gender",
    "titleSlug": "arrange-table-by-gender",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.3851261620186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2309",
    "title": "Greatest English Letter in Upper and Lower Case",
    "titleSlug": "greatest-english-letter-in-upper-and-lower-case",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.49639954520572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2310",
    "title": "Sum of Numbers With Units Digit K",
    "titleSlug": "sum-of-numbers-with-units-digit-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.63861145602764,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2311",
    "title": "Longest Binary Subsequence Less Than or Equal to K",
    "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.9049757918684,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2312",
    "title": "Selling Pieces of Wood",
    "titleSlug": "selling-pieces-of-wood",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.211315366767806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2313",
    "title": "Minimum Flips in Binary Tree to Get Result",
    "titleSlug": "minimum-flips-in-binary-tree-to-get-result",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 56.56038876377859,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2314",
    "title": "The First Day of the Maximum Recorded Degree in Each City",
    "titleSlug": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 73.43308865047995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2315",
    "title": "Count Asterisks",
    "titleSlug": "count-asterisks",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.00193543675138,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2316",
    "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
    "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.53629237729361,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2317",
    "title": "Maximum XOR After Operations ",
    "titleSlug": "maximum-xor-after-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.59858261053522,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2318",
    "title": "Number of Distinct Roll Sequences",
    "titleSlug": "number-of-distinct-roll-sequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.77604302194466,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2319",
    "title": "Check if Matrix Is X-Matrix",
    "titleSlug": "check-if-matrix-is-x-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 65.88548005491349,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2320",
    "title": "Count Number of Ways to Place Houses",
    "titleSlug": "count-number-of-ways-to-place-houses",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.226561394936155,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2321",
    "title": "Maximum Score Of Spliced Array",
    "titleSlug": "maximum-score-of-spliced-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.89581257504918,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2322",
    "title": "Minimum Score After Removals on a Tree",
    "titleSlug": "minimum-score-after-removals-on-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 76.39424644901538,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2323",
    "title": "Find Minimum Time to Finish All Jobs II",
    "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.83226358579375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2324",
    "title": "Product Sales Analysis IV",
    "titleSlug": "product-sales-analysis-iv",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.6958929727397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2325",
    "title": "Decode the Message",
    "titleSlug": "decode-the-message",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.67301308163009,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2326",
    "title": "Spiral Matrix IV",
    "titleSlug": "spiral-matrix-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.24391657281186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2327",
    "title": "Number of People Aware of a Secret",
    "titleSlug": "number-of-people-aware-of-a-secret",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.0316476510916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2328",
    "title": "Number of Increasing Paths in a Grid",
    "titleSlug": "number-of-increasing-paths-in-a-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.501675456744074,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2329",
    "title": "Product Sales Analysis V",
    "titleSlug": "product-sales-analysis-v",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 70.56868015277973,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2330",
    "title": "Valid Palindrome IV",
    "titleSlug": "valid-palindrome-iv",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.64083002746415,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2331",
    "title": "Evaluate Boolean Binary Tree",
    "titleSlug": "evaluate-boolean-binary-tree",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.41683613075546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2332",
    "title": "The Latest Time to Catch a Bus",
    "titleSlug": "the-latest-time-to-catch-a-bus",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.108900174088742,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2333",
    "title": "Minimum Sum of Squared Difference",
    "titleSlug": "minimum-sum-of-squared-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.172965508960466,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2334",
    "title": "Subarray With Elements Greater Than Varying Threshold",
    "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.91414532539322,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2335",
    "title": "Minimum Amount of Time to Fill Cups",
    "titleSlug": "minimum-amount-of-time-to-fill-cups",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.50369940104936,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2336",
    "title": "Smallest Number in Infinite Set",
    "titleSlug": "smallest-number-in-infinite-set",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.54434092477571,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2337",
    "title": "Move Pieces to Obtain a String",
    "titleSlug": "move-pieces-to-obtain-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.77911259104119,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2338",
    "title": "Count the Number of Ideal Arrays",
    "titleSlug": "count-the-number-of-ideal-arrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.92092162209491,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2339",
    "title": "All the Matches of the League",
    "titleSlug": "all-the-matches-of-the-league",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 88.48254178388217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2340",
    "title": "Minimum Adjacent Swaps to Make a Valid Array",
    "titleSlug": "minimum-adjacent-swaps-to-make-a-valid-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.21533430363142,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2341",
    "title": "Maximum Number of Pairs in Array",
    "titleSlug": "maximum-number-of-pairs-in-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.7589579404412,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2342",
    "title": "Max Sum of a Pair With Equal Sum of Digits",
    "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.95409308569906,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2343",
    "title": "Query Kth Smallest Trimmed Number",
    "titleSlug": "query-kth-smallest-trimmed-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.26099796960561,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Radix Sort",
        "slug": "radix-sort"
      },
      {
        "name": "Quickselect",
        "slug": "quickselect"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2344",
    "title": "Minimum Deletions to Make Array Divisible",
    "titleSlug": "minimum-deletions-to-make-array-divisible",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.137873375389525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2345",
    "title": "Finding the Number of Visible Mountains",
    "titleSlug": "finding-the-number-of-visible-mountains",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 36.641461877756775,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2346",
    "title": "Compute the Rank as a Percentage",
    "titleSlug": "compute-the-rank-as-a-percentage",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 34.00699955636615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2347",
    "title": "Best Poker Hand",
    "titleSlug": "best-poker-hand",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.4010196229319,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2348",
    "title": "Number of Zero-Filled Subarrays",
    "titleSlug": "number-of-zero-filled-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.19457350289547,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2349",
    "title": "Design a Number Container System",
    "titleSlug": "design-a-number-container-system",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.132310657279184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2350",
    "title": "Shortest Impossible Sequence of Rolls",
    "titleSlug": "shortest-impossible-sequence-of-rolls",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.12472067568079,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2351",
    "title": "First Letter to Appear Twice",
    "titleSlug": "first-letter-to-appear-twice",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.535294018335,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2352",
    "title": "Equal Row and Column Pairs",
    "titleSlug": "equal-row-and-column-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.6992776463648,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2353",
    "title": "Design a Food Rating System",
    "titleSlug": "design-a-food-rating-system",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.8156945459775,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2354",
    "title": "Number of Excellent Pairs",
    "titleSlug": "number-of-excellent-pairs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.54323694669042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2355",
    "title": "Maximum Number of Books You Can Take",
    "titleSlug": "maximum-number-of-books-you-can-take",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.33126713553463,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2356",
    "title": "Number of Unique Subjects Taught by Each Teacher",
    "titleSlug": "number-of-unique-subjects-taught-by-each-teacher",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.33825331220491,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2357",
    "title": "Make Array Zero by Subtracting Equal Amounts",
    "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.64709523388451,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2358",
    "title": "Maximum Number of Groups Entering a Competition",
    "titleSlug": "maximum-number-of-groups-entering-a-competition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.34342860748312,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2359",
    "title": "Find Closest Node to Given Two Nodes",
    "titleSlug": "find-closest-node-to-given-two-nodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.9193121735949,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2360",
    "title": "Longest Cycle in a Graph",
    "titleSlug": "longest-cycle-in-a-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.14728147240275,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2361",
    "title": "Minimum Costs Using the Train Line",
    "titleSlug": "minimum-costs-using-the-train-line",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 77.69618588338449,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2362",
    "title": "Generate the Invoice",
    "titleSlug": "generate-the-invoice",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 75.87179106692388,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2363",
    "title": "Merge Similar Items",
    "titleSlug": "merge-similar-items",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.10400738878342,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2364",
    "title": "Count Number of Bad Pairs",
    "titleSlug": "count-number-of-bad-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.28664588655495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2365",
    "title": "Task Scheduler II",
    "titleSlug": "task-scheduler-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.30402353188361,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2366",
    "title": "Minimum Replacements to Sort the Array",
    "titleSlug": "minimum-replacements-to-sort-the-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.20925863410195,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2367",
    "title": "Number of Arithmetic Triplets",
    "titleSlug": "number-of-arithmetic-triplets",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.21036654206077,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2368",
    "title": "Reachable Nodes With Restrictions",
    "titleSlug": "reachable-nodes-with-restrictions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.851921175573786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2369",
    "title": "Check if There is a Valid Partition For The Array",
    "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.067657220373476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2370",
    "title": "Longest Ideal Subsequence",
    "titleSlug": "longest-ideal-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.71810384438658,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2371",
    "title": "Minimize Maximum Value in a Grid",
    "titleSlug": "minimize-maximum-value-in-a-grid",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 70.41699449252557,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2372",
    "title": "Calculate the Influence of Each Salesperson",
    "titleSlug": "calculate-the-influence-of-each-salesperson",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.94397759103641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2373",
    "title": "Largest Local Values in a Matrix",
    "titleSlug": "largest-local-values-in-a-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.77026902269243,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2374",
    "title": "Node With Highest Edge Score",
    "titleSlug": "node-with-highest-edge-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.839524465486704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2375",
    "title": "Construct Smallest Number From DI String",
    "titleSlug": "construct-smallest-number-from-di-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.7246502531426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2376",
    "title": "Count Special Integers",
    "titleSlug": "count-special-integers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.59416279434031,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2377",
    "title": "Sort the Olympic Table",
    "titleSlug": "sort-the-olympic-table",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 79.24923780487805,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2378",
    "title": "Choose Edges to Maximize Score in a Tree",
    "titleSlug": "choose-edges-to-maximize-score-in-a-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.003382187147686,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2379",
    "title": "Minimum Recolors to Get K Consecutive Black Blocks",
    "titleSlug": "minimum-recolors-to-get-k-consecutive-black-blocks",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.46088074493846,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2380",
    "title": "Time Needed to Rearrange a Binary String",
    "titleSlug": "time-needed-to-rearrange-a-binary-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.92605397595336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2381",
    "title": "Shifting Letters II",
    "titleSlug": "shifting-letters-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.384482586671155,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2382",
    "title": "Maximum Segment Sum After Removals",
    "titleSlug": "maximum-segment-sum-after-removals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.974002443854545,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2383",
    "title": "Minimum Hours of Training to Win a Competition",
    "titleSlug": "minimum-hours-of-training-to-win-a-competition",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 42.10648480762217,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2384",
    "title": "Largest Palindromic Number",
    "titleSlug": "largest-palindromic-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.71295623091464,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2385",
    "title": "Amount of Time for Binary Tree to Be Infected",
    "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.61192990238037,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2386",
    "title": "Find the K-Sum of an Array",
    "titleSlug": "find-the-k-sum-of-an-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.31158085264553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2387",
    "title": "Median of a Row Wise Sorted Matrix",
    "titleSlug": "median-of-a-row-wise-sorted-matrix",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.05143083212448,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2388",
    "title": "Change Null Values in a Table to the Previous Value",
    "titleSlug": "change-null-values-in-a-table-to-the-previous-value",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.38107839894145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2389",
    "title": "Longest Subsequence With Limited Sum",
    "titleSlug": "longest-subsequence-with-limited-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.17571922139469,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2390",
    "title": "Removing Stars From a String",
    "titleSlug": "removing-stars-from-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.52869188750972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2391",
    "title": "Minimum Amount of Time to Collect Garbage",
    "titleSlug": "minimum-amount-of-time-to-collect-garbage",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.116867284566,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2392",
    "title": "Build a Matrix With Conditions",
    "titleSlug": "build-a-matrix-with-conditions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 79.26517596854997,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2393",
    "title": "Count Strictly Increasing Subarrays",
    "titleSlug": "count-strictly-increasing-subarrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.25944813769239,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2394",
    "title": "Employees With Deductions",
    "titleSlug": "employees-with-deductions",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.87689828302238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2395",
    "title": "Find Subarrays With Equal Sum",
    "titleSlug": "find-subarrays-with-equal-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.60076120804706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2396",
    "title": "Strictly Palindromic Number",
    "titleSlug": "strictly-palindromic-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 89.57913642872745,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2397",
    "title": "Maximum Rows Covered by Columns",
    "titleSlug": "maximum-rows-covered-by-columns",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.256889644287966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2398",
    "title": "Maximum Number of Robots Within Budget",
    "titleSlug": "maximum-number-of-robots-within-budget",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.368339251342015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2399",
    "title": "Check Distances Between Same Letters",
    "titleSlug": "check-distances-between-same-letters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.15840087597148,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2400",
    "title": "Number of Ways to Reach a Position After Exactly k Steps",
    "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.45183307332293,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2401",
    "title": "Longest Nice Subarray",
    "titleSlug": "longest-nice-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.79782753605625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2402",
    "title": "Meeting Rooms III",
    "titleSlug": "meeting-rooms-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.889200006222346,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2403",
    "title": "Minimum Time to Kill All Monsters",
    "titleSlug": "minimum-time-to-kill-all-monsters",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 56.893768162738134,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2404",
    "title": "Most Frequent Even Element",
    "titleSlug": "most-frequent-even-element",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.638713293275806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2405",
    "title": "Optimal Partition of String",
    "titleSlug": "optimal-partition-of-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.32226841588408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2406",
    "title": "Divide Intervals Into Minimum Number of Groups",
    "titleSlug": "divide-intervals-into-minimum-number-of-groups",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.587339662891516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2407",
    "title": "Longest Increasing Subsequence II",
    "titleSlug": "longest-increasing-subsequence-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.704677611452325,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2408",
    "title": "Design SQL",
    "titleSlug": "design-sql",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.16735611871962,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2409",
    "title": "Count Days Spent Together",
    "titleSlug": "count-days-spent-together",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.08838453882426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2410",
    "title": "Maximum Matching of Players With Trainers",
    "titleSlug": "maximum-matching-of-players-with-trainers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.11357183418512,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2411",
    "title": "Smallest Subarrays With Maximum Bitwise OR",
    "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.06302495659577,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2412",
    "title": "Minimum Money Required Before Transactions",
    "titleSlug": "minimum-money-required-before-transactions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.72020792302973,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2413",
    "title": "Smallest Even Multiple",
    "titleSlug": "smallest-even-multiple",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.10893800184374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2414",
    "title": "Length of the Longest Alphabetical Continuous Substring",
    "titleSlug": "length-of-the-longest-alphabetical-continuous-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.931792803034114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2415",
    "title": "Reverse Odd Levels of Binary Tree",
    "titleSlug": "reverse-odd-levels-of-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.66598309628088,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2416",
    "title": "Sum of Prefix Scores of Strings",
    "titleSlug": "sum-of-prefix-scores-of-strings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.74942700829108,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2417",
    "title": "Closest Fair Integer",
    "titleSlug": "closest-fair-integer",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 44.93712772998015,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2418",
    "title": "Sort the People",
    "titleSlug": "sort-the-people",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.78233700329896,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2419",
    "title": "Longest Subarray With Maximum Bitwise AND",
    "titleSlug": "longest-subarray-with-maximum-bitwise-and",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.39611849146063,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2420",
    "title": "Find All Good Indices",
    "titleSlug": "find-all-good-indices",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.303669675765185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2421",
    "title": "Number of Good Paths",
    "titleSlug": "number-of-good-paths",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.13895542129911,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2422",
    "title": "Merge Operations to Turn Array Into a Palindrome",
    "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.8751811526885,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2423",
    "title": "Remove Letter To Equalize Frequency",
    "titleSlug": "remove-letter-to-equalize-frequency",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 18.496197010063085,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2424",
    "title": "Longest Uploaded Prefix",
    "titleSlug": "longest-uploaded-prefix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.30394926726153,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2425",
    "title": "Bitwise XOR of All Pairings",
    "titleSlug": "bitwise-xor-of-all-pairings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.95362287795213,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2426",
    "title": "Number of Pairs Satisfying Inequality",
    "titleSlug": "number-of-pairs-satisfying-inequality",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.2435165295751,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2427",
    "title": "Number of Common Factors",
    "titleSlug": "number-of-common-factors",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.72688954990754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2428",
    "title": "Maximum Sum of an Hourglass",
    "titleSlug": "maximum-sum-of-an-hourglass",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.09597826907115,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2429",
    "title": "Minimize XOR",
    "titleSlug": "minimize-xor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.429241321706286,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2430",
    "title": "Maximum Deletions on a String",
    "titleSlug": "maximum-deletions-on-a-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.16417910447761,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2431",
    "title": "Maximize Total Tastiness of Purchased Fruits",
    "titleSlug": "maximize-total-tastiness-of-purchased-fruits",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.7428073234525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2432",
    "title": "The Employee That Worked on the Longest Task",
    "titleSlug": "the-employee-that-worked-on-the-longest-task",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.963327457892674,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2433",
    "title": "Find The Original Array of Prefix Xor",
    "titleSlug": "find-the-original-array-of-prefix-xor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 88.20469548816202,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2434",
    "title": "Using a Robot to Print the Lexicographically Smallest String",
    "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.515699311313625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2435",
    "title": "Paths in Matrix Whose Sum Is Divisible by K",
    "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.634403336153035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2436",
    "title": "Minimum Split Into Subarrays With GCD Greater Than One",
    "titleSlug": "minimum-split-into-subarrays-with-gcd-greater-than-one",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.07914220066377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2437",
    "title": "Number of Valid Clock Times",
    "titleSlug": "number-of-valid-clock-times",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.65425373231125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2438",
    "title": "Range Product Queries of Powers",
    "titleSlug": "range-product-queries-of-powers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.339106659361356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2439",
    "title": "Minimize Maximum of Array",
    "titleSlug": "minimize-maximum-of-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.40810693507722,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2440",
    "title": "Create Components With Same Value",
    "titleSlug": "create-components-with-same-value",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.731805643963504,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2441",
    "title": "Largest Positive Integer That Exists With Its Negative",
    "titleSlug": "largest-positive-integer-that-exists-with-its-negative",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.56800985907697,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2442",
    "title": "Count Number of Distinct Integers After Reverse Operations",
    "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.79045342669025,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2443",
    "title": "Sum of Number and Its Reverse",
    "titleSlug": "sum-of-number-and-its-reverse",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.81367254912877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2444",
    "title": "Count Subarrays With Fixed Bounds",
    "titleSlug": "count-subarrays-with-fixed-bounds",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.3036088665152,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2445",
    "title": "Number of Nodes With Value One",
    "titleSlug": "number-of-nodes-with-value-one",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.79462102689486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2446",
    "title": "Determine if Two Events Have Conflict",
    "titleSlug": "determine-if-two-events-have-conflict",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.652343921620314,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2447",
    "title": "Number of Subarrays With GCD Equal to K",
    "titleSlug": "number-of-subarrays-with-gcd-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.69191262514627,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2448",
    "title": "Minimum Cost to Make Array Equal",
    "titleSlug": "minimum-cost-to-make-array-equal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.52396451909459,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2449",
    "title": "Minimum Number of Operations to Make Arrays Similar",
    "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 61.13767087472921,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2450",
    "title": "Number of Distinct Binary Strings After Applying Operations",
    "titleSlug": "number-of-distinct-binary-strings-after-applying-operations",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.81322957198443,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2451",
    "title": "Odd String Difference",
    "titleSlug": "odd-string-difference",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.5511650252222,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2452",
    "title": "Words Within Two Edits of Dictionary",
    "titleSlug": "words-within-two-edits-of-dictionary",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.48488276657572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2453",
    "title": "Destroy Sequential Targets",
    "titleSlug": "destroy-sequential-targets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.17116947975143,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2454",
    "title": "Next Greater Element IV",
    "titleSlug": "next-greater-element-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.817143000025006,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2455",
    "title": "Average Value of Even Numbers That Are Divisible by Three",
    "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.262804335189934,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2456",
    "title": "Most Popular Video Creator",
    "titleSlug": "most-popular-video-creator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.97755842263039,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2457",
    "title": "Minimum Addition to Make Integer Beautiful",
    "titleSlug": "minimum-addition-to-make-integer-beautiful",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.314256317921675,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2458",
    "title": "Height of Binary Tree After Subtree Removal Queries",
    "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.91480926132453,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2459",
    "title": "Sort Array by Moving Items to Empty Space",
    "titleSlug": "sort-array-by-moving-items-to-empty-space",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.27173009805551,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2460",
    "title": "Apply Operations to an Array",
    "titleSlug": "apply-operations-to-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.72323173821762,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2461",
    "title": "Maximum Sum of Distinct Subarrays With Length K",
    "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.68610040973344,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2462",
    "title": "Total Cost to Hire K Workers",
    "titleSlug": "total-cost-to-hire-k-workers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.37728223795466,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2463",
    "title": "Minimum Total Distance Traveled",
    "titleSlug": "minimum-total-distance-traveled",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.9321199886446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2464",
    "title": "Minimum Subarrays in a Valid Split",
    "titleSlug": "minimum-subarrays-in-a-valid-split",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.0692924872356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2465",
    "title": "Number of Distinct Averages",
    "titleSlug": "number-of-distinct-averages",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.677869996830864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2466",
    "title": "Count Ways To Build Good Strings",
    "titleSlug": "count-ways-to-build-good-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.08730840926175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2467",
    "title": "Most Profitable Path in a Tree",
    "titleSlug": "most-profitable-path-in-a-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.42413675040262,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2468",
    "title": "Split Message Based on Limit",
    "titleSlug": "split-message-based-on-limit",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.123890009008626,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2469",
    "title": "Convert the Temperature",
    "titleSlug": "convert-the-temperature",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.23438021828287,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2470",
    "title": "Number of Subarrays With LCM Equal to K",
    "titleSlug": "number-of-subarrays-with-lcm-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.98331788693234,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2471",
    "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
    "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.27509840217587,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2472",
    "title": "Maximum Number of Non-overlapping Palindrome Substrings",
    "titleSlug": "maximum-number-of-non-overlapping-palindrome-substrings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.31509485839978,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2473",
    "title": "Minimum Cost to Buy Apples",
    "titleSlug": "minimum-cost-to-buy-apples",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.04458841463415,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2474",
    "title": "Customers With Strictly Increasing Purchases",
    "titleSlug": "customers-with-strictly-increasing-purchases",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 48.70413376683697,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2475",
    "title": "Number of Unequal Triplets in Array",
    "titleSlug": "number-of-unequal-triplets-in-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.90851523887973,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2476",
    "title": "Closest Nodes Queries in a Binary Search Tree",
    "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.43938603680799,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Search Tree",
        "slug": "binary-search-tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2477",
    "title": "Minimum Fuel Cost to Report to the Capital",
    "titleSlug": "minimum-fuel-cost-to-report-to-the-capital",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.4616018598431,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2478",
    "title": "Number of Beautiful Partitions",
    "titleSlug": "number-of-beautiful-partitions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.36089296289621,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2479",
    "title": "Maximum XOR of Two Non-Overlapping Subtrees",
    "titleSlug": "maximum-xor-of-two-non-overlapping-subtrees",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.43128234617596,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2480",
    "title": "Form a Chemical Bond",
    "titleSlug": "form-a-chemical-bond",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 79.27801218940459,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2481",
    "title": "Minimum Cuts to Divide a Circle",
    "titleSlug": "minimum-cuts-to-divide-a-circle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.57807735656185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2482",
    "title": "Difference Between Ones and Zeros in Row and Column",
    "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.37036364186878,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2483",
    "title": "Minimum Penalty for a Shop",
    "titleSlug": "minimum-penalty-for-a-shop",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.76277309923965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "frontendQuestionId": "2484",
    "title": "Count Palindromic Subsequences",
    "titleSlug": "count-palindromic-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.125304708548946,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2485",
    "title": "Find the Pivot Integer",
    "titleSlug": "find-the-pivot-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.82465905227235,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2486",
    "title": "Append Characters to String to Make Subsequence",
    "titleSlug": "append-characters-to-string-to-make-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.94182482003238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2487",
    "title": "Remove Nodes From Linked List",
    "titleSlug": "remove-nodes-from-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.5286612364053,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2488",
    "title": "Count Subarrays With Median K",
    "titleSlug": "count-subarrays-with-median-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.66307568004309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2489",
    "title": "Number of Substrings With Fixed Ratio",
    "titleSlug": "number-of-substrings-with-fixed-ratio",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.94599627560522,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2490",
    "title": "Circular Sentence",
    "titleSlug": "circular-sentence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.28431264090699,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2491",
    "title": "Divide Players Into Teams of Equal Skill",
    "titleSlug": "divide-players-into-teams-of-equal-skill",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.92876038163955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2492",
    "title": "Minimum Score of a Path Between Two Cities",
    "titleSlug": "minimum-score-of-a-path-between-two-cities",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.134136146946524,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2493",
    "title": "Divide Nodes Into the Maximum Number of Groups",
    "titleSlug": "divide-nodes-into-the-maximum-number-of-groups",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 67.1897752453308,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2494",
    "title": "Merge Overlapping Events in the Same Hall",
    "titleSlug": "merge-overlapping-events-in-the-same-hall",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 36.23818042422693,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2495",
    "title": "Number of Subarrays Having Even Product",
    "titleSlug": "number-of-subarrays-having-even-product",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.19990200881921,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2496",
    "title": "Maximum Value of a String in an Array",
    "titleSlug": "maximum-value-of-a-string-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.75701857222188,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2497",
    "title": "Maximum Star Sum of a Graph",
    "titleSlug": "maximum-star-sum-of-a-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.42794440380395,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2498",
    "title": "Frog Jump II",
    "titleSlug": "frog-jump-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.42819409298288,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2499",
    "title": "Minimum Total Cost to Make Arrays Unequal",
    "titleSlug": "minimum-total-cost-to-make-arrays-unequal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.96045197740113,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2500",
    "title": "Delete Greatest Value in Each Row",
    "titleSlug": "delete-greatest-value-in-each-row",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.3882668804594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2501",
    "title": "Longest Square Streak in an Array",
    "titleSlug": "longest-square-streak-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.073504650970214,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2502",
    "title": "Design Memory Allocator",
    "titleSlug": "design-memory-allocator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.24614175796481,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2503",
    "title": "Maximum Number of Points From Grid Queries",
    "titleSlug": "maximum-number-of-points-from-grid-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.388678823551324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2504",
    "title": "Concatenate the Name and the Profession",
    "titleSlug": "concatenate-the-name-and-the-profession",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 79.57494130730261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2505",
    "title": "Bitwise OR of All Subsequence Sums",
    "titleSlug": "bitwise-or-of-all-subsequence-sums",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.4901610017889,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2506",
    "title": "Count Pairs Of Similar Strings",
    "titleSlug": "count-pairs-of-similar-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.95932370862381,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2507",
    "title": "Smallest Value After Replacing With Sum of Prime Factors",
    "titleSlug": "smallest-value-after-replacing-with-sum-of-prime-factors",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.43034442000197,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2508",
    "title": "Add Edges to Make Degrees of All Nodes Even",
    "titleSlug": "add-edges-to-make-degrees-of-all-nodes-even",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.92339469488332,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2509",
    "title": "Cycle Length Queries in a Tree",
    "titleSlug": "cycle-length-queries-in-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.21768936084414,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2510",
    "title": "Check if There is a Path With Equal Number of 0's And 1's",
    "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.436801798636964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2511",
    "title": "Maximum Enemy Forts That Can Be Captured",
    "titleSlug": "maximum-enemy-forts-that-can-be-captured",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 40.55498981670061,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2512",
    "title": "Reward Top K Students",
    "titleSlug": "reward-top-k-students",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.4070742594346,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2513",
    "title": "Minimize the Maximum of Two Arrays",
    "titleSlug": "minimize-the-maximum-of-two-arrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.540723846107678,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2514",
    "title": "Count Anagrams",
    "titleSlug": "count-anagrams",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.4918574078226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2515",
    "title": "Shortest Distance to Target String in a Circular Array",
    "titleSlug": "shortest-distance-to-target-string-in-a-circular-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.37276842685008,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2516",
    "title": "Take K of Each Character From Left and Right",
    "titleSlug": "take-k-of-each-character-from-left-and-right",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.554293956653595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2517",
    "title": "Maximum Tastiness of Candy Basket",
    "titleSlug": "maximum-tastiness-of-candy-basket",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.20560078906144,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2518",
    "title": "Number of Great Partitions",
    "titleSlug": "number-of-great-partitions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.926414847732325,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2519",
    "title": "Count the Number of K-Big Indices",
    "titleSlug": "count-the-number-of-k-big-indices",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 53.37830241708825,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2520",
    "title": "Count the Digits That Divide a Number",
    "titleSlug": "count-the-digits-that-divide-a-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.84051207319547,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2521",
    "title": "Distinct Prime Factors of Product of Array",
    "titleSlug": "distinct-prime-factors-of-product-of-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.61429948304565,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2522",
    "title": "Partition String Into Substrings With Values at Most K",
    "titleSlug": "partition-string-into-substrings-with-values-at-most-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.130845257412595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2523",
    "title": "Closest Prime Numbers in Range",
    "titleSlug": "closest-prime-numbers-in-range",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.509676766768564,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2524",
    "title": "Maximum Frequency Score of a Subarray",
    "titleSlug": "maximum-frequency-score-of-a-subarray",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 35.540890879094974,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2525",
    "title": "Categorize Box According to Criteria",
    "titleSlug": "categorize-box-according-to-criteria",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 38.105754302650915,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2526",
    "title": "Find Consecutive Integers from a Data Stream",
    "titleSlug": "find-consecutive-integers-from-a-data-stream",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.12372794494473,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2527",
    "title": "Find Xor-Beauty of Array",
    "titleSlug": "find-xor-beauty-of-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.93959425575565,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2528",
    "title": "Maximize the Minimum Powered City",
    "titleSlug": "maximize-the-minimum-powered-city",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.516984839977546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2529",
    "title": "Maximum Count of Positive Integer and Negative Integer",
    "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.4551319726141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2530",
    "title": "Maximal Score After Applying K Operations",
    "titleSlug": "maximal-score-after-applying-k-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.90402313542533,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2531",
    "title": "Make Number of Distinct Characters Equal",
    "titleSlug": "make-number-of-distinct-characters-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.253019510684425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2532",
    "title": "Time to Cross a Bridge",
    "titleSlug": "time-to-cross-a-bridge",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.10999023755288,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2533",
    "title": "Number of Good Binary Strings",
    "titleSlug": "number-of-good-binary-strings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.49360613810742,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2534",
    "title": "Time Taken to Cross the Door",
    "titleSlug": "time-taken-to-cross-the-door",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.73446031864761,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2535",
    "title": "Difference Between Element Sum and Digit Sum of an Array",
    "titleSlug": "difference-between-element-sum-and-digit-sum-of-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.16951142757837,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2536",
    "title": "Increment Submatrices by One",
    "titleSlug": "increment-submatrices-by-one",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.9853509999177,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2537",
    "title": "Count the Number of Good Subarrays",
    "titleSlug": "count-the-number-of-good-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.91953661147139,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2538",
    "title": "Difference Between Maximum and Minimum Price Sum",
    "titleSlug": "difference-between-maximum-and-minimum-price-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.57934705004219,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2539",
    "title": "Count the Number of Good Subsequences",
    "titleSlug": "count-the-number-of-good-subsequences",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.15432017831389,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2540",
    "title": "Minimum Common Value",
    "titleSlug": "minimum-common-value",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.0386970771609,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2541",
    "title": "Minimum Operations to Make Array Equal II",
    "titleSlug": "minimum-operations-to-make-array-equal-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.77169744707272,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2542",
    "title": "Maximum Subsequence Score",
    "titleSlug": "maximum-subsequence-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.41446438196718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2543",
    "title": "Check if Point Is Reachable",
    "titleSlug": "check-if-point-is-reachable",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.22097427190806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2544",
    "title": "Alternating Digit Sum",
    "titleSlug": "alternating-digit-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.60460639289097,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2545",
    "title": "Sort the Students by Their Kth Score",
    "titleSlug": "sort-the-students-by-their-kth-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.8771163525937,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2546",
    "title": "Apply Bitwise Operations to Make Strings Equal",
    "titleSlug": "apply-bitwise-operations-to-make-strings-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.02078163771712,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2547",
    "title": "Minimum Cost to Split an Array",
    "titleSlug": "minimum-cost-to-split-an-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.07748394514709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2548",
    "title": "Maximum Price to Fill a Bag",
    "titleSlug": "maximum-price-to-fill-a-bag",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.91534391534391,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2549",
    "title": "Count Distinct Numbers on Board",
    "titleSlug": "count-distinct-numbers-on-board",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.38293400588483,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2550",
    "title": "Count Collisions of Monkeys on a Polygon",
    "titleSlug": "count-collisions-of-monkeys-on-a-polygon",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.232488562414872,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2551",
    "title": "Put Marbles in Bags",
    "titleSlug": "put-marbles-in-bags",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 72.22564278793607,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2552",
    "title": "Count Increasing Quadruplets",
    "titleSlug": "count-increasing-quadruplets",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.28411961694378,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2553",
    "title": "Separate the Digits in an Array",
    "titleSlug": "separate-the-digits-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.52618243243244,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2554",
    "title": "Maximum Number of Integers to Choose From a Range I",
    "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.96818866731537,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2555",
    "title": "Maximize Win From Two Segments",
    "titleSlug": "maximize-win-from-two-segments",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.18940542801862,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2556",
    "title": "Disconnect Path in a Binary Matrix by at Most One Flip",
    "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.458001837176354,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2557",
    "title": "Maximum Number of Integers to Choose From a Range II",
    "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 35.2672154710571,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2558",
    "title": "Take Gifts From the Richest Pile",
    "titleSlug": "take-gifts-from-the-richest-pile",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.56144139414836,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2559",
    "title": "Count Vowel Strings in Ranges",
    "titleSlug": "count-vowel-strings-in-ranges",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.81532110665563,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2560",
    "title": "House Robber IV",
    "titleSlug": "house-robber-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.94518162655977,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2561",
    "title": "Rearranging Fruits",
    "titleSlug": "rearranging-fruits",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.65364147787745,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sort",
        "slug": "sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2562",
    "title": "Find the Array Concatenation Value",
    "titleSlug": "find-the-array-concatenation-value",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.41438264440674,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2563",
    "title": "Count the Number of Fair Pairs",
    "titleSlug": "count-the-number-of-fair-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.76935127499276,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2564",
    "title": "Substring XOR Queries",
    "titleSlug": "substring-xor-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.022125891808905,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2565",
    "title": "Subsequence With the Minimum Score",
    "titleSlug": "subsequence-with-the-minimum-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.68510077990479,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2566",
    "title": "Maximum Difference by Remapping a Digit",
    "titleSlug": "maximum-difference-by-remapping-a-digit",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.21250919793965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2567",
    "title": "Minimum Score by Changing Two Elements",
    "titleSlug": "minimum-score-by-changing-two-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.4319782180077,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2568",
    "title": "Minimum Impossible OR",
    "titleSlug": "minimum-impossible-or",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.22889535774475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2569",
    "title": "Handling Sum Queries After Update",
    "titleSlug": "handling-sum-queries-after-update",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.910845088108495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2570",
    "title": "Merge Two 2D Arrays by Summing Values",
    "titleSlug": "merge-two-2d-arrays-by-summing-values",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.85054663409555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2571",
    "title": "Minimum Operations to Reduce an Integer to 0",
    "titleSlug": "minimum-operations-to-reduce-an-integer-to-0",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.96673167856993,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2572",
    "title": "Count the Number of Square-Free Subsets",
    "titleSlug": "count-the-number-of-square-free-subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.68790982388716,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2573",
    "title": "Find the String with LCP",
    "titleSlug": "find-the-string-with-lcp",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.28963747802538,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2574",
    "title": "Left and Right Sum Differences",
    "titleSlug": "left-and-right-sum-differences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.6678659209917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2575",
    "title": "Find the Divisibility Array of a String",
    "titleSlug": "find-the-divisibility-array-of-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.149765427643445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2576",
    "title": "Find the Maximum Number of Marked Indices",
    "titleSlug": "find-the-maximum-number-of-marked-indices",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.578387102032835,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2577",
    "title": "Minimum Time to Visit a Cell In a Grid",
    "titleSlug": "minimum-time-to-visit-a-cell-in-a-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.558919668504636,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2578",
    "title": "Split With Minimum Sum",
    "titleSlug": "split-with-minimum-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.65159441386527,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2579",
    "title": "Count Total Number of Colored Cells",
    "titleSlug": "count-total-number-of-colored-cells",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.14645188806142,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2580",
    "title": "Count Ways to Group Overlapping Ranges",
    "titleSlug": "count-ways-to-group-overlapping-ranges",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.597835968555586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2581",
    "title": "Count Number of Possible Root Nodes",
    "titleSlug": "count-number-of-possible-root-nodes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.32993197278911,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2582",
    "title": "Pass the Pillow",
    "titleSlug": "pass-the-pillow",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.55499250511993,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2583",
    "title": "Kth Largest Sum in a Binary Tree",
    "titleSlug": "kth-largest-sum-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.13655515613079,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2584",
    "title": "Split the Array to Make Coprime Products",
    "titleSlug": "split-the-array-to-make-coprime-products",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.432191590086326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2585",
    "title": "Number of Ways to Earn Points",
    "titleSlug": "number-of-ways-to-earn-points",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.07459867799811,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2586",
    "title": "Count the Number of Vowel Strings in Range",
    "titleSlug": "count-the-number-of-vowel-strings-in-range",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.81884671988584,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2587",
    "title": "Rearrange Array to Maximize Prefix Score",
    "titleSlug": "rearrange-array-to-maximize-prefix-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.04206249219698,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2588",
    "title": "Count the Number of Beautiful Subarrays",
    "titleSlug": "count-the-number-of-beautiful-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.629813497920296,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2589",
    "title": "Minimum Time to Complete All Tasks",
    "titleSlug": "minimum-time-to-complete-all-tasks",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.64643559416547,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2590",
    "title": "Design a Todo List",
    "titleSlug": "design-a-todo-list",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.46896992962252,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2591",
    "title": "Distribute Money to Maximum Children",
    "titleSlug": "distribute-money-to-maximum-children",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 19.85811980890744,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2592",
    "title": "Maximize Greatness of an Array",
    "titleSlug": "maximize-greatness-of-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.35063518542282,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2593",
    "title": "Find Score of an Array After Marking All Elements",
    "titleSlug": "find-score-of-an-array-after-marking-all-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.47704174625625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2594",
    "title": "Minimum Time to Repair Cars",
    "titleSlug": "minimum-time-to-repair-cars",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.76546317835633,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2595",
    "title": "Number of Even and Odd Bits",
    "titleSlug": "number-of-even-and-odd-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.98703984558114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2596",
    "title": "Check Knight Tour Configuration",
    "titleSlug": "check-knight-tour-configuration",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.47296971542395,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2597",
    "title": "The Number of Beautiful Subsets",
    "titleSlug": "the-number-of-beautiful-subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.855983127064356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2598",
    "title": "Smallest Missing Non-negative Integer After Operations",
    "titleSlug": "smallest-missing-non-negative-integer-after-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.52364352834192,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2599",
    "title": "Make the Prefix Sum Non-negative",
    "titleSlug": "make-the-prefix-sum-non-negative",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.83445474165291,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2600",
    "title": "K Items With the Maximum Sum",
    "titleSlug": "k-items-with-the-maximum-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.80753249684522,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2601",
    "title": "Prime Subtraction Operation",
    "titleSlug": "prime-subtraction-operation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.56056994843011,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2602",
    "title": "Minimum Operations to Make All Array Elements Equal",
    "titleSlug": "minimum-operations-to-make-all-array-elements-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.39567566066295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2603",
    "title": "Collect Coins in a Tree",
    "titleSlug": "collect-coins-in-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.473116481311145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2604",
    "title": "Minimum Time to Eat All Grains",
    "titleSlug": "minimum-time-to-eat-all-grains",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.987961476725516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2605",
    "title": "Form Smallest Number From Two Digit Arrays",
    "titleSlug": "form-smallest-number-from-two-digit-arrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.61575584869237,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2606",
    "title": "Find the Substring With Maximum Cost",
    "titleSlug": "find-the-substring-with-maximum-cost",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.39851593190747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2607",
    "title": "Make K-Subarray Sums Equal",
    "titleSlug": "make-k-subarray-sums-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.43473966417384,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2608",
    "title": "Shortest Cycle in a Graph",
    "titleSlug": "shortest-cycle-in-a-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.37413081576121,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2609",
    "title": "Find the Longest Balanced Substring of a Binary String",
    "titleSlug": "find-the-longest-balanced-substring-of-a-binary-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.836488919237695,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2610",
    "title": "Convert an Array Into a 2D Array With Conditions",
    "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.35751364721266,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2611",
    "title": "Mice and Cheese",
    "titleSlug": "mice-and-cheese",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.76873650034641,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2612",
    "title": "Minimum Reverse Operations",
    "titleSlug": "minimum-reverse-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.628128128128127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2613",
    "title": "Beautiful Pairs",
    "titleSlug": "beautiful-pairs",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 48.85644768856447,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2614",
    "title": "Prime In Diagonal",
    "titleSlug": "prime-in-diagonal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 36.824720911497295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2615",
    "title": "Sum of Distances",
    "titleSlug": "sum-of-distances",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.889692476727475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2616",
    "title": "Minimize the Maximum Difference of Pairs",
    "titleSlug": "minimize-the-maximum-difference-of-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.925432508798885,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2617",
    "title": "Minimum Number of Visited Cells in a Grid",
    "titleSlug": "minimum-number-of-visited-cells-in-a-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.10507822304024,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2618",
    "title": "Check if Object Instance of Class",
    "titleSlug": "check-if-object-instance-of-class",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.603848871524168,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2619",
    "title": "Array Prototype Last",
    "titleSlug": "array-prototype-last",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.49305885974978,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2620",
    "title": "Counter",
    "titleSlug": "counter",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.25996859711712,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2621",
    "title": "Sleep",
    "titleSlug": "sleep",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.46926145121247,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2622",
    "title": "Cache With Time Limit",
    "titleSlug": "cache-with-time-limit",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.86470990043675,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2623",
    "title": "Memoize",
    "titleSlug": "memoize",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.40141254996313,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2624",
    "title": "Snail Traversal",
    "titleSlug": "snail-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.61048325029367,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2625",
    "title": "Flatten Deeply Nested Array",
    "titleSlug": "flatten-deeply-nested-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.92215754329389,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2626",
    "title": "Array Reduce Transformation",
    "titleSlug": "array-reduce-transformation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.4279372779247,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2627",
    "title": "Debounce",
    "titleSlug": "debounce",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 91.65980021445905,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2628",
    "title": "JSON Deep Equal",
    "titleSlug": "json-deep-equal",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 39.230852738424794,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2629",
    "title": "Function Composition",
    "titleSlug": "function-composition",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.86277462511492,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2630",
    "title": "Memoize II",
    "titleSlug": "memoize-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.7315927665397,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2631",
    "title": "Group By",
    "titleSlug": "group-by",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.17285752653642,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2632",
    "title": "Curry",
    "titleSlug": "curry",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 89.47805282945168,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2633",
    "title": "Convert Object to JSON String",
    "titleSlug": "convert-object-to-json-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.97995016515037,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2634",
    "title": "Filter Elements from Array",
    "titleSlug": "filter-elements-from-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.48152378145379,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2635",
    "title": "Apply Transform Over Each Element in Array",
    "titleSlug": "apply-transform-over-each-element-in-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.18400315208827,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2636",
    "title": "Promise Pool",
    "titleSlug": "promise-pool",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 79.65783664459161,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2637",
    "title": "Promise Time Limit",
    "titleSlug": "promise-time-limit",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 82.96709585121602,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2638",
    "title": "Count the Number of K-Free Subsets",
    "titleSlug": "count-the-number-of-k-free-subsets",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 46.98386505317199,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2639",
    "title": "Find the Width of Columns of a Grid",
    "titleSlug": "find-the-width-of-columns-of-a-grid",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.76015495926622,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2640",
    "title": "Find the Score of All Prefixes of an Array",
    "titleSlug": "find-the-score-of-all-prefixes-of-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.3424731841327,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2641",
    "title": "Cousins in Binary Tree II",
    "titleSlug": "cousins-in-binary-tree-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.60985990855141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2642",
    "title": "Design Graph With Shortest Path Calculator",
    "titleSlug": "design-graph-with-shortest-path-calculator",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.3601708388117,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2643",
    "title": "Row With Maximum Ones",
    "titleSlug": "row-with-maximum-ones",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.2513482827136,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2644",
    "title": "Find the Maximum Divisibility Score",
    "titleSlug": "find-the-maximum-divisibility-score",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.848742241097675,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2645",
    "title": "Minimum Additions to Make Valid String",
    "titleSlug": "minimum-additions-to-make-valid-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.56363431405704,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2646",
    "title": "Minimize the Total Price of the Trips",
    "titleSlug": "minimize-the-total-price-of-the-trips",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.07716004107378,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2647",
    "title": "Color the Triangle Red",
    "titleSlug": "color-the-triangle-red",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 60.16483516483516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2648",
    "title": "Generate Fibonacci Sequence",
    "titleSlug": "generate-fibonacci-sequence",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.51945725502154,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2649",
    "title": "Nested Array Generator",
    "titleSlug": "nested-array-generator",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.07707853550782,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2650",
    "title": "Design Cancellable Function",
    "titleSlug": "design-cancellable-function",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.684127212548574,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2651",
    "title": "Calculate Delayed Arrival Time",
    "titleSlug": "calculate-delayed-arrival-time",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.85921714205159,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2652",
    "title": "Sum Multiples",
    "titleSlug": "sum-multiples",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.47542171010014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2653",
    "title": "Sliding Subarray Beauty",
    "titleSlug": "sliding-subarray-beauty",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.04909780566486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2654",
    "title": "Minimum Number of Operations to Make All Array Elements Equal to 1",
    "titleSlug": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.92755633370472,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2655",
    "title": "Find Maximal Uncovered Ranges",
    "titleSlug": "find-maximal-uncovered-ranges",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.56011730205279,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2656",
    "title": "Maximum Sum With Exactly K Elements ",
    "titleSlug": "maximum-sum-with-exactly-k-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.11238740599951,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2657",
    "title": "Find the Prefix Common Array of Two Arrays",
    "titleSlug": "find-the-prefix-common-array-of-two-arrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 86.99957971955833,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2658",
    "title": "Maximum Number of Fish in a Grid",
    "titleSlug": "maximum-number-of-fish-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.4347355313735,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2659",
    "title": "Make Array Empty",
    "titleSlug": "make-array-empty",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.96200119347822,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2660",
    "title": "Determine the Winner of a Bowling Game",
    "titleSlug": "determine-the-winner-of-a-bowling-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 36.45273991463582,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2661",
    "title": "First Completely Painted Row or Column",
    "titleSlug": "first-completely-painted-row-or-column",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.906090118589965,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2662",
    "title": "Minimum Cost of a Path With Special Roads",
    "titleSlug": "minimum-cost-of-a-path-with-special-roads",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.56368163792308,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2663",
    "title": "Lexicographically Smallest Beautiful String",
    "titleSlug": "lexicographically-smallest-beautiful-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.542575548952826,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2664",
    "title": "The Knight\u2019s Tour",
    "titleSlug": "the-knights-tour",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 72.52931323283082,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2665",
    "title": "Counter II",
    "titleSlug": "counter-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.12166746766606,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2666",
    "title": "Allow One Function Call",
    "titleSlug": "allow-one-function-call",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.663350329561,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2667",
    "title": "Create Hello World Function",
    "titleSlug": "create-hello-world-function",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.00730846227002,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2668",
    "title": "Find Latest Salaries",
    "titleSlug": "find-latest-salaries",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 74.7020518491215,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2669",
    "title": "Count Artist Occurrences On Spotify Ranking List",
    "titleSlug": "count-artist-occurrences-on-spotify-ranking-list",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 74.19882721941906,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2670",
    "title": "Find the Distinct Difference Array",
    "titleSlug": "find-the-distinct-difference-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.61056205085902,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2671",
    "title": "Frequency Tracker",
    "titleSlug": "frequency-tracker",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.2828226033174,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2672",
    "title": "Number of Adjacent Elements With the Same Color",
    "titleSlug": "number-of-adjacent-elements-with-the-same-color",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.04531493644568,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2673",
    "title": "Make Costs of Paths Equal in a Binary Tree",
    "titleSlug": "make-costs-of-paths-equal-in-a-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.6041479504094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2674",
    "title": "Split a Circular Linked List",
    "titleSlug": "split-a-circular-linked-list",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.03133297928836,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2675",
    "title": "Array of Objects to Matrix",
    "titleSlug": "array-of-objects-to-matrix",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 68.64549433284705,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2676",
    "title": "Throttle",
    "titleSlug": "throttle",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.14521627149458,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2677",
    "title": "Chunk Array",
    "titleSlug": "chunk-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.53390180622345,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2678",
    "title": "Number of Senior Citizens",
    "titleSlug": "number-of-senior-citizens",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.29809770253658,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2679",
    "title": "Sum in a Matrix",
    "titleSlug": "sum-in-a-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.763524671378555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2680",
    "title": "Maximum OR",
    "titleSlug": "maximum-or",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.84752499096712,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2681",
    "title": "Power of Heroes",
    "titleSlug": "power-of-heroes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.527754849360296,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2682",
    "title": "Find the Losers of the Circular Game",
    "titleSlug": "find-the-losers-of-the-circular-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 49.32355486721632,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2683",
    "title": "Neighboring Bitwise XOR",
    "titleSlug": "neighboring-bitwise-xor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.83139520468127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2684",
    "title": "Maximum Number of Moves in a Grid",
    "titleSlug": "maximum-number-of-moves-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.79972633076168,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2685",
    "title": "Count the Number of Complete Components",
    "titleSlug": "count-the-number-of-complete-components",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.65848911490951,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2686",
    "title": "Immediate Food Delivery III",
    "titleSlug": "immediate-food-delivery-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.68603874415497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2687",
    "title": "Bikes Last Time Used ",
    "titleSlug": "bikes-last-time-used",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.57914520395379,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2688",
    "title": "Find Active Users",
    "titleSlug": "find-active-users",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 44.82015580971324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2689",
    "title": "Extract Kth Character From The Rope Tree",
    "titleSlug": "extract-kth-character-from-the-rope-tree",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 73.72838677186503,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2690",
    "title": "Infinite Method Object",
    "titleSlug": "infinite-method-object",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 93.48249027237354,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2691",
    "title": "Immutability Helper",
    "titleSlug": "immutability-helper",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 41.39976275207592,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2692",
    "title": "Make Object Immutable",
    "titleSlug": "make-object-immutable",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.00970873786408,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2693",
    "title": "Call Function with Custom Context",
    "titleSlug": "call-function-with-custom-context",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.43742717315311,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2694",
    "title": "Event Emitter",
    "titleSlug": "event-emitter",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.63549978238792,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2695",
    "title": "Array Wrapper",
    "titleSlug": "array-wrapper",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.11104063538464,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2696",
    "title": "Minimum String Length After Removing Substrings",
    "titleSlug": "minimum-string-length-after-removing-substrings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.0860751123184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2697",
    "title": "Lexicographically Smallest Palindrome",
    "titleSlug": "lexicographically-smallest-palindrome",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.35037023659021,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2698",
    "title": "Find the Punishment Number of an Integer",
    "titleSlug": "find-the-punishment-number-of-an-integer",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 81.77403298812581,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2699",
    "title": "Modify Graph Edge Weights",
    "titleSlug": "modify-graph-edge-weights",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.833068548589395,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2700",
    "title": "Differences Between Two Objects",
    "titleSlug": "differences-between-two-objects",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.21126760563381,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2701",
    "title": "Consecutive Transactions with Increasing Amounts",
    "titleSlug": "consecutive-transactions-with-increasing-amounts",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 34.85471395721553,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2702",
    "title": "Minimum Operations to Make Numbers Non-positive",
    "titleSlug": "minimum-operations-to-make-numbers-non-positive",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.88767513654714,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2703",
    "title": "Return Length of Arguments Passed",
    "titleSlug": "return-length-of-arguments-passed",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 94.48765891155935,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2704",
    "title": "To Be Or Not To Be",
    "titleSlug": "to-be-or-not-to-be",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.020527390499936,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2705",
    "title": "Compact Object",
    "titleSlug": "compact-object",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.13707382899507,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2706",
    "title": "Buy Two Chocolates",
    "titleSlug": "buy-two-chocolates",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.28452877210336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2707",
    "title": "Extra Characters in a String",
    "titleSlug": "extra-characters-in-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.1436607708569,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2708",
    "title": "Maximum Strength of a Group",
    "titleSlug": "maximum-strength-of-a-group",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.07893645000457,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2709",
    "title": "Greatest Common Divisor Traversal",
    "titleSlug": "greatest-common-divisor-traversal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.740484602890206,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2710",
    "title": "Remove Trailing Zeros From a String",
    "titleSlug": "remove-trailing-zeros-from-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.02358559346749,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2711",
    "title": "Difference of Number of Distinct Values on Diagonals",
    "titleSlug": "difference-of-number-of-distinct-values-on-diagonals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.0924317617866,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2712",
    "title": "Minimum Cost to Make All Characters Equal",
    "titleSlug": "minimum-cost-to-make-all-characters-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.75117766648485,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2713",
    "title": "Maximum Strictly Increasing Cells in a Matrix",
    "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 31.037106402902964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2714",
    "title": "Find Shortest Path with K Hops",
    "titleSlug": "find-shortest-path-with-k-hops",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 68.55168080427269,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2715",
    "title": "Timeout Cancellation",
    "titleSlug": "timeout-cancellation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.61075497859856,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2716",
    "title": "Minimize String Length",
    "titleSlug": "minimize-string-length",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.0408250279806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2717",
    "title": "Semi-Ordered Permutation",
    "titleSlug": "semi-ordered-permutation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.61737313952476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2718",
    "title": "Sum of Matrix After Queries",
    "titleSlug": "sum-of-matrix-after-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.475102611817185,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2719",
    "title": "Count of Integers",
    "titleSlug": "count-of-integers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.5649357477864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2720",
    "title": "Popularity Percentage",
    "titleSlug": "popularity-percentage",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 53.245952197378564,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2721",
    "title": "Execute Asynchronous Functions in Parallel",
    "titleSlug": "execute-asynchronous-functions-in-parallel",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.96059611837488,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2722",
    "title": "Join Two Arrays by ID",
    "titleSlug": "join-two-arrays-by-id",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.3846674850781,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2723",
    "title": "Add Two Promises",
    "titleSlug": "add-two-promises",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 91.71979108395966,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2724",
    "title": "Sort By",
    "titleSlug": "sort-by",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.2088145180297,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2725",
    "title": "Interval Cancellation",
    "titleSlug": "interval-cancellation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.27641921898488,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2726",
    "title": "Calculator with Method Chaining",
    "titleSlug": "calculator-with-method-chaining",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.52794674989649,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2727",
    "title": "Is Object Empty",
    "titleSlug": "is-object-empty",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.57095305505605,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2728",
    "title": "Count Houses in a Circular Street",
    "titleSlug": "count-houses-in-a-circular-street",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 85.52294100883444,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2729",
    "title": "Check if The Number is Fascinating",
    "titleSlug": "check-if-the-number-is-fascinating",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.668371382843695,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2730",
    "title": "Find the Longest Semi-Repetitive Substring",
    "titleSlug": "find-the-longest-semi-repetitive-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.85328204430481,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2731",
    "title": "Movement of Robots",
    "titleSlug": "movement-of-robots",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.436741906980483,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2732",
    "title": "Find a Good Subset of the Matrix",
    "titleSlug": "find-a-good-subset-of-the-matrix",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.43881313279101,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2733",
    "title": "Neither Minimum nor Maximum",
    "titleSlug": "neither-minimum-nor-maximum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.16270530927962,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2734",
    "title": "Lexicographically Smallest String After Substring Operation",
    "titleSlug": "lexicographically-smallest-string-after-substring-operation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.19973481195757,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2735",
    "title": "Collecting Chocolates",
    "titleSlug": "collecting-chocolates",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.24641290169572,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2736",
    "title": "Maximum Sum Queries",
    "titleSlug": "maximum-sum-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.12176724137931,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2737",
    "title": "Find the Closest Marked Node",
    "titleSlug": "find-the-closest-marked-node",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 65.08068234209313,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2738",
    "title": "Count Occurrences in Text",
    "titleSlug": "count-occurrences-in-text",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.963335887052644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2739",
    "title": "Total Distance Traveled",
    "titleSlug": "total-distance-traveled",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 40.55575492741691,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2740",
    "title": "Find the Value of the Partition",
    "titleSlug": "find-the-value-of-the-partition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.55076842243531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2741",
    "title": "Special Permutations",
    "titleSlug": "special-permutations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.93884059461962,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2742",
    "title": "Painting the Walls",
    "titleSlug": "painting-the-walls",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.675518051147066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2743",
    "title": "Count Substrings Without Repeating Character",
    "titleSlug": "count-substrings-without-repeating-character",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 76.11019379508126,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2744",
    "title": "Find Maximum Number of String Pairs",
    "titleSlug": "find-maximum-number-of-string-pairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.91997249591736,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2745",
    "title": "Construct the Longest New String",
    "titleSlug": "construct-the-longest-new-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.32220884225013,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2746",
    "title": "Decremental String Concatenation",
    "titleSlug": "decremental-string-concatenation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.75888508962802,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2747",
    "title": "Count Zero Request Servers",
    "titleSlug": "count-zero-request-servers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.925859934164826,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2748",
    "title": "Number of Beautiful Pairs",
    "titleSlug": "number-of-beautiful-pairs",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 51.43357459724493,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2749",
    "title": "Minimum Operations to Make the Integer Zero",
    "titleSlug": "minimum-operations-to-make-the-integer-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.181502150984855,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2750",
    "title": "Ways to Split Array Into Good Subarrays",
    "titleSlug": "ways-to-split-array-into-good-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.39657535140497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2751",
    "title": "Robot Collisions",
    "titleSlug": "robot-collisions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.086220648600275,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2752",
    "title": "Customers with Maximum Number of Transactions on Consecutive Days",
    "titleSlug": "customers-with-maximum-number-of-transactions-on-consecutive-days",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 41.920731707317074,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2753",
    "title": "Count Houses in a Circular Street II",
    "titleSlug": "count-houses-in-a-circular-street-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 61.77304964539007,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2754",
    "title": "Bind Function to Context",
    "titleSlug": "bind-function-to-context",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 87.03703703703704,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2755",
    "title": "Deep Merge of Two Objects",
    "titleSlug": "deep-merge-of-two-objects",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.62264150943396,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2756",
    "title": "Query Batching",
    "titleSlug": "query-batching",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 66.66666666666666,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2757",
    "title": "Generate Circular Array Values",
    "titleSlug": "generate-circular-array-values",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.73053892215569,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2758",
    "title": "Next Day",
    "titleSlug": "next-day",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 85.55424528301887,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2759",
    "title": "Convert JSON String to Object",
    "titleSlug": "convert-json-string-to-object",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 61.18721461187214,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2760",
    "title": "Longest Even Odd Subarray With Threshold",
    "titleSlug": "longest-even-odd-subarray-with-threshold",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 30.87972557707425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2761",
    "title": "Prime Pairs With Target Sum",
    "titleSlug": "prime-pairs-with-target-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.31508547884753,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2762",
    "title": "Continuous Subarrays",
    "titleSlug": "continuous-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.96337528968055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2763",
    "title": "Sum of Imbalance Numbers of All Subarrays",
    "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.75309207512598,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2764",
    "title": "Is Array a Preorder of Some \u200cBinary Tree",
    "titleSlug": "is-array-a-preorder-of-some-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.43356643356644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2765",
    "title": "Longest Alternating Subarray",
    "titleSlug": "longest-alternating-subarray",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 34.77574332269444,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2766",
    "title": "Relocate Marbles",
    "titleSlug": "relocate-marbles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.71884143389396,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2767",
    "title": "Partition String Into Minimum Beautiful Substrings",
    "titleSlug": "partition-string-into-minimum-beautiful-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.34242135857403,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2768",
    "title": "Number of Black Blocks",
    "titleSlug": "number-of-black-blocks",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.03442764047706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2769",
    "title": "Find the Maximum Achievable Number",
    "titleSlug": "find-the-maximum-achievable-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.98368160823651,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2770",
    "title": "Maximum Number of Jumps to Reach the Last Index",
    "titleSlug": "maximum-number-of-jumps-to-reach-the-last-index",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.957725213890285,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2771",
    "title": "Longest Non-decreasing Subarray From Two Arrays",
    "titleSlug": "longest-non-decreasing-subarray-from-two-arrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.464485878603615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2772",
    "title": "Apply Operations to Make All Array Elements Equal to Zero",
    "titleSlug": "apply-operations-to-make-all-array-elements-equal-to-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.94548714650451,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2773",
    "title": "Height of Special Binary Tree",
    "titleSlug": "height-of-special-binary-tree",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.10154021677124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2774",
    "title": "Array Upper Bound",
    "titleSlug": "array-upper-bound",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 82.21003134796238,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2775",
    "title": "Undefined to Null",
    "titleSlug": "undefined-to-null",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.24901806755696,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2776",
    "title": "Convert Callback Based Function to Promise Based Function",
    "titleSlug": "convert-callback-based-function-to-promise-based-function",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 91.0077519379845,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2777",
    "title": "Date Range Generator",
    "titleSlug": "date-range-generator",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.17631224764467,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2778",
    "title": "Sum of Squares of Special Elements ",
    "titleSlug": "sum-of-squares-of-special-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.50611910446972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2779",
    "title": "Maximum Beauty of an Array After Applying Operation",
    "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.19488242183981,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2780",
    "title": "Minimum Index of a Valid Split",
    "titleSlug": "minimum-index-of-a-valid-split",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.526176845113,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2781",
    "title": "Length of the Longest Valid Substring",
    "titleSlug": "length-of-the-longest-valid-substring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.015405068044124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2782",
    "title": "Number of Unique Categories",
    "titleSlug": "number-of-unique-categories",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.23290542310716,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2783",
    "title": "Flight Occupancy and Waitlist Analysis",
    "titleSlug": "flight-occupancy-and-waitlist-analysis",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 38.55921223114797,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2784",
    "title": "Check if Array is Good",
    "titleSlug": "check-if-array-is-good",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 48.51955550972818,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2785",
    "title": "Sort Vowels in a String",
    "titleSlug": "sort-vowels-in-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.42346545840898,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2786",
    "title": "Visit Array Positions to Maximize Score",
    "titleSlug": "visit-array-positions-to-maximize-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.04047151277014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2787",
    "title": "Ways to Express an Integer as Sum of Powers",
    "titleSlug": "ways-to-express-an-integer-as-sum-of-powers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.95165799994774,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2788",
    "title": "Split Strings by Separator",
    "titleSlug": "split-strings-by-separator",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.53831311451854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2789",
    "title": "Largest Element in an Array after Merge Operations",
    "titleSlug": "largest-element-in-an-array-after-merge-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.183398557090754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2790",
    "title": "Maximum Number of Groups With Increasing Length",
    "titleSlug": "maximum-number-of-groups-with-increasing-length",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.505973198517953,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2791",
    "title": "Count Paths That Can Form a Palindrome in a Tree",
    "titleSlug": "count-paths-that-can-form-a-palindrome-in-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.33037114479875,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2792",
    "title": "Count Nodes That Are Great Enough",
    "titleSlug": "count-nodes-that-are-great-enough",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 56.06528451698279,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2793",
    "title": "Status of Flight Tickets",
    "titleSlug": "status-of-flight-tickets",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 78.54435178165276,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2794",
    "title": "Create Object from Two Arrays",
    "titleSlug": "create-object-from-two-arrays",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 64.45344129554655,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2795",
    "title": "Parallel Execution of Promises for Individual Results Retrieval",
    "titleSlug": "parallel-execution-of-promises-for-individual-results-retrieval",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 90.34676663542643,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2796",
    "title": "Repeat String",
    "titleSlug": "repeat-string",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 93.28947368421052,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2797",
    "title": "Partial Function with Placeholders",
    "titleSlug": "partial-function-with-placeholders",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 89.74049487024743,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2798",
    "title": "Number of Employees Who Met the Target",
    "titleSlug": "number-of-employees-who-met-the-target",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.69144661882584,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2799",
    "title": "Count Complete Subarrays in an Array",
    "titleSlug": "count-complete-subarrays-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 75.83860913381159,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2800",
    "title": "Shortest String That Contains Three Strings",
    "titleSlug": "shortest-string-that-contains-three-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.160065147673656,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2801",
    "title": "Count Stepping Numbers in Range",
    "titleSlug": "count-stepping-numbers-in-range",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.851676709811656,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2802",
    "title": "Find The K-th Lucky Number",
    "titleSlug": "find-the-k-th-lucky-number",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 76.14882345694221,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2803",
    "title": "Factorial Generator",
    "titleSlug": "factorial-generator",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 86.38272345530893,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2804",
    "title": "Array Prototype ForEach",
    "titleSlug": "array-prototype-foreach",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 89.66623876765082,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2805",
    "title": "Custom Interval",
    "titleSlug": "custom-interval",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 83.6888331242158,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2806",
    "title": "Account Balance After Rounded Purchase",
    "titleSlug": "account-balance-after-rounded-purchase",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.647137660348456,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2807",
    "title": "Insert Greatest Common Divisors in Linked List",
    "titleSlug": "insert-greatest-common-divisors-in-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 91.4653165853182,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2808",
    "title": "Minimum Seconds to Equalize a Circular Array",
    "titleSlug": "minimum-seconds-to-equalize-a-circular-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.92784284095202,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2809",
    "title": "Minimum Time to Make Array Sum At Most x",
    "titleSlug": "minimum-time-to-make-array-sum-at-most-x",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.32307005800982,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2810",
    "title": "Faulty Keyboard",
    "titleSlug": "faulty-keyboard",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.51009456213619,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2811",
    "title": "Check if it is Possible to Split Array",
    "titleSlug": "check-if-it-is-possible-to-split-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.16429699842023,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2812",
    "title": "Find the Safest Path in a Grid",
    "titleSlug": "find-the-safest-path-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.476368299102425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2813",
    "title": "Maximum Elegance of a K-Length Subsequence",
    "titleSlug": "maximum-elegance-of-a-k-length-subsequence",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.189754917429262,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2814",
    "title": "Minimum Time Takes to Reach Destination Without Drowning",
    "titleSlug": "minimum-time-takes-to-reach-destination-without-drowning",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 53.524709302325576,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2815",
    "title": "Max Pair Sum in an Array",
    "titleSlug": "max-pair-sum-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.73913135615669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2816",
    "title": "Double a Number Represented as a Linked List",
    "titleSlug": "double-a-number-represented-as-a-linked-list",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.21494881565691,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2817",
    "title": "Minimum Absolute Difference Between Elements With Constraint",
    "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.32708375789688,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2818",
    "title": "Apply Operations to Maximize Score",
    "titleSlug": "apply-operations-to-maximize-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.877818918591124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2819",
    "title": "Minimum Relative Loss After Buying Chocolates",
    "titleSlug": "minimum-relative-loss-after-buying-chocolates",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 44.62326261887345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2820",
    "title": "Election Results",
    "titleSlug": "election-results",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.46073760367037,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2821",
    "title": "Delay the Resolution of Each Promise",
    "titleSlug": "delay-the-resolution-of-each-promise",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 74.17061611374407,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2822",
    "title": "Inversion of Object",
    "titleSlug": "inversion-of-object",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 60.075329566855,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2823",
    "title": "Deep Object Filter",
    "titleSlug": "deep-object-filter",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.48574057037719,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2824",
    "title": "Count Pairs Whose Sum is Less than Target",
    "titleSlug": "count-pairs-whose-sum-is-less-than-target",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.60732226985904,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2825",
    "title": "Make String a Subsequence Using Cyclic Increments",
    "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.63819845995013,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2826",
    "title": "Sorting Three Groups",
    "titleSlug": "sorting-three-groups",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.39667004936445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2827",
    "title": "Number of Beautiful Integers in the Range",
    "titleSlug": "number-of-beautiful-integers-in-the-range",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.567316402187405,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2828",
    "title": "Check if a String Is an Acronym of Words",
    "titleSlug": "check-if-a-string-is-an-acronym-of-words",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.74206455054681,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2829",
    "title": "Determine the Minimum Sum of a k-avoiding Array",
    "titleSlug": "determine-the-minimum-sum-of-a-k-avoiding-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.277915325575634,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2830",
    "title": "Maximize the Profit as the Salesman",
    "titleSlug": "maximize-the-profit-as-the-salesman",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.58282262428879,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2831",
    "title": "Find the Longest Equal Subarray",
    "titleSlug": "find-the-longest-equal-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.90968240846911,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2832",
    "title": "Maximal Range That Each Element Is Maximum in It",
    "titleSlug": "maximal-range-that-each-element-is-maximum-in-it",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.36249692799214,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2833",
    "title": "Furthest Point From Origin",
    "titleSlug": "furthest-point-from-origin",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.90058046189947,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2834",
    "title": "Find the Minimum Possible Sum of a Beautiful Array",
    "titleSlug": "find-the-minimum-possible-sum-of-a-beautiful-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.527569172149484,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2835",
    "title": "Minimum Operations to Form Subsequence With Target Sum",
    "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.01405370189399,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2836",
    "title": "Maximize Value of Function in a Ball Passing Game",
    "titleSlug": "maximize-value-of-function-in-a-ball-passing-game",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.692121212121215,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2837",
    "title": "Total Traveled Distance",
    "titleSlug": "total-traveled-distance",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 76.98521566834324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2838",
    "title": "Maximum Coins Heroes Can Collect",
    "titleSlug": "maximum-coins-heroes-can-collect",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.54145854145854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2839",
    "title": "Check if Strings Can be Made Equal With Operations I",
    "titleSlug": "check-if-strings-can-be-made-equal-with-operations-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.387704658055625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2840",
    "title": "Check if Strings Can be Made Equal With Operations II",
    "titleSlug": "check-if-strings-can-be-made-equal-with-operations-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.63454207259802,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2841",
    "title": "Maximum Sum of Almost Unique Subarray",
    "titleSlug": "maximum-sum-of-almost-unique-subarray",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.92540078551491,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2842",
    "title": "Count K-Subsequences of a String With Maximum Beauty",
    "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.956918978542742,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2843",
    "title": "  Count Symmetric Integers",
    "titleSlug": "count-symmetric-integers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.06756152909325,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2844",
    "title": "Minimum Operations to Make a Special Number",
    "titleSlug": "minimum-operations-to-make-a-special-number",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.268920343120904,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2845",
    "title": "Count of Interesting Subarrays",
    "titleSlug": "count-of-interesting-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.0752297335347,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2846",
    "title": "Minimum Edge Weight Equilibrium Queries in a Tree",
    "titleSlug": "minimum-edge-weight-equilibrium-queries-in-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.33381235885855,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Strongly Connected Component",
        "slug": "strongly-connected-component"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2847",
    "title": "Smallest Number With Given Digit Product",
    "titleSlug": "smallest-number-with-given-digit-product",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 43.326558265582655,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2848",
    "title": "Points That Intersect With Cars",
    "titleSlug": "points-that-intersect-with-cars",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.09911077586665,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2849",
    "title": "Determine if a Cell Is Reachable at a Given Time",
    "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.143022511541766,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2850",
    "title": "Minimum Moves to Spread Stones Over Grid",
    "titleSlug": "minimum-moves-to-spread-stones-over-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.72756715564869,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2851",
    "title": "String Transformation",
    "titleSlug": "string-transformation",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.610406664204522,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2852",
    "title": "Sum of Remoteness of All Cells",
    "titleSlug": "sum-of-remoteness-of-all-cells",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.91011235955055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2853",
    "title": "Highest Salaries Difference",
    "titleSlug": "highest-salaries-difference",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 73.12107133096475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2854",
    "title": "Rolling Average Steps",
    "titleSlug": "rolling-average-steps",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.9759491756164,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2855",
    "title": "Minimum Right Shifts to Sort the Array",
    "titleSlug": "minimum-right-shifts-to-sort-the-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.96760295434199,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2856",
    "title": "Minimum Array Length After Pair Removals",
    "titleSlug": "minimum-array-length-after-pair-removals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.98276790522348,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2857",
    "title": "Count Pairs of Points With Distance k",
    "titleSlug": "count-pairs-of-points-with-distance-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.40016155904478,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2858",
    "title": "Minimum Edge Reversals So Every Node Is Reachable",
    "titleSlug": "minimum-edge-reversals-so-every-node-is-reachable",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.78202644655942,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2859",
    "title": "Sum of Values at Indices With K Set Bits",
    "titleSlug": "sum-of-values-at-indices-with-k-set-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.85715373196818,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2860",
    "title": "Happy Students",
    "titleSlug": "happy-students",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.43087529237966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2861",
    "title": "Maximum Number of Alloys",
    "titleSlug": "maximum-number-of-alloys",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.62209881186804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2862",
    "title": "Maximum Element-Sum of a Complete Subset of Indices",
    "titleSlug": "maximum-element-sum-of-a-complete-subset-of-indices",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.10230729629803,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2863",
    "title": "Maximum Length of Semi-Decreasing Subarrays",
    "titleSlug": "maximum-length-of-semi-decreasing-subarrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 70.06047387726777,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2864",
    "title": "Maximum Odd Binary Number",
    "titleSlug": "maximum-odd-binary-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.8120602500795,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2865",
    "title": "Beautiful Towers I",
    "titleSlug": "beautiful-towers-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.79621680006647,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2866",
    "title": "Beautiful Towers II",
    "titleSlug": "beautiful-towers-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.48380368354087,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2867",
    "title": "Count Valid Paths in a Tree",
    "titleSlug": "count-valid-paths-in-a-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.41960784313726,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2868",
    "title": "The Wording Game",
    "titleSlug": "the-wording-game",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 55.172413793103445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2869",
    "title": "Minimum Operations to Collect Elements",
    "titleSlug": "minimum-operations-to-collect-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.6731102519664,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2870",
    "title": "Minimum Number of Operations to Make Array Empty",
    "titleSlug": "minimum-number-of-operations-to-make-array-empty",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.969861093411495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2871",
    "title": "Split Array Into Maximum Number of Subarrays",
    "titleSlug": "split-array-into-maximum-number-of-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.82957393483709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2872",
    "title": "Maximum Number of K-Divisible Components",
    "titleSlug": "maximum-number-of-k-divisible-components",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.57886975037076,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2873",
    "title": "Maximum Value of an Ordered Triplet I",
    "titleSlug": "maximum-value-of-an-ordered-triplet-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.192808958951595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2874",
    "title": "Maximum Value of an Ordered Triplet II",
    "titleSlug": "maximum-value-of-an-ordered-triplet-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.488138679538416,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2875",
    "title": "Minimum Size Subarray in Infinite Array",
    "titleSlug": "minimum-size-subarray-in-infinite-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.502897787144363,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2876",
    "title": "Count Visited Nodes in a Directed Graph",
    "titleSlug": "count-visited-nodes-in-a-directed-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.681413936733087,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2877",
    "title": "Create a DataFrame from List",
    "titleSlug": "create-a-dataframe-from-list",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.26042449054435,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2878",
    "title": "Get the Size of a DataFrame",
    "titleSlug": "get-the-size-of-a-dataframe",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.05601152453703,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2879",
    "title": "Display the First Three Rows",
    "titleSlug": "display-the-first-three-rows",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 93.08627558730595,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2880",
    "title": "Select Data",
    "titleSlug": "select-data",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.95015573057039,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2881",
    "title": "Create a New Column",
    "titleSlug": "create-a-new-column",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.2614968440036,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2882",
    "title": "Drop Duplicate Rows",
    "titleSlug": "drop-duplicate-rows",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.38955160829596,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2883",
    "title": "Drop Missing Data",
    "titleSlug": "drop-missing-data",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.46222512519051,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2884",
    "title": "Modify Columns",
    "titleSlug": "modify-columns",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 92.46178663047263,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2885",
    "title": "Rename Columns",
    "titleSlug": "rename-columns",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.45663560509166,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2886",
    "title": "Change Data Type",
    "titleSlug": "change-data-type",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.45549338758902,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2887",
    "title": "Fill Missing Data",
    "titleSlug": "fill-missing-data",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.35152957031761,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2888",
    "title": "Reshape Data: Concatenate",
    "titleSlug": "reshape-data-concatenate",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.67422087026394,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2889",
    "title": "Reshape Data: Pivot",
    "titleSlug": "reshape-data-pivot",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.39381155819316,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2890",
    "title": "Reshape Data: Melt",
    "titleSlug": "reshape-data-melt",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.10918264576753,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2891",
    "title": "Method Chaining",
    "titleSlug": "method-chaining",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.37163018215685,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2892",
    "title": "Minimizing Array After Replacing Pairs With Their Product",
    "titleSlug": "minimizing-array-after-replacing-pairs-with-their-product",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.62735257214555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2893",
    "title": "Calculate Orders Within Each Interval",
    "titleSlug": "calculate-orders-within-each-interval",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.38777717685235,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2894",
    "title": "Divisible and Non-divisible Sums Difference",
    "titleSlug": "divisible-and-non-divisible-sums-difference",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 91.17065304348374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2895",
    "title": "Minimum Processing Time",
    "titleSlug": "minimum-processing-time",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.68883141857728,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2896",
    "title": "Apply Operations to Make Two Strings Equal",
    "titleSlug": "apply-operations-to-make-two-strings-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.430762358546758,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2897",
    "title": "Apply Operations on Array to Maximize Sum of Squares",
    "titleSlug": "apply-operations-on-array-to-maximize-sum-of-squares",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.77405540196238,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2898",
    "title": "Maximum Linear Stock Score",
    "titleSlug": "maximum-linear-stock-score",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.54081121682524,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2899",
    "title": "Last Visited Integers",
    "titleSlug": "last-visited-integers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.56889495225102,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2900",
    "title": "Longest Unequal Adjacent Groups Subsequence I",
    "titleSlug": "longest-unequal-adjacent-groups-subsequence-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.15057681206052,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2901",
    "title": "Longest Unequal Adjacent Groups Subsequence II",
    "titleSlug": "longest-unequal-adjacent-groups-subsequence-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.420933631469154,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2902",
    "title": "Count of Sub-Multisets With Bounded Sum",
    "titleSlug": "count-of-sub-multisets-with-bounded-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.204492641363284,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2903",
    "title": "Find Indices With Index and Value Difference I",
    "titleSlug": "find-indices-with-index-and-value-difference-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.31613679408226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2904",
    "title": "Shortest and Lexicographically Smallest Beautiful String",
    "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.33870638645175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2905",
    "title": "Find Indices With Index and Value Difference II",
    "titleSlug": "find-indices-with-index-and-value-difference-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.207842322419786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2906",
    "title": "Construct Product Matrix",
    "titleSlug": "construct-product-matrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.523207757113337,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2907",
    "title": "Maximum Profitable Triplets With Increasing Prices I",
    "titleSlug": "maximum-profitable-triplets-with-increasing-prices-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.95176848874598,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2908",
    "title": "Minimum Sum of Mountain Triplets I",
    "titleSlug": "minimum-sum-of-mountain-triplets-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.53319095924542,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2909",
    "title": "Minimum Sum of Mountain Triplets II",
    "titleSlug": "minimum-sum-of-mountain-triplets-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.012014589143966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2910",
    "title": "Minimum Number of Groups to Create a Valid Assignment",
    "titleSlug": "minimum-number-of-groups-to-create-a-valid-assignment",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 24.11802649641918,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2911",
    "title": "Minimum Changes to Make K Semi-palindromes",
    "titleSlug": "minimum-changes-to-make-k-semi-palindromes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.27344607950801,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2912",
    "title": "Number of Ways to Reach Destination in the Grid",
    "titleSlug": "number-of-ways-to-reach-destination-in-the-grid",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 58.27263267429761,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2913",
    "title": "Subarrays Distinct Element Sum of Squares I",
    "titleSlug": "subarrays-distinct-element-sum-of-squares-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.87441727713824,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2914",
    "title": "Minimum Number of Changes to Make Binary String Beautiful",
    "titleSlug": "minimum-number-of-changes-to-make-binary-string-beautiful",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 76.42320490945598,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2915",
    "title": "Length of the Longest Subsequence That Sums to Target",
    "titleSlug": "length-of-the-longest-subsequence-that-sums-to-target",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.573282633939755,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2916",
    "title": "Subarrays Distinct Element Sum of Squares II",
    "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.397653194263363,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2917",
    "title": "Find the K-or of an Array",
    "titleSlug": "find-the-k-or-of-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.42038216560509,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2918",
    "title": "Minimum Equal Sum of Two Arrays After Replacing Zeros",
    "titleSlug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.18984397817786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2919",
    "title": "Minimum Increment Operations to Make Array Beautiful",
    "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.2811181214223,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2920",
    "title": "Maximum Points After Collecting Coins From All Nodes",
    "titleSlug": "maximum-points-after-collecting-coins-from-all-nodes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.989222478829866,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2921",
    "title": "Maximum Profitable Triplets With Increasing Prices II",
    "titleSlug": "maximum-profitable-triplets-with-increasing-prices-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 44.66145833333333,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2922",
    "title": "Market Analysis III",
    "titleSlug": "market-analysis-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.623831775700936,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2923",
    "title": "Find Champion I",
    "titleSlug": "find-champion-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.81254109018657,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2924",
    "title": "Find Champion II",
    "titleSlug": "find-champion-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.15583730950678,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2925",
    "title": "Maximum Score After Applying Operations on a Tree",
    "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.74450192179869,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2926",
    "title": "Maximum Balanced Subsequence Sum",
    "titleSlug": "maximum-balanced-subsequence-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.235869347021882,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2927",
    "title": "Distribute Candies Among Children III",
    "titleSlug": "distribute-candies-among-children-iii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.349445324881145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2928",
    "title": "Distribute Candies Among Children I",
    "titleSlug": "distribute-candies-among-children-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.55884992002497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2929",
    "title": "Distribute Candies Among Children II",
    "titleSlug": "distribute-candies-among-children-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.84770146260654,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2930",
    "title": "Number of Strings Which Can Be Rearranged to Contain Substring",
    "titleSlug": "number-of-strings-which-can-be-rearranged-to-contain-substring",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.15094339622642,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2931",
    "title": "Maximum Spending After Buying Items",
    "titleSlug": "maximum-spending-after-buying-items",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.63286408371745,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2932",
    "title": "Maximum Strong Pair XOR I",
    "titleSlug": "maximum-strong-pair-xor-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.46653043268479,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2933",
    "title": "High-Access Employees",
    "titleSlug": "high-access-employees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.84080319334618,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2934",
    "title": "Minimum Operations to Maximize Last Elements in Arrays",
    "titleSlug": "minimum-operations-to-maximize-last-elements-in-arrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.46078908913785,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2935",
    "title": "Maximum Strong Pair XOR II",
    "titleSlug": "maximum-strong-pair-xor-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 31.448486509770134,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2936",
    "title": "Number of Equal Numbers Blocks",
    "titleSlug": "number-of-equal-numbers-blocks",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.295081967213115,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2937",
    "title": "Make Three Strings Equal",
    "titleSlug": "make-three-strings-equal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.819813437241706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2938",
    "title": "Separate Black and White Balls",
    "titleSlug": "separate-black-and-white-balls",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.00545366390703,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2939",
    "title": "Maximum Xor Product",
    "titleSlug": "maximum-xor-product",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.328107787475638,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2940",
    "title": "Find Building Where Alice and Bob Can Meet",
    "titleSlug": "find-building-where-alice-and-bob-can-meet",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 52.18558337542392,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2941",
    "title": "Maximum GCD-Sum of a Subarray",
    "titleSlug": "maximum-gcd-sum-of-a-subarray",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 37.08487084870848,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2942",
    "title": "Find Words Containing Character",
    "titleSlug": "find-words-containing-character",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 90.46306350037683,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2943",
    "title": "Maximize Area of Square Hole in Grid",
    "titleSlug": "maximize-area-of-square-hole-in-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.44014979269761,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2944",
    "title": "Minimum Number of Coins for Fruits",
    "titleSlug": "minimum-number-of-coins-for-fruits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.814249983399364,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2945",
    "title": "Find Maximum Non-decreasing Array Length",
    "titleSlug": "find-maximum-non-decreasing-array-length",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.45611129513084,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2946",
    "title": "Matrix Similarity After Cyclic Shifts",
    "titleSlug": "matrix-similarity-after-cyclic-shifts",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.741033287660194,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2947",
    "title": "Count Beautiful Substrings I",
    "titleSlug": "count-beautiful-substrings-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.252741466541515,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2948",
    "title": "Make Lexicographically Smallest Array by Swapping Elements",
    "titleSlug": "make-lexicographically-smallest-array-by-swapping-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.21790836796963,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2949",
    "title": "Count Beautiful Substrings II",
    "titleSlug": "count-beautiful-substrings-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.501505423150867,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2950",
    "title": "Number of Divisible Substrings",
    "titleSlug": "number-of-divisible-substrings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 73.5213830755232,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2951",
    "title": "Find the Peaks",
    "titleSlug": "find-the-peaks",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.65630232990841,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2952",
    "title": "Minimum Number of Coins to be Added",
    "titleSlug": "minimum-number-of-coins-to-be-added",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.40431485827767,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2953",
    "title": "Count Complete Substrings",
    "titleSlug": "count-complete-substrings",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.22564529558701,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2954",
    "title": "Count the Number of Infection Sequences",
    "titleSlug": "count-the-number-of-infection-sequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.84962974157473,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2955",
    "title": "Number of Same-End Substrings",
    "titleSlug": "number-of-same-end-substrings",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.53041294642857,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2956",
    "title": "Find Common Elements Between Two Arrays",
    "titleSlug": "find-common-elements-between-two-arrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.11621010122863,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2957",
    "title": "Remove Adjacent Almost-Equal Characters",
    "titleSlug": "remove-adjacent-almost-equal-characters",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.368985714561866,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2958",
    "title": "Length of Longest Subarray With at Most K Frequency",
    "titleSlug": "length-of-longest-subarray-with-at-most-k-frequency",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.08243060783862,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2959",
    "title": "Number of Possible Sets of Closing Branches",
    "titleSlug": "number-of-possible-sets-of-closing-branches",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.66490658001625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2960",
    "title": "Count Tested Devices After Test Operations",
    "titleSlug": "count-tested-devices-after-test-operations",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.62869908498332,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2961",
    "title": "Double Modular Exponentiation",
    "titleSlug": "double-modular-exponentiation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.50817629652702,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2962",
    "title": "Count Subarrays Where Max Element Appears at Least K Times",
    "titleSlug": "count-subarrays-where-max-element-appears-at-least-k-times",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.417581328018876,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2963",
    "title": "Count the Number of Good Partitions",
    "titleSlug": "count-the-number-of-good-partitions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.03509722880954,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2964",
    "title": "Number of Divisible Triplet Sums",
    "titleSlug": "number-of-divisible-triplet-sums",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.32389619143916,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2965",
    "title": "Find Missing and Repeated Values",
    "titleSlug": "find-missing-and-repeated-values",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.3024598407837,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2966",
    "title": "Divide Array Into Arrays With Max Difference",
    "titleSlug": "divide-array-into-arrays-with-max-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.81306366066664,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2967",
    "title": "Minimum Cost to Make Array Equalindromic",
    "titleSlug": "minimum-cost-to-make-array-equalindromic",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 22.794358806165956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2968",
    "title": "Apply Operations to Maximize Frequency Score",
    "titleSlug": "apply-operations-to-maximize-frequency-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.43134420813546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2969",
    "title": "Minimum Number of Coins for Fruits II",
    "titleSlug": "minimum-number-of-coins-for-fruits-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.87737843551797,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2970",
    "title": "Count the Number of Incremovable Subarrays I",
    "titleSlug": "count-the-number-of-incremovable-subarrays-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.513247659844524,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2971",
    "title": "Find Polygon With the Largest Perimeter",
    "titleSlug": "find-polygon-with-the-largest-perimeter",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.46153740757148,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2972",
    "title": "Count the Number of Incremovable Subarrays II",
    "titleSlug": "count-the-number-of-incremovable-subarrays-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.56226415094339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2973",
    "title": "Find Number of Coins to Place in Tree Nodes",
    "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.77224840587746,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2974",
    "title": "Minimum Number Game",
    "titleSlug": "minimum-number-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.15351729498639,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2975",
    "title": "Maximum Square Area by Removing Fences From a Field",
    "titleSlug": "maximum-square-area-by-removing-fences-from-a-field",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 24.501695299975886,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2976",
    "title": "Minimum Cost to Convert String I",
    "titleSlug": "minimum-cost-to-convert-string-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.422450066299845,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2977",
    "title": "Minimum Cost to Convert String II",
    "titleSlug": "minimum-cost-to-convert-string-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.976251683192558,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2978",
    "title": "Symmetric Coordinates",
    "titleSlug": "symmetric-coordinates",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 40.57599517490953,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2979",
    "title": "Most Expensive Item That Can Not Be Bought",
    "titleSlug": "most-expensive-item-that-can-not-be-bought",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.17477500978218,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2980",
    "title": "Check if Bitwise OR Has Trailing Zeros",
    "titleSlug": "check-if-bitwise-or-has-trailing-zeros",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.32010482965183,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2981",
    "title": "Find Longest Special Substring That Occurs Thrice I",
    "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.90263938614022,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2982",
    "title": "Find Longest Special Substring That Occurs Thrice II",
    "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.68352200606171,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2983",
    "title": "Palindrome Rearrangement Queries",
    "titleSlug": "palindrome-rearrangement-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.678519942335416,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2984",
    "title": "Find Peak Calling Hours for Each City",
    "titleSlug": "find-peak-calling-hours-for-each-city",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.55656108597285,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2985",
    "title": "Calculate Compressed Mean",
    "titleSlug": "calculate-compressed-mean",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.18494852680156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2986",
    "title": "Find Third Transaction",
    "titleSlug": "find-third-transaction",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.36511497476164,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2987",
    "title": "Find Expensive Cities",
    "titleSlug": "find-expensive-cities",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 77.20239007200857,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2988",
    "title": "Manager of the Largest Department",
    "titleSlug": "manager-of-the-largest-department",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.37066560382623,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2989",
    "title": "Class Performance",
    "titleSlug": "class-performance",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 88.78106911814777,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2990",
    "title": "Loan Types",
    "titleSlug": "loan-types",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 63.57474134855512,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2991",
    "title": "Top Three Wineries ",
    "titleSlug": "top-three-wineries",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 55.183884679356865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2992",
    "title": "Number of Self-Divisible Permutations",
    "titleSlug": "number-of-self-divisible-permutations",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.93859335951446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2993",
    "title": "Friday Purchases I",
    "titleSlug": "friday-purchases-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.01756697408872,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2994",
    "title": "Friday Purchases II ",
    "titleSlug": "friday-purchases-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 74.1779497098646,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2995",
    "title": "Viewers Turned Streamers",
    "titleSlug": "viewers-turned-streamers",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.80190034250359,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2996",
    "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum",
    "titleSlug": "smallest-missing-integer-greater-than-sequential-prefix-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 34.50305293012858,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2997",
    "title": "Minimum Number of Operations to Make Array XOR Equal to K",
    "titleSlug": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.41989397836932,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2998",
    "title": "Minimum Number of Operations to Make X and Y Equal",
    "titleSlug": "minimum-number-of-operations-to-make-x-and-y-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.96650934013273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "2999",
    "title": "Count the Number of Powerful Integers",
    "titleSlug": "count-the-number-of-powerful-integers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.37218453516162,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3000",
    "title": "Maximum Area of Longest Diagonal Rectangle",
    "titleSlug": "maximum-area-of-longest-diagonal-rectangle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.7832003994418,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3001",
    "title": "Minimum Moves to Capture The Queen",
    "titleSlug": "minimum-moves-to-capture-the-queen",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 21.734728315896053,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3002",
    "title": "Maximum Size of a Set After Removals",
    "titleSlug": "maximum-size-of-a-set-after-removals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.490877084473205,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3003",
    "title": "Maximize the Number of Partitions After Operations",
    "titleSlug": "maximize-the-number-of-partitions-after-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.186104998428167,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3004",
    "title": "Maximum Subtree of the Same Color",
    "titleSlug": "maximum-subtree-of-the-same-color",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.88445436784817,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3005",
    "title": "Count Elements With Maximum Frequency",
    "titleSlug": "count-elements-with-maximum-frequency",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.95640112603107,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3006",
    "title": "Find Beautiful Indices in the Given Array I",
    "titleSlug": "find-beautiful-indices-in-the-given-array-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.54397896176706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3007",
    "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
    "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.58180316411462,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3008",
    "title": "Find Beautiful Indices in the Given Array II",
    "titleSlug": "find-beautiful-indices-in-the-given-array-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.05130595433821,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3009",
    "title": "Maximum Number of Intersections on the Chart",
    "titleSlug": "maximum-number-of-intersections-on-the-chart",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.12324691882703,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3010",
    "title": "Divide an Array Into Subarrays With Minimum Cost I",
    "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.29559103559397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3011",
    "title": "Find if Array Can Be Sorted",
    "titleSlug": "find-if-array-can-be-sorted",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.48413113689261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3012",
    "title": "Minimize Length of Array Using Operations",
    "titleSlug": "minimize-length-of-array-using-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.263460188474546,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3013",
    "title": "Divide an Array Into Subarrays With Minimum Cost II",
    "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.753490064117138,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3014",
    "title": "Minimum Number of Pushes to Type Word I",
    "titleSlug": "minimum-number-of-pushes-to-type-word-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.5436029754879,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3015",
    "title": "Count the Number of Houses at a Certain Distance I",
    "titleSlug": "count-the-number-of-houses-at-a-certain-distance-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.204690831556505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3016",
    "title": "Minimum Number of Pushes to Type Word II",
    "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.9140657583762,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3017",
    "title": "Count the Number of Houses at a Certain Distance II",
    "titleSlug": "count-the-number-of-houses-at-a-certain-distance-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.48391544117647,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3018",
    "title": "Maximum Number of Removal Queries That Can Be Processed I",
    "titleSlug": "maximum-number-of-removal-queries-that-can-be-processed-i",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 44.055433989788476,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3019",
    "title": "Number of Changing Keys",
    "titleSlug": "number-of-changing-keys",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.09090504978663,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3020",
    "title": "Find the Maximum Number of Elements in Subset",
    "titleSlug": "find-the-maximum-number-of-elements-in-subset",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.535526341340272,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3021",
    "title": "Alice and Bob Playing Flower Game",
    "titleSlug": "alice-and-bob-playing-flower-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.0328947368421,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3022",
    "title": "Minimize OR of Remaining Elements Using Operations",
    "titleSlug": "minimize-or-of-remaining-elements-using-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.084407360500634,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3023",
    "title": "Find Pattern in Infinite Stream I",
    "titleSlug": "find-pattern-in-infinite-stream-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.70690811535882,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3024",
    "title": "Type of Triangle",
    "titleSlug": "type-of-triangle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.34363643967257,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3025",
    "title": "Find the Number of Ways to Place People I",
    "titleSlug": "find-the-number-of-ways-to-place-people-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.07402118970785,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3026",
    "title": "Maximum Good Subarray Sum",
    "titleSlug": "maximum-good-subarray-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 20.696614583333332,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3027",
    "title": "Find the Number of Ways to Place People II",
    "titleSlug": "find-the-number-of-ways-to-place-people-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.41558634633682,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3028",
    "title": "Ant on the Boundary",
    "titleSlug": "ant-on-the-boundary",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.98428976652848,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3029",
    "title": "Minimum Time to Revert Word to Initial State I",
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.79926002879691,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3030",
    "title": "Find the Grid of Region Average",
    "titleSlug": "find-the-grid-of-region-average",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.73239541739747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3031",
    "title": "Minimum Time to Revert Word to Initial State II",
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.655307217384276,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3032",
    "title": "Count Numbers With Unique Digits II",
    "titleSlug": "count-numbers-with-unique-digits-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.24894908921065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3033",
    "title": "Modify the Matrix",
    "titleSlug": "modify-the-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.69785765784324,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3034",
    "title": "Number of Subarrays That Match a Pattern I",
    "titleSlug": "number-of-subarrays-that-match-a-pattern-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.7127941596313,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3035",
    "title": "Maximum Palindromes After Operations",
    "titleSlug": "maximum-palindromes-after-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.92301858172165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3036",
    "title": "Number of Subarrays That Match a Pattern II",
    "titleSlug": "number-of-subarrays-that-match-a-pattern-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.793103448275865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3037",
    "title": "Find Pattern in Infinite Stream II",
    "titleSlug": "find-pattern-in-infinite-stream-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 67.55888650963597,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3038",
    "title": "Maximum Number of Operations With the Same Score I",
    "titleSlug": "maximum-number-of-operations-with-the-same-score-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.335015989639764,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3039",
    "title": "Apply Operations to Make String Empty",
    "titleSlug": "apply-operations-to-make-string-empty",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.68202764976959,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3040",
    "title": "Maximum Number of Operations With the Same Score II",
    "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.50045515019956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3041",
    "title": "Maximize Consecutive Elements in an Array After Modification",
    "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.03048341113443,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3042",
    "title": "Count Prefix and Suffix Pairs I",
    "titleSlug": "count-prefix-and-suffix-pairs-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.71186951671741,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3043",
    "title": "Find the Length of the Longest Common Prefix",
    "titleSlug": "find-the-length-of-the-longest-common-prefix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.70585887364557,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3044",
    "title": "Most Frequent Prime",
    "titleSlug": "most-frequent-prime",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.340687700832426,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3045",
    "title": "Count Prefix and Suffix Pairs II",
    "titleSlug": "count-prefix-and-suffix-pairs-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.565850047841707,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3046",
    "title": "Split the Array",
    "titleSlug": "split-the-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.16361272399842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3047",
    "title": "Find the Largest Area of Square Inside Two Rectangles",
    "titleSlug": "find-the-largest-area-of-square-inside-two-rectangles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.56773416610536,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3048",
    "title": "Earliest Second to Mark Indices I",
    "titleSlug": "earliest-second-to-mark-indices-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.489612212068316,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3049",
    "title": "Earliest Second to Mark Indices II",
    "titleSlug": "earliest-second-to-mark-indices-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.59135425113842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3050",
    "title": "Pizza Toppings Cost Analysis",
    "titleSlug": "pizza-toppings-cost-analysis",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.71828482559431,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3051",
    "title": "Find Candidates for Data Scientist Position",
    "titleSlug": "find-candidates-for-data-scientist-position",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 75.03534956794972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3052",
    "title": "Maximize Items",
    "titleSlug": "maximize-items",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 74.62750106428267,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3053",
    "title": "Classifying Triangles by Lengths",
    "titleSlug": "classifying-triangles-by-lengths",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.02289027926141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3054",
    "title": "Binary Tree Nodes",
    "titleSlug": "binary-tree-nodes",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 78.73429502093997,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3055",
    "title": "Top Percentile Fraud",
    "titleSlug": "top-percentile-fraud",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.90873746674852,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3056",
    "title": "Snaps Analysis",
    "titleSlug": "snaps-analysis",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.08523058960887,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3057",
    "title": "Employees Project Allocation",
    "titleSlug": "employees-project-allocation",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 67.02194357366771,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3058",
    "title": "Friends With No Mutual Friends",
    "titleSlug": "friends-with-no-mutual-friends",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.39361116210758,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3059",
    "title": "Find All Unique Email Domains",
    "titleSlug": "find-all-unique-email-domains",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 69.44761904761904,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3060",
    "title": "User Activities within Time Bounds",
    "titleSlug": "user-activities-within-time-bounds",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 40.03960396039604,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3061",
    "title": "Calculate Trapping Rain Water",
    "titleSlug": "calculate-trapping-rain-water",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 81.58482142857143,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3062",
    "title": "Winner of the Linked List Game",
    "titleSlug": "winner-of-the-linked-list-game",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 78.06006213324127,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3063",
    "title": "Linked List Frequency",
    "titleSlug": "linked-list-frequency",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 85.38044148477,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3064",
    "title": "Guess the Number Using Bitwise Questions I",
    "titleSlug": "guess-the-number-using-bitwise-questions-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 89.07383696116091,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3065",
    "title": "Minimum Operations to Exceed Threshold Value I",
    "titleSlug": "minimum-operations-to-exceed-threshold-value-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.29525022613575,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3066",
    "title": "Minimum Operations to Exceed Threshold Value II",
    "titleSlug": "minimum-operations-to-exceed-threshold-value-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.77802391367461,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3067",
    "title": "Count Pairs of Connectable Servers in a Weighted Tree Network",
    "titleSlug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.85744832501782,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3068",
    "title": "Find the Maximum Sum of Node Values",
    "titleSlug": "find-the-maximum-sum-of-node-values",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.63980724655362,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3069",
    "title": "Distribute Elements Into Two Arrays I",
    "titleSlug": "distribute-elements-into-two-arrays-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.41354217567584,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3070",
    "title": "Count Submatrices with Top-Left Element and Sum Less Than k",
    "titleSlug": "count-submatrices-with-top-left-element-and-sum-less-than-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.754700986436504,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3071",
    "title": "Minimum Operations to Write the Letter Y on a Grid",
    "titleSlug": "minimum-operations-to-write-the-letter-y-on-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.057284389686274,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3072",
    "title": "Distribute Elements Into Two Arrays II",
    "titleSlug": "distribute-elements-into-two-arrays-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.710079275198186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3073",
    "title": "Maximum Increasing Triplet Value",
    "titleSlug": "maximum-increasing-triplet-value",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 35.626102292768955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3074",
    "title": "Apple Redistribution into Boxes",
    "titleSlug": "apple-redistribution-into-boxes",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.66995298216054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3075",
    "title": "Maximize Happiness of Selected Children",
    "titleSlug": "maximize-happiness-of-selected-children",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.874138014177554,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3076",
    "title": "Shortest Uncommon Substring in an Array",
    "titleSlug": "shortest-uncommon-substring-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.2234457617161,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3077",
    "title": "Maximum Strength of K Disjoint Subarrays",
    "titleSlug": "maximum-strength-of-k-disjoint-subarrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.077692861304364,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3078",
    "title": "Match Alphanumerical Pattern in Matrix I",
    "titleSlug": "match-alphanumerical-pattern-in-matrix-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 64.26966292134831,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3079",
    "title": "Find the Sum of Encrypted Integers",
    "titleSlug": "find-the-sum-of-encrypted-integers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.18720098770513,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3080",
    "title": "Mark Elements on Array by Performing Queries",
    "titleSlug": "mark-elements-on-array-by-performing-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.21400113830393,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3081",
    "title": "Replace Question Marks in String to Minimize Its Value",
    "titleSlug": "replace-question-marks-in-string-to-minimize-its-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.3263641349054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3082",
    "title": "Find the Sum of the Power of All Subsequences",
    "titleSlug": "find-the-sum-of-the-power-of-all-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.1665654725764,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3083",
    "title": "Existence of a Substring in a String and Its Reverse",
    "titleSlug": "existence-of-a-substring-in-a-string-and-its-reverse",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.05254389970014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3084",
    "title": "Count Substrings Starting and Ending with Given Character",
    "titleSlug": "count-substrings-starting-and-ending-with-given-character",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.4585000791336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3085",
    "title": "Minimum Deletions to Make String K-Special",
    "titleSlug": "minimum-deletions-to-make-string-k-special",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.15354272104793,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3086",
    "title": "Minimum Moves to Pick K Ones",
    "titleSlug": "minimum-moves-to-pick-k-ones",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.832437083243708,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3087",
    "title": "Find Trending Hashtags",
    "titleSlug": "find-trending-hashtags",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.70594342071114,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3088",
    "title": "Make String Anti-palindrome",
    "titleSlug": "make-string-anti-palindrome",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.958168456755224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3089",
    "title": "Find Bursty Behavior",
    "titleSlug": "find-bursty-behavior",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 37.01716738197425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3090",
    "title": "Maximum Length Substring With Two Occurrences",
    "titleSlug": "maximum-length-substring-with-two-occurrences",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.4468082698684,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3091",
    "title": "Apply Operations to Make Sum of Array Greater Than or Equal to k",
    "titleSlug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.71381190623419,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3092",
    "title": "Most Frequent IDs",
    "titleSlug": "most-frequent-ids",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.973076509971,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3093",
    "title": "Longest Common Suffix Queries",
    "titleSlug": "longest-common-suffix-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 35.947426067908,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3094",
    "title": "Guess the Number Using Bitwise Questions II",
    "titleSlug": "guess-the-number-using-bitwise-questions-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 82.84182305630027,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Interactive",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3095",
    "title": "Shortest Subarray With OR at Least K I",
    "titleSlug": "shortest-subarray-with-or-at-least-k-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.43430722351676,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3096",
    "title": "Minimum Levels to Gain More Points",
    "titleSlug": "minimum-levels-to-gain-more-points",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.62623370293652,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3097",
    "title": "Shortest Subarray With OR at Least K II",
    "titleSlug": "shortest-subarray-with-or-at-least-k-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.199649521303655,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3098",
    "title": "Find the Sum of Subsequence Powers",
    "titleSlug": "find-the-sum-of-subsequence-powers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.94551680024081,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3099",
    "title": "Harshad Number",
    "titleSlug": "harshad-number",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 83.24846609208846,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3100",
    "title": "Water Bottles II",
    "titleSlug": "water-bottles-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.97945763817184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3101",
    "title": "Count Alternating Subarrays",
    "titleSlug": "count-alternating-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.80328305708042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3102",
    "title": "Minimize Manhattan Distances",
    "titleSlug": "minimize-manhattan-distances",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.21633959991123,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3103",
    "title": "Find Trending Hashtags II ",
    "titleSlug": "find-trending-hashtags-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 66.69921875,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3104",
    "title": "Find Longest Self-Contained Substring",
    "titleSlug": "find-longest-self-contained-substring",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 58.43912591050988,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3105",
    "title": "Longest Strictly Increasing or Strictly Decreasing Subarray",
    "titleSlug": "longest-strictly-increasing-or-strictly-decreasing-subarray",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.96507106442381,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3106",
    "title": "Lexicographically Smallest String After Operations With Constraint",
    "titleSlug": "lexicographically-smallest-string-after-operations-with-constraint",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.6458112407211,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3107",
    "title": "Minimum Operations to Make Median of Array Equal to K",
    "titleSlug": "minimum-operations-to-make-median-of-array-equal-to-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.233809531479004,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3108",
    "title": "Minimum Cost Walk in Weighted Graph",
    "titleSlug": "minimum-cost-walk-in-weighted-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 68.3009956432431,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3109",
    "title": "Find the Index of Permutation",
    "titleSlug": "find-the-index-of-permutation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 34.838403041825096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3110",
    "title": "Score of a String",
    "titleSlug": "score-of-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 91.58908979016354,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3111",
    "title": "Minimum Rectangles to Cover Points",
    "titleSlug": "minimum-rectangles-to-cover-points",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.97165516822789,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3112",
    "title": "Minimum Time to Visit Disappearing Nodes",
    "titleSlug": "minimum-time-to-visit-disappearing-nodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.4841282432179,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3113",
    "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum",
    "titleSlug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 31.758585787256077,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3114",
    "title": "Latest Time You Can Obtain After Replacing Characters",
    "titleSlug": "latest-time-you-can-obtain-after-replacing-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 34.72486269539502,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3115",
    "title": "Maximum Prime Difference",
    "titleSlug": "maximum-prime-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.81985239486849,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3116",
    "title": "Kth Smallest Amount With Single Denomination Combination",
    "titleSlug": "kth-smallest-amount-with-single-denomination-combination",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.988785735596075,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3117",
    "title": "Minimum Sum of Values by Dividing Array",
    "titleSlug": "minimum-sum-of-values-by-dividing-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.34047508150908,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "slug": "queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3118",
    "title": "Friday Purchase III ",
    "titleSlug": "friday-purchase-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.615843733043945,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3119",
    "title": "Maximum Number of Potholes That Can Be Fixed",
    "titleSlug": "maximum-number-of-potholes-that-can-be-fixed",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 53.31495942428418,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3120",
    "title": "Count the Number of Special Characters I",
    "titleSlug": "count-the-number-of-special-characters-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 66.10504684461729,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3121",
    "title": "Count the Number of Special Characters II",
    "titleSlug": "count-the-number-of-special-characters-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.70273266448645,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3122",
    "title": "Minimum Number of Operations to Satisfy Conditions",
    "titleSlug": "minimum-number-of-operations-to-satisfy-conditions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.172565358728995,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3123",
    "title": "Find Edges in Shortest Paths",
    "titleSlug": "find-edges-in-shortest-paths",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 46.139691175294026,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3124",
    "title": "Find Longest Calls",
    "titleSlug": "find-longest-calls",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 63.768492084090326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3125",
    "title": "Maximum Number That Makes Result of Bitwise AND Zero",
    "titleSlug": "maximum-number-that-makes-result-of-bitwise-and-zero",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.62174940898345,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3126",
    "title": "Server Utilization Time",
    "titleSlug": "server-utilization-time",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 61.12244897959184,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3127",
    "title": "Make a Square with the Same Color",
    "titleSlug": "make-a-square-with-the-same-color",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.39490736218293,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3128",
    "title": "Right Triangles",
    "titleSlug": "right-triangles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.72857964347326,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3129",
    "title": "Find All Possible Stable Binary Arrays I",
    "titleSlug": "find-all-possible-stable-binary-arrays-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.609370203979125,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3130",
    "title": "Find All Possible Stable Binary Arrays II",
    "titleSlug": "find-all-possible-stable-binary-arrays-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.468450611166173,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3131",
    "title": "Find the Integer Added to Array I",
    "titleSlug": "find-the-integer-added-to-array-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.4101544246297,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3132",
    "title": "Find the Integer Added to Array II",
    "titleSlug": "find-the-integer-added-to-array-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.370917301428705,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3133",
    "title": "Minimum Array End",
    "titleSlug": "minimum-array-end",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.438026053135225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3134",
    "title": "Find the Median of the Uniqueness Array",
    "titleSlug": "find-the-median-of-the-uniqueness-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.13176203322448,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3135",
    "title": "Equalize Strings by Adding or Removing Characters at Ends",
    "titleSlug": "equalize-strings-by-adding-or-removing-characters-at-ends",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.26079136690647,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3136",
    "title": "Valid Word",
    "titleSlug": "valid-word",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 50.851978905329986,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3137",
    "title": "Minimum Number of Operations to Make Word K-Periodic",
    "titleSlug": "minimum-number-of-operations-to-make-word-k-periodic",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.142010263670144,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3138",
    "title": "Minimum Length of Anagram Concatenation",
    "titleSlug": "minimum-length-of-anagram-concatenation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.81222508347606,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3139",
    "title": "Minimum Cost to Equalize Array",
    "titleSlug": "minimum-cost-to-equalize-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.850086441096565,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3140",
    "title": "Consecutive Available Seats II",
    "titleSlug": "consecutive-available-seats-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 55.15863689776733,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3141",
    "title": "Maximum Hamming Distances",
    "titleSlug": "maximum-hamming-distances",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 47.55186721991701,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3142",
    "title": "Check if Grid Satisfies Conditions",
    "titleSlug": "check-if-grid-satisfies-conditions",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.304369769104596,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3143",
    "title": "Maximum Points Inside the Square",
    "titleSlug": "maximum-points-inside-the-square",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.69054452225156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3144",
    "title": "Minimum Substring Partition of Equal Character Frequency",
    "titleSlug": "minimum-substring-partition-of-equal-character-frequency",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.39746965213542,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3145",
    "title": "Find Products of Elements of Big Array",
    "titleSlug": "find-products-of-elements-of-big-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.564713896457768,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3146",
    "title": "Permutation Difference between Two Strings",
    "titleSlug": "permutation-difference-between-two-strings",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.47308567762573,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3147",
    "title": "Taking Maximum Energy From the Mystic Dungeon",
    "titleSlug": "taking-maximum-energy-from-the-mystic-dungeon",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.64581699590475,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3148",
    "title": "Maximum Difference Score in a Grid",
    "titleSlug": "maximum-difference-score-in-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.17737589722588,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3149",
    "title": "Find the Minimum Cost Array Permutation",
    "titleSlug": "find-the-minimum-cost-array-permutation",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 24.3358615695392,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3150",
    "title": "Invalid Tweets II",
    "titleSlug": "invalid-tweets-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 85.25462376488471,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3151",
    "title": "Special Array I",
    "titleSlug": "special-array-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.6345908516912,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3152",
    "title": "Special Array II",
    "titleSlug": "special-array-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.69079311977912,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3153",
    "title": "Sum of Digit Differences of All Pairs",
    "titleSlug": "sum-of-digit-differences-of-all-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.71004878949717,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3154",
    "title": "Find Number of Ways to Reach the K-th Stair",
    "titleSlug": "find-number-of-ways-to-reach-the-k-th-stair",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 36.85599396833375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3155",
    "title": "Maximum Number of Upgradable Servers",
    "titleSlug": "maximum-number-of-upgradable-servers",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.86359557283877,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3156",
    "title": "Employee Task Duration and Concurrent Tasks",
    "titleSlug": "employee-task-duration-and-concurrent-tasks",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.73063973063973,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3157",
    "title": "Find the Level of Tree with Minimum Sum",
    "titleSlug": "find-the-level-of-tree-with-minimum-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.8944099378882,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3158",
    "title": "Find the XOR of Numbers Which Appear Twice",
    "titleSlug": "find-the-xor-of-numbers-which-appear-twice",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.22237553179258,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3159",
    "title": "Find Occurrences of an Element in an Array",
    "titleSlug": "find-occurrences-of-an-element-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 72.99557992502658,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3160",
    "title": "Find the Number of Distinct Colors Among the Balls",
    "titleSlug": "find-the-number-of-distinct-colors-among-the-balls",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.182098765432094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3161",
    "title": "Block Placement Queries",
    "titleSlug": "block-placement-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.559992441897084,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3162",
    "title": "Find the Number of Good Pairs I",
    "titleSlug": "find-the-number-of-good-pairs-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.00420011383486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3163",
    "title": "String Compression III",
    "titleSlug": "string-compression-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 66.90256815057774,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3164",
    "title": "Find the Number of Good Pairs II",
    "titleSlug": "find-the-number-of-good-pairs-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.26520928343273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3165",
    "title": "Maximum Sum of Subsequence With Non-adjacent Elements",
    "titleSlug": "maximum-sum-of-subsequence-with-non-adjacent-elements",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 14.882626298889088,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3166",
    "title": "Calculate Parking Fees and Duration",
    "titleSlug": "calculate-parking-fees-and-duration",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.441314553990615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3167",
    "title": "Better Compression of String",
    "titleSlug": "better-compression-of-string",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.77048714671211,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3168",
    "title": "Minimum Number of Chairs in a Waiting Room",
    "titleSlug": "minimum-number-of-chairs-in-a-waiting-room",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.78798687401913,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3169",
    "title": "Count Days Without Meetings",
    "titleSlug": "count-days-without-meetings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.9683161276943,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3170",
    "title": "Lexicographically Minimum String After Removing Stars",
    "titleSlug": "lexicographically-minimum-string-after-removing-stars",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.95985196618374,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3171",
    "title": "Find Subarray With Bitwise OR Closest to K",
    "titleSlug": "find-subarray-with-bitwise-or-closest-to-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.276348153200637,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3172",
    "title": "Second Day Verification",
    "titleSlug": "second-day-verification",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 66.76595744680851,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3173",
    "title": "Bitwise OR of Adjacent Elements",
    "titleSlug": "bitwise-or-of-adjacent-elements",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 94.90351311232064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3174",
    "title": "Clear Digits",
    "titleSlug": "clear-digits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.58308328500466,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3175",
    "title": "Find The First Player to win K Games in a Row",
    "titleSlug": "find-the-first-player-to-win-k-games-in-a-row",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.739595814362175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3176",
    "title": "Find the Maximum Length of a Good Subsequence I",
    "titleSlug": "find-the-maximum-length-of-a-good-subsequence-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.00313670819901,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3177",
    "title": "Find the Maximum Length of a Good Subsequence II",
    "titleSlug": "find-the-maximum-length-of-a-good-subsequence-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 24.257603852434062,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3178",
    "title": "Find the Child Who Has the Ball After K Seconds",
    "titleSlug": "find-the-child-who-has-the-ball-after-k-seconds",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.74412738797622,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3179",
    "title": "Find the N-th Value After K Seconds",
    "titleSlug": "find-the-n-th-value-after-k-seconds",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.669315902844836,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3180",
    "title": "Maximum Total Reward Using Operations I",
    "titleSlug": "maximum-total-reward-using-operations-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.29525957508162,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3181",
    "title": "Maximum Total Reward Using Operations II",
    "titleSlug": "maximum-total-reward-using-operations-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.96588530766011,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3182",
    "title": "Find Top Scoring Students",
    "titleSlug": "find-top-scoring-students",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.10766817022946,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3183",
    "title": "The Number of Ways to Make the Sum",
    "titleSlug": "the-number-of-ways-to-make-the-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 51.30380144517751,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3184",
    "title": "Count Pairs That Form a Complete Day I",
    "titleSlug": "count-pairs-that-form-a-complete-day-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.77681030072814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3185",
    "title": "Count Pairs That Form a Complete Day II",
    "titleSlug": "count-pairs-that-form-a-complete-day-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.27528541265719,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3186",
    "title": "Maximum Total Damage With Spell Casting",
    "titleSlug": "maximum-total-damage-with-spell-casting",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.35398980574377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3187",
    "title": "Peaks in Array",
    "titleSlug": "peaks-in-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.393989176652493,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3188",
    "title": "Find Top Scoring Students II",
    "titleSlug": "find-top-scoring-students-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 39.85463355542096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3189",
    "title": "Minimum Moves to Get a Peaceful Board",
    "titleSlug": "minimum-moves-to-get-a-peaceful-board",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 75.94771241830065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3190",
    "title": "Find Minimum Operations to Make All Elements Divisible by Three",
    "titleSlug": "find-minimum-operations-to-make-all-elements-divisible-by-three",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.02229068503081,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3191",
    "title": "Minimum Operations to Make Binary Array Elements Equal to One I",
    "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 80.46754258062208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3192",
    "title": "Minimum Operations to Make Binary Array Elements Equal to One II",
    "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.43459324933893,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3193",
    "title": "Count the Number of Inversions",
    "titleSlug": "count-the-number-of-inversions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.66392370746021,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3194",
    "title": "Minimum Average of Smallest and Largest Elements",
    "titleSlug": "minimum-average-of-smallest-and-largest-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.07948039368308,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3195",
    "title": "Find the Minimum Area to Cover All Ones I",
    "titleSlug": "find-the-minimum-area-to-cover-all-ones-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 78.0149074296706,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3196",
    "title": "Maximize Total Cost of Alternating Subarrays",
    "titleSlug": "maximize-total-cost-of-alternating-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.134100705793188,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3197",
    "title": "Find the Minimum Area to Cover All Ones II",
    "titleSlug": "find-the-minimum-area-to-cover-all-ones-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 63.73918895842332,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3198",
    "title": "Find Cities in Each State",
    "titleSlug": "find-cities-in-each-state",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.62627291242363,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3199",
    "title": "Count Triplets with Even XOR Set Bits I",
    "titleSlug": "count-triplets-with-even-xor-set-bits-i",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 83.09785452642595,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3200",
    "title": "Maximum Height of a Triangle",
    "titleSlug": "maximum-height-of-a-triangle",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.725363057193725,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3201",
    "title": "Find the Maximum Length of Valid Subsequence I",
    "titleSlug": "find-the-maximum-length-of-valid-subsequence-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.81547905918417,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3202",
    "title": "Find the Maximum Length of Valid Subsequence II",
    "titleSlug": "find-the-maximum-length-of-valid-subsequence-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.28389074596879,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3203",
    "title": "Find Minimum Diameter After Merging Two Trees",
    "titleSlug": "find-minimum-diameter-after-merging-two-trees",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 57.18245010169644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3204",
    "title": "Bitwise User Permissions Analysis",
    "titleSlug": "bitwise-user-permissions-analysis",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 93.73297002724796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3205",
    "title": "Maximum Array Hopping Score I",
    "titleSlug": "maximum-array-hopping-score-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.54398068299415,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3206",
    "title": "Alternating Groups I",
    "titleSlug": "alternating-groups-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.2204708598966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3207",
    "title": "Maximum Points After Enemy Battles",
    "titleSlug": "maximum-points-after-enemy-battles",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.737768312503505,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3208",
    "title": "Alternating Groups II",
    "titleSlug": "alternating-groups-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.79811388801498,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3209",
    "title": "Number of Subarrays With AND Value of K",
    "titleSlug": "number-of-subarrays-with-and-value-of-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.410656338323044,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3210",
    "title": "Find the Encrypted String",
    "titleSlug": "find-the-encrypted-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.05278308923957,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3211",
    "title": "Generate Binary Strings Without Adjacent Zeros",
    "titleSlug": "generate-binary-strings-without-adjacent-zeros",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 87.71168206556132,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3212",
    "title": "Count Submatrices With Equal Frequency of X and Y",
    "titleSlug": "count-submatrices-with-equal-frequency-of-x-and-y",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 51.09118792025481,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3213",
    "title": "Construct String with Minimum Cost",
    "titleSlug": "construct-string-with-minimum-cost",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.98177904665102,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Suffix Array",
        "slug": "suffix-array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3214",
    "title": "Year on Year Growth Rate",
    "titleSlug": "year-on-year-growth-rate",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 50.979398851739276,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3215",
    "title": "Count Triplets with Even XOR Set Bits II",
    "titleSlug": "count-triplets-with-even-xor-set-bits-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.33472803347281,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3216",
    "title": "Lexicographically Smallest String After a Swap",
    "titleSlug": "lexicographically-smallest-string-after-a-swap",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 54.038059755256626,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3217",
    "title": "Delete Nodes From Linked List Present in Array",
    "titleSlug": "delete-nodes-from-linked-list-present-in-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 67.37106468136427,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3218",
    "title": "Minimum Cost for Cutting Cake I",
    "titleSlug": "minimum-cost-for-cutting-cake-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.00642079711847,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3219",
    "title": "Minimum Cost for Cutting Cake II",
    "titleSlug": "minimum-cost-for-cutting-cake-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 54.91272290405409,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3220",
    "title": "Odd and Even Transactions",
    "titleSlug": "odd-and-even-transactions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.37971335258712,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3221",
    "title": "Maximum Array Hopping Score II",
    "titleSlug": "maximum-array-hopping-score-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.02410346854792,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3222",
    "title": "Find the Winning Player in Coin Game",
    "titleSlug": "find-the-winning-player-in-coin-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 52.478799083638116,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3223",
    "title": "Minimum Length of String After Operations",
    "titleSlug": "minimum-length-of-string-after-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.9834841584739,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3224",
    "title": "Minimum Array Changes to Make Differences Equal",
    "titleSlug": "minimum-array-changes-to-make-differences-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 23.67127746135069,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3225",
    "title": "Maximum Score From Grid Operations",
    "titleSlug": "maximum-score-from-grid-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.48488949030221,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3226",
    "title": "Number of Bit Changes to Make Two Integers Equal",
    "titleSlug": "number-of-bit-changes-to-make-two-integers-equal",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.02316866738167,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3227",
    "title": "Vowels Game in a String",
    "titleSlug": "vowels-game-in-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 77.01720287817385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3228",
    "title": "Maximum Number of Operations to Move Ones to the End",
    "titleSlug": "maximum-number-of-operations-to-move-ones-to-the-end",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.317619328226286,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3229",
    "title": "Minimum Operations to Make Array Equal to Target",
    "titleSlug": "minimum-operations-to-make-array-equal-to-target",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.344295615764544,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3230",
    "title": "Customer Purchasing Behavior Analysis",
    "titleSlug": "customer-purchasing-behavior-analysis",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 36.4887343112052,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3231",
    "title": "Minimum Number of Increasing Subsequence to Be Removed",
    "titleSlug": "minimum-number-of-increasing-subsequence-to-be-removed",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 45.302013422818796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3232",
    "title": "Find if Digit Game Can Be Won",
    "titleSlug": "find-if-digit-game-can-be-won",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.2211797037674,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3233",
    "title": "Find the Count of Numbers Which Are Not Special",
    "titleSlug": "find-the-count-of-numbers-which-are-not-special",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.211680584629466,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3234",
    "title": "Count the Number of Substrings With Dominant Ones",
    "titleSlug": "count-the-number-of-substrings-with-dominant-ones",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 17.55584035151959,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3235",
    "title": "Check if the Rectangle Corner Is Reachable",
    "titleSlug": "check-if-the-rectangle-corner-is-reachable",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.510927946491908,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3236",
    "title": "CEO Subordinate Hierarchy",
    "titleSlug": "ceo-subordinate-hierarchy",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 72.86956521739131,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3237",
    "title": "Alt and Tab Simulation",
    "titleSlug": "alt-and-tab-simulation",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.72667604313173,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3238",
    "title": "Find the Number of Winning Players",
    "titleSlug": "find-the-number-of-winning-players",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.04551709537419,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3239",
    "title": "Minimum Number of Flips to Make Binary Grid Palindromic I",
    "titleSlug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.54396187501251,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3240",
    "title": "Minimum Number of Flips to Make Binary Grid Palindromic II",
    "titleSlug": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.07562955081263,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3241",
    "title": "Time Taken to Mark All Nodes",
    "titleSlug": "time-taken-to-mark-all-nodes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.207676908347118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3242",
    "title": "Design Neighbor Sum Service",
    "titleSlug": "design-neighbor-sum-service",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.05395099216156,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3243",
    "title": "Shortest Distance After Road Addition Queries I",
    "titleSlug": "shortest-distance-after-road-addition-queries-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.85441677702277,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3244",
    "title": "Shortest Distance After Road Addition Queries II",
    "titleSlug": "shortest-distance-after-road-addition-queries-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.9459172477259,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3245",
    "title": "Alternating Groups III",
    "titleSlug": "alternating-groups-iii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.975312186019808,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3246",
    "title": "Premier League Table Ranking",
    "titleSlug": "premier-league-table-ranking",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 80.01598721023181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3247",
    "title": "Number of Subsequences with Odd Sum",
    "titleSlug": "number-of-subsequences-with-odd-sum",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 47.34513274336283,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3248",
    "title": "Snake in Matrix",
    "titleSlug": "snake-in-matrix",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.98225649559929,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3249",
    "title": "Count the Number of Good Nodes",
    "titleSlug": "count-the-number-of-good-nodes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.95112387474458,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3250",
    "title": "Find the Count of Monotonic Pairs I",
    "titleSlug": "find-the-count-of-monotonic-pairs-i",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 47.05602020635261,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3251",
    "title": "Find the Count of Monotonic Pairs II",
    "titleSlug": "find-the-count-of-monotonic-pairs-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.61132990957497,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3252",
    "title": "Premier League Table Ranking II",
    "titleSlug": "premier-league-table-ranking-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 56.80433310765064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3253",
    "title": "Construct String with Minimum Cost (Easy)",
    "titleSlug": "construct-string-with-minimum-cost-easy",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.871627146361405,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3254",
    "title": "Find the Power of K-Size Subarrays I",
    "titleSlug": "find-the-power-of-k-size-subarrays-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.33188929202872,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3255",
    "title": "Find the Power of K-Size Subarrays II",
    "titleSlug": "find-the-power-of-k-size-subarrays-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.89349002051856,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3256",
    "title": "Maximum Value Sum by Placing Three Rooks I",
    "titleSlug": "maximum-value-sum-by-placing-three-rooks-i",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.517840996035334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3257",
    "title": "Maximum Value Sum by Placing Three Rooks II",
    "titleSlug": "maximum-value-sum-by-placing-three-rooks-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.58997955010225,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3258",
    "title": "Count Substrings That Satisfy K-Constraint I",
    "titleSlug": "count-substrings-that-satisfy-k-constraint-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 78.35156296694758,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3259",
    "title": "Maximum Energy Boost From Two Drinks",
    "titleSlug": "maximum-energy-boost-from-two-drinks",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.58710070679071,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3260",
    "title": "Find the Largest Palindrome Divisible by K",
    "titleSlug": "find-the-largest-palindrome-divisible-by-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.782546494992847,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3261",
    "title": "Count Substrings That Satisfy K-Constraint II",
    "titleSlug": "count-substrings-that-satisfy-k-constraint-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.265527821544076,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3262",
    "title": "Find Overlapping Shifts",
    "titleSlug": "find-overlapping-shifts",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 58.24727058129242,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3263",
    "title": "Convert Doubly Linked List to Array I",
    "titleSlug": "convert-doubly-linked-list-to-array-i",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 94.82555860446884,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3264",
    "title": "Final Array State After K Multiplication Operations I",
    "titleSlug": "final-array-state-after-k-multiplication-operations-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.99719657139786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3265",
    "title": "Count Almost Equal Pairs I",
    "titleSlug": "count-almost-equal-pairs-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.83262061477003,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3266",
    "title": "Final Array State After K Multiplication Operations II",
    "titleSlug": "final-array-state-after-k-multiplication-operations-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 12.03068082088027,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3267",
    "title": "Count Almost Equal Pairs II",
    "titleSlug": "count-almost-equal-pairs-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.774154146818123,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3268",
    "title": "Find Overlapping Shifts II",
    "titleSlug": "find-overlapping-shifts-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 57.15077605321508,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3269",
    "title": "Constructing Two Increasing Arrays",
    "titleSlug": "constructing-two-increasing-arrays",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 61.366806136680616,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3270",
    "title": "Find the Key of the Numbers",
    "titleSlug": "find-the-key-of-the-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.16887111657952,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3271",
    "title": "Hash Divided String",
    "titleSlug": "hash-divided-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 83.02049281169812,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3272",
    "title": "Find the Count of Good Integers",
    "titleSlug": "find-the-count-of-good-integers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 69.46318061885344,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3273",
    "title": "Minimum Amount of Damage Dealt to Bob",
    "titleSlug": "minimum-amount-of-damage-dealt-to-bob",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.766037191869685,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3274",
    "title": "Check if Two Chessboard Squares Have the Same Color",
    "titleSlug": "check-if-two-chessboard-squares-have-the-same-color",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.08964832454963,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3275",
    "title": "K-th Nearest Obstacle Queries",
    "titleSlug": "k-th-nearest-obstacle-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.49440020083962,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3276",
    "title": "Select Cells in Grid With Maximum Score",
    "titleSlug": "select-cells-in-grid-with-maximum-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 14.770057066129574,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3277",
    "title": "Maximum XOR Score Subarray Queries",
    "titleSlug": "maximum-xor-score-subarray-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 42.87969425058159,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3278",
    "title": "Find Candidates for Data Scientist Position II",
    "titleSlug": "find-candidates-for-data-scientist-position-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 42.010002381519406,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3279",
    "title": "Maximum Total Area Occupied by Pistons",
    "titleSlug": "maximum-total-area-occupied-by-pistons",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 37.92184724689165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3280",
    "title": "Convert Date to Binary",
    "titleSlug": "convert-date-to-binary",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.5260148656375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3281",
    "title": "Maximize Score of Numbers in Ranges",
    "titleSlug": "maximize-score-of-numbers-in-ranges",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.12942747558192,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3282",
    "title": "Reach End of Array With Max Score",
    "titleSlug": "reach-end-of-array-with-max-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.863221019946195,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3283",
    "title": "Maximum Number of Moves to Kill All Pawns",
    "titleSlug": "maximum-number-of-moves-to-kill-all-pawns",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.999467750520154,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3284",
    "title": "Sum of Consecutive Subarrays",
    "titleSlug": "sum-of-consecutive-subarrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 41.89655172413793,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3285",
    "title": "Find Indices of Stable Mountains",
    "titleSlug": "find-indices-of-stable-mountains",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 86.42283928698245,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3286",
    "title": "Find a Safe Walk Through a Grid",
    "titleSlug": "find-a-safe-walk-through-a-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.572209938321887,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3287",
    "title": "Find the Maximum Sequence Value of Array",
    "titleSlug": "find-the-maximum-sequence-value-of-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 19.547411329955427,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3288",
    "title": "Length of the Longest Increasing Path",
    "titleSlug": "length-of-the-longest-increasing-path",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.44859049434836,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3289",
    "title": "The Two Sneaky Numbers of Digitville",
    "titleSlug": "the-two-sneaky-numbers-of-digitville",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.44040063714984,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3290",
    "title": "Maximum Multiplication Score",
    "titleSlug": "maximum-multiplication-score",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.0226558316064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3291",
    "title": "Minimum Number of Valid Strings to Form Target I",
    "titleSlug": "minimum-number-of-valid-strings-to-form-target-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 20.660776734769005,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3292",
    "title": "Minimum Number of Valid Strings to Form Target II",
    "titleSlug": "minimum-number-of-valid-strings-to-form-target-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.64012613322822,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3293",
    "title": "Calculate Product Final Price",
    "titleSlug": "calculate-product-final-price",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 79.34970598408854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3294",
    "title": "Convert Doubly Linked List to Array II",
    "titleSlug": "convert-doubly-linked-list-to-array-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 81.66869671132766,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3295",
    "title": "Report Spam Message",
    "titleSlug": "report-spam-message",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.07212889472247,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3296",
    "title": "Minimum Number of Seconds to Make Mountain Height Zero",
    "titleSlug": "minimum-number-of-seconds-to-make-mountain-height-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.378896882494004,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3297",
    "title": "Count Substrings That Can Be Rearranged to Contain a String I",
    "titleSlug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.02977859862736,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3298",
    "title": "Count Substrings That Can Be Rearranged to Contain a String II",
    "titleSlug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 55.54142754046531,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3299",
    "title": "Sum of Consecutive Subsequences",
    "titleSlug": "sum-of-consecutive-subsequences",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 41.43646408839779,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3300",
    "title": "Minimum Element After Replacement With Digit Sum",
    "titleSlug": "minimum-element-after-replacement-with-digit-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 84.14553180188554,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3301",
    "title": "Maximize the Total Height of Unique Towers",
    "titleSlug": "maximize-the-total-height-of-unique-towers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.822493974038615,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3302",
    "title": "Find the Lexicographically Smallest Valid Sequence",
    "titleSlug": "find-the-lexicographically-smallest-valid-sequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 20.8811804605224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3303",
    "title": "Find the Occurrence of First Almost Equal Substring",
    "titleSlug": "find-the-occurrence-of-first-almost-equal-substring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 14.400352733686066,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3304",
    "title": "Find the K-th Character in String Game I",
    "titleSlug": "find-the-k-th-character-in-string-game-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.77842209426386,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3305",
    "title": "Count of Substrings Containing Every Vowel and K Consonants I",
    "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.47938089685148,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3306",
    "title": "Count of Substrings Containing Every Vowel and K Consonants II",
    "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.609848115615534,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3307",
    "title": "Find the K-th Character in String Game II",
    "titleSlug": "find-the-k-th-character-in-string-game-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.626314538312634,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3308",
    "title": "Find Top Performing Driver",
    "titleSlug": "find-top-performing-driver",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 48.90840056953014,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3309",
    "title": "Maximum Possible Number by Binary Concatenation",
    "titleSlug": "maximum-possible-number-by-binary-concatenation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 65.14290999907502,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3310",
    "title": "Remove Methods From Project",
    "titleSlug": "remove-methods-from-project",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.86861714644286,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3311",
    "title": "Construct 2D Grid Matching Graph Layout",
    "titleSlug": "construct-2d-grid-matching-graph-layout",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.679062694407964,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3312",
    "title": "Sorted GCD Pair Queries",
    "titleSlug": "sorted-gcd-pair-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.462747614082925,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3313",
    "title": "Find the Last Marked Nodes in Tree",
    "titleSlug": "find-the-last-marked-nodes-in-tree",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 52.96442687747036,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3314",
    "title": "Construct the Minimum Bitwise Array I",
    "titleSlug": "construct-the-minimum-bitwise-array-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.32516020486429,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3315",
    "title": "Construct the Minimum Bitwise Array II",
    "titleSlug": "construct-the-minimum-bitwise-array-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.32649212822874,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3316",
    "title": "Find Maximum Removals From Source String",
    "titleSlug": "find-maximum-removals-from-source-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.67309520575852,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3317",
    "title": "Find the Number of Possible Ways for an Event",
    "titleSlug": "find-the-number-of-possible-ways-for-an-event",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.94735033335625,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3318",
    "title": "Find X-Sum of All K-Long Subarrays I",
    "titleSlug": "find-x-sum-of-all-k-long-subarrays-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 63.93398511077226,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3319",
    "title": "K-th Largest Perfect Subtree Size in Binary Tree",
    "titleSlug": "k-th-largest-perfect-subtree-size-in-binary-tree",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.45683369711605,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3320",
    "title": "Count The Number of Winning Sequences",
    "titleSlug": "count-the-number-of-winning-sequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 31.557785812242862,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3321",
    "title": "Find X-Sum of All K-Long Subarrays II",
    "titleSlug": "find-x-sum-of-all-k-long-subarrays-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 16.57864608339181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3322",
    "title": "Premier League Table Ranking III",
    "titleSlug": "premier-league-table-ranking-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 69.8000850701829,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3323",
    "title": "Minimize Connected Groups by Inserting Interval",
    "titleSlug": "minimize-connected-groups-by-inserting-interval",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.25929127052723,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3324",
    "title": "Find the Sequence of Strings Appeared on the Screen",
    "titleSlug": "find-the-sequence-of-strings-appeared-on-the-screen",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 79.74387439536912,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3325",
    "title": "Count Substrings With K-Frequency Characters I",
    "titleSlug": "count-substrings-with-k-frequency-characters-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.05099991968516,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3326",
    "title": "Minimum Division Operations to Make Array Non Decreasing",
    "titleSlug": "minimum-division-operations-to-make-array-non-decreasing",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.796568812416673,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3327",
    "title": "Check if DFS Strings Are Palindromes",
    "titleSlug": "check-if-dfs-strings-are-palindromes",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.48258863679454,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3328",
    "title": "Find Cities in Each State II",
    "titleSlug": "find-cities-in-each-state-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.65637371338083,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3329",
    "title": "Count Substrings With K-Frequency Characters II",
    "titleSlug": "count-substrings-with-k-frequency-characters-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 70.20517395182873,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3330",
    "title": "Find the Original Typed String I",
    "titleSlug": "find-the-original-typed-string-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.04927051305239,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3331",
    "title": "Find Subtree Sizes After Changes",
    "titleSlug": "find-subtree-sizes-after-changes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.07823129251701,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3332",
    "title": "Maximum Points Tourist Can Earn",
    "titleSlug": "maximum-points-tourist-can-earn",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.942826892535734,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3333",
    "title": "Find the Original Typed String II",
    "titleSlug": "find-the-original-typed-string-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 45.84798125066582,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3334",
    "title": "Find the Maximum Factor Score of Array",
    "titleSlug": "find-the-maximum-factor-score-of-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.7167211501283,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3335",
    "title": "Total Characters in String After Transformations I",
    "titleSlug": "total-characters-in-string-after-transformations-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.72233576063017,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3336",
    "title": "Find the Number of Subsequences With Equal GCD",
    "titleSlug": "find-the-number-of-subsequences-with-equal-gcd",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.66042966042966,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3337",
    "title": "Total Characters in String After Transformations II",
    "titleSlug": "total-characters-in-string-after-transformations-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.12641605400657,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3338",
    "title": "Second Highest Salary II",
    "titleSlug": "second-highest-salary-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 87.41284403669725,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3339",
    "title": "Find the Number of K-Even Arrays",
    "titleSlug": "find-the-number-of-k-even-arrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 60.067491563554555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3340",
    "title": "Check Balanced String",
    "titleSlug": "check-balanced-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.68133737702493,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3341",
    "title": "Find Minimum Time to Reach Last Room I",
    "titleSlug": "find-minimum-time-to-reach-last-room-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.53567987191714,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3342",
    "title": "Find Minimum Time to Reach Last Room II",
    "titleSlug": "find-minimum-time-to-reach-last-room-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.14726996341525,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3343",
    "title": "Count Number of Balanced Permutations",
    "titleSlug": "count-number-of-balanced-permutations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.20507548021465,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3344",
    "title": "Maximum Sized Array",
    "titleSlug": "maximum-sized-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 50.53868756121449,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3345",
    "title": "Smallest Divisible Digit Product I",
    "titleSlug": "smallest-divisible-digit-product-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.06454270312864,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3346",
    "title": "Maximum Frequency of an Element After Performing Operations I",
    "titleSlug": "maximum-frequency-of-an-element-after-performing-operations-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 21.644406424195594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3347",
    "title": "Maximum Frequency of an Element After Performing Operations II",
    "titleSlug": "maximum-frequency-of-an-element-after-performing-operations-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.41010037145341,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3348",
    "title": "Smallest Divisible Digit Product II",
    "titleSlug": "smallest-divisible-digit-product-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 11.59339579374959,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3349",
    "title": "Adjacent Increasing Subarrays Detection I",
    "titleSlug": "adjacent-increasing-subarrays-detection-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 42.91205132861207,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3350",
    "title": "Adjacent Increasing Subarrays Detection II",
    "titleSlug": "adjacent-increasing-subarrays-detection-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.42897722525774,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3351",
    "title": "Sum of Good Subsequences",
    "titleSlug": "sum-of-good-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.208690604965305,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3352",
    "title": "Count K-Reducible Numbers Less Than N",
    "titleSlug": "count-k-reducible-numbers-less-than-n",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.016727319159806,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3353",
    "title": "Minimum Total Operations",
    "titleSlug": "minimum-total-operations",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 63.21967579653438,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3354",
    "title": "Make Array Elements Equal to Zero",
    "titleSlug": "make-array-elements-equal-to-zero",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.77949709864603,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3355",
    "title": "Zero Array Transformation I",
    "titleSlug": "zero-array-transformation-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.39891036995983,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3356",
    "title": "Zero Array Transformation II",
    "titleSlug": "zero-array-transformation-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.59004449332265,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3357",
    "title": "Minimize the Maximum Adjacent Element Difference",
    "titleSlug": "minimize-the-maximum-adjacent-element-difference",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 16.61489737499239,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3358",
    "title": "Books with NULL Ratings",
    "titleSlug": "books-with-null-ratings",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 84.51405152224825,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3359",
    "title": "Find Sorted Submatrices With Maximum Element at Most K",
    "titleSlug": "find-sorted-submatrices-with-maximum-element-at-most-k",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 49.77307110438729,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3360",
    "title": "Stone Removal Game",
    "titleSlug": "stone-removal-game",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 41.87591393357009,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3361",
    "title": "Shift Distance Between Two Strings",
    "titleSlug": "shift-distance-between-two-strings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.00229083986707,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3362",
    "title": "Zero Array Transformation III",
    "titleSlug": "zero-array-transformation-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.036549976123126,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3363",
    "title": "Find the Maximum Number of Fruits Collected",
    "titleSlug": "find-the-maximum-number-of-fruits-collected",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 65.31540476393106,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3364",
    "title": "Minimum Positive Sum Subarray ",
    "titleSlug": "minimum-positive-sum-subarray",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 44.47203154666277,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3365",
    "title": "Rearrange K Substrings to Form Target String",
    "titleSlug": "rearrange-k-substrings-to-form-target-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.40333867296181,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3366",
    "title": "Minimum Array Sum",
    "titleSlug": "minimum-array-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.193139116731988,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3367",
    "title": "Maximize Sum of Weights after Edge Removals",
    "titleSlug": "maximize-sum-of-weights-after-edge-removals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.519826749309235,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3368",
    "title": "First Letter Capitalization",
    "titleSlug": "first-letter-capitalization",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 86.76599474145486,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3369",
    "title": "Design an Array Statistics Tracker ",
    "titleSlug": "design-an-array-statistics-tracker",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 34.86938655708835,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Data Stream",
        "slug": "data-stream"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3370",
    "title": "Smallest Number With All Set Bits",
    "titleSlug": "smallest-number-with-all-set-bits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 76.09509213387034,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3371",
    "title": "Identify the Largest Outlier in an Array",
    "titleSlug": "identify-the-largest-outlier-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.01487191633829,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3372",
    "title": "Maximize the Number of Target Nodes After Connecting Trees I",
    "titleSlug": "maximize-the-number-of-target-nodes-after-connecting-trees-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 69.6244672175938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3373",
    "title": "Maximize the Number of Target Nodes After Connecting Trees II",
    "titleSlug": "maximize-the-number-of-target-nodes-after-connecting-trees-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 73.14178571809049,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3374",
    "title": "First Letter Capitalization II",
    "titleSlug": "first-letter-capitalization-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.60443471119628,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3375",
    "title": "Minimum Operations to Make Array Values Equal to K",
    "titleSlug": "minimum-operations-to-make-array-values-equal-to-k",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.325726012614,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3376",
    "title": "Minimum Time to Break Locks I",
    "titleSlug": "minimum-time-to-break-locks-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.22921987182576,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3377",
    "title": "Digit Operations to Make Two Integers Equal",
    "titleSlug": "digit-operations-to-make-two-integers-equal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.621100735148026,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3378",
    "title": "Count Connected Components in LCM Graph",
    "titleSlug": "count-connected-components-in-lcm-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.618467457518438,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3379",
    "title": "Transformed Array",
    "titleSlug": "transformed-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 56.98132574001722,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3380",
    "title": "Maximum Area Rectangle With Point Constraints I",
    "titleSlug": "maximum-area-rectangle-with-point-constraints-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.41908220996019,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3381",
    "title": "Maximum Subarray Sum With Length Divisible by K",
    "titleSlug": "maximum-subarray-sum-with-length-divisible-by-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 27.723580639758833,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3382",
    "title": "Maximum Area Rectangle With Point Constraints II",
    "titleSlug": "maximum-area-rectangle-with-point-constraints-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.215743191325878,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3383",
    "title": "Minimum Runes to Add to Cast Spell",
    "titleSlug": "minimum-runes-to-add-to-cast-spell",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.94736842105264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3384",
    "title": "Team Dominance by Pass Success",
    "titleSlug": "team-dominance-by-pass-success",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 74.12140575079871,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3385",
    "title": "Minimum Time to Break Locks II",
    "titleSlug": "minimum-time-to-break-locks-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 43.27666151468315,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3386",
    "title": "Button with Longest Push Time",
    "titleSlug": "button-with-longest-push-time",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 40.78014609747028,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3387",
    "title": "Maximize Amount After Two Days of Conversions",
    "titleSlug": "maximize-amount-after-two-days-of-conversions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.1011926273943,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3388",
    "title": "Count Beautiful Splits in an Array",
    "titleSlug": "count-beautiful-splits-in-an-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 16.360353229277464,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3389",
    "title": "Minimum Operations to Make Character Frequencies Equal",
    "titleSlug": "minimum-operations-to-make-character-frequencies-equal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.425191027853096,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3390",
    "title": "Longest Team Pass Streak",
    "titleSlug": "longest-team-pass-streak",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 40.19988895058301,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3391",
    "title": "Design a 3D Binary Matrix with Efficient Layer Tracking",
    "titleSlug": "design-a-3d-binary-matrix-with-efficient-layer-tracking",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 68.31530139103555,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3392",
    "title": "Count Subarrays of Length Three With a Condition",
    "titleSlug": "count-subarrays-of-length-three-with-a-condition",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.58465380891233,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3393",
    "title": "Count Paths With the Given XOR Value",
    "titleSlug": "count-paths-with-the-given-xor-value",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.05643724858407,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3394",
    "title": "Check if Grid can be Cut into Sections",
    "titleSlug": "check-if-grid-can-be-cut-into-sections",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.26690304438195,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3395",
    "title": "Subsequences with a Unique Middle Mode I",
    "titleSlug": "subsequences-with-a-unique-middle-mode-i",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.28317545477408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3396",
    "title": "Minimum Number of Operations to Make Elements in Array Distinct",
    "titleSlug": "minimum-number-of-operations-to-make-elements-in-array-distinct",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.30829737432926,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3397",
    "title": "Maximum Number of Distinct Elements After Operations",
    "titleSlug": "maximum-number-of-distinct-elements-after-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.6860076373308,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3398",
    "title": "Smallest Substring With Identical Characters I",
    "titleSlug": "smallest-substring-with-identical-characters-i",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 19.59099501632583,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3399",
    "title": "Smallest Substring With Identical Characters II",
    "titleSlug": "smallest-substring-with-identical-characters-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 40.003792427785854,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3400",
    "title": "Maximum Number of Matching Indices After Right Shifts",
    "titleSlug": "maximum-number-of-matching-indices-after-right-shifts",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 84.18430884184309,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3401",
    "title": "Find Circular Gift Exchange Chains",
    "titleSlug": "find-circular-gift-exchange-chains",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 53.74800637958532,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3402",
    "title": "Minimum Operations to Make Columns Strictly Increasing",
    "titleSlug": "minimum-operations-to-make-columns-strictly-increasing",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.20680590039433,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3403",
    "title": "Find the Lexicographically Largest String From the Box I",
    "titleSlug": "find-the-lexicographically-largest-string-from-the-box-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.03472741276411,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3404",
    "title": "Count Special Subsequences",
    "titleSlug": "count-special-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.390739679681317,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3405",
    "title": "Count the Number of Arrays with K Matching Adjacent Elements",
    "titleSlug": "count-the-number-of-arrays-with-k-matching-adjacent-elements",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.357498018931174,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3406",
    "title": "Find the Lexicographically Largest String From the Box II",
    "titleSlug": "find-the-lexicographically-largest-string-from-the-box-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 48.322147651006716,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3407",
    "title": "Substring Matching Pattern",
    "titleSlug": "substring-matching-pattern",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 27.522735186699816,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3408",
    "title": "Design Task Manager",
    "titleSlug": "design-task-manager",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.57092481532007,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3409",
    "title": "Longest Subsequence With Decreasing Adjacent Difference",
    "titleSlug": "longest-subsequence-with-decreasing-adjacent-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 15.257398657050485,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3410",
    "title": "Maximize Subarray Sum After Removing All Occurrences of One Element",
    "titleSlug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.799750078100594,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3411",
    "title": "Maximum Subarray With Equal Products",
    "titleSlug": "maximum-subarray-with-equal-products",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 45.7229135211121,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3412",
    "title": "Find Mirror Score of a String",
    "titleSlug": "find-mirror-score-of-a-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.655259483706146,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3413",
    "title": "Maximum Coins From K Consecutive Bags",
    "titleSlug": "maximum-coins-from-k-consecutive-bags",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 23.886541943270974,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3414",
    "title": "Maximum Score of Non-overlapping Intervals",
    "titleSlug": "maximum-score-of-non-overlapping-intervals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.518894991392738,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3415",
    "title": "Find Products with Three Consecutive Digits ",
    "titleSlug": "find-products-with-three-consecutive-digits",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 81.41263940520446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3416",
    "title": "Subsequences with a Unique Middle Mode II",
    "titleSlug": "subsequences-with-a-unique-middle-mode-ii",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 11.942174732872408,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3417",
    "title": "Zigzag Grid Traversal With Skip",
    "titleSlug": "zigzag-grid-traversal-with-skip",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.20011929076219,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3418",
    "title": "Maximum Amount of Money Robot Can Earn",
    "titleSlug": "maximum-amount-of-money-robot-can-earn",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.033139111434814,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3419",
    "title": "Minimize the Maximum Edge Weight of Graph",
    "titleSlug": "minimize-the-maximum-edge-weight-of-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.225949507428176,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3420",
    "title": "Count Non-Decreasing Subarrays After K Operations",
    "titleSlug": "count-non-decreasing-subarrays-after-k-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.07832832832833,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3421",
    "title": "Find Students Who Improved",
    "titleSlug": "find-students-who-improved",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.38819537025815,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3422",
    "title": "Minimum Operations to Make Subarray Elements Equal",
    "titleSlug": "minimum-operations-to-make-subarray-elements-equal",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 46.22716441620334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3423",
    "title": "Maximum Difference Between Adjacent Elements in a Circular Array",
    "titleSlug": "maximum-difference-between-adjacent-elements-in-a-circular-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 75.84361869747899,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3424",
    "title": "Minimum Cost to Make Arrays Identical",
    "titleSlug": "minimum-cost-to-make-arrays-identical",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.218945816439366,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3425",
    "title": "Longest Special Path",
    "titleSlug": "longest-special-path",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.779272625653718,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3426",
    "title": "Manhattan Distances of All Arrangements of Pieces",
    "titleSlug": "manhattan-distances-of-all-arrangements-of-pieces",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 33.98736600306279,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3427",
    "title": "Sum of Variable Length Subarrays",
    "titleSlug": "sum-of-variable-length-subarrays",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 85.28560284302678,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3428",
    "title": "Maximum and Minimum Sums of at Most Size K Subsequences",
    "titleSlug": "maximum-and-minimum-sums-of-at-most-size-k-subsequences",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 20.79311198331035,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3429",
    "title": "Paint House IV",
    "titleSlug": "paint-house-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.39252336448598,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3430",
    "title": "Maximum and Minimum Sums of at Most Size K Subarrays",
    "titleSlug": "maximum-and-minimum-sums-of-at-most-size-k-subarrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.91450103950104,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3431",
    "title": "Minimum Unlocked Indices to Sort Nums",
    "titleSlug": "minimum-unlocked-indices-to-sort-nums",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.97392438070405,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3432",
    "title": "Count Partitions with Even Sum Difference",
    "titleSlug": "count-partitions-with-even-sum-difference",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 73.96829555875803,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3433",
    "title": "Count Mentions Per User",
    "titleSlug": "count-mentions-per-user",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.393706714844924,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3434",
    "title": "Maximum Frequency After Subarray Operation",
    "titleSlug": "maximum-frequency-after-subarray-operation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.747634917222104,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3435",
    "title": "Frequencies of Shortest Supersequences",
    "titleSlug": "frequencies-of-shortest-supersequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.267407344584853,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3436",
    "title": "Find Valid Emails",
    "titleSlug": "find-valid-emails",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 47.6256716580749,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3437",
    "title": "Permutations III",
    "titleSlug": "permutations-iii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 86.46437095124446,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3438",
    "title": "Find Valid Pair of Adjacent Digits in String",
    "titleSlug": "find-valid-pair-of-adjacent-digits-in-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 59.992241188206606,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3439",
    "title": "Reschedule Meetings for Maximum Free Time I",
    "titleSlug": "reschedule-meetings-for-maximum-free-time-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.885946922158624,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3440",
    "title": "Reschedule Meetings for Maximum Free Time II",
    "titleSlug": "reschedule-meetings-for-maximum-free-time-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.46506542260451,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3441",
    "title": "Minimum Cost Good Caption",
    "titleSlug": "minimum-cost-good-caption",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.431114828533875,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3442",
    "title": "Maximum Difference Between Even and Odd Frequency I",
    "titleSlug": "maximum-difference-between-even-and-odd-frequency-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 60.992031408325886,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3443",
    "title": "Maximum Manhattan Distance After K Changes",
    "titleSlug": "maximum-manhattan-distance-after-k-changes",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.10255427072093,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3444",
    "title": "Minimum Increments for Target Multiples in an Array",
    "titleSlug": "minimum-increments-for-target-multiples-in-an-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.134537716593563,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3445",
    "title": "Maximum Difference Between Even and Odd Frequency II",
    "titleSlug": "maximum-difference-between-even-and-odd-frequency-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.90368480198731,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3446",
    "title": "Sort Matrix by Diagonals",
    "titleSlug": "sort-matrix-by-diagonals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 84.7363412633306,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3447",
    "title": "Assign Elements to Groups with Constraints",
    "titleSlug": "assign-elements-to-groups-with-constraints",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 26.271243366695774,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3448",
    "title": "Count Substrings Divisible By Last Digit",
    "titleSlug": "count-substrings-divisible-by-last-digit",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.457235030293493,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3449",
    "title": "Maximize the Minimum Game Score",
    "titleSlug": "maximize-the-minimum-game-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.23988318731748,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3450",
    "title": "Maximum Students on a Single Bench",
    "titleSlug": "maximum-students-on-a-single-bench",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.35457764289328,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3451",
    "title": "Find Invalid IP Addresses",
    "titleSlug": "find-invalid-ip-addresses",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 53.97066646401703,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3452",
    "title": "Sum of Good Numbers",
    "titleSlug": "sum-of-good-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.37162003291793,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3453",
    "title": "Separate Squares I",
    "titleSlug": "separate-squares-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.08857134508051,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3454",
    "title": "Separate Squares II",
    "titleSlug": "separate-squares-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.320562939796716,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Line Sweep",
        "slug": "line-sweep"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3455",
    "title": "Shortest Matching Substring",
    "titleSlug": "shortest-matching-substring",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.485369781234045,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3456",
    "title": "Find Special Substring of Length K",
    "titleSlug": "find-special-substring-of-length-k",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 35.01403785349264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3457",
    "title": "Eat Pizzas!",
    "titleSlug": "eat-pizzas",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.67832580074671,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3458",
    "title": "Select K Disjoint Special Substrings",
    "titleSlug": "select-k-disjoint-special-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 18.221336063659717,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3459",
    "title": "Length of Longest V-Shaped Diagonal Segment",
    "titleSlug": "length-of-longest-v-shaped-diagonal-segment",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 56.62012935794289,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Memoization",
        "slug": "memoization"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3460",
    "title": "Longest Common Prefix After at Most One Removal",
    "titleSlug": "longest-common-prefix-after-at-most-one-removal",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.88375558867362,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3461",
    "title": "Check If Digits Are Equal in String After Operations I",
    "titleSlug": "check-if-digits-are-equal-in-string-after-operations-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 77.92259420166397,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3462",
    "title": "Maximum Sum With at Most K Elements",
    "titleSlug": "maximum-sum-with-at-most-k-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 60.12347479461377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3463",
    "title": "Check If Digits Are Equal in String After Operations II",
    "titleSlug": "check-if-digits-are-equal-in-string-after-operations-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 12.125395455852747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3464",
    "title": "Maximize the Distance Between Points on a Square",
    "titleSlug": "maximize-the-distance-between-points-on-a-square",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 19.94074074074074,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3465",
    "title": "Find Products with Valid Serial Numbers",
    "titleSlug": "find-products-with-valid-serial-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 36.44559287970141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3466",
    "title": "Maximum Coin Collection ",
    "titleSlug": "maximum-coin-collection",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.916757701551234,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3467",
    "title": "Transform Array by Parity",
    "titleSlug": "transform-array-by-parity",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.66571746935743,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3468",
    "title": "Find the Number of Copy Arrays",
    "titleSlug": "find-the-number-of-copy-arrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.342687656856036,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3469",
    "title": "Find Minimum Cost to Remove Array Elements",
    "titleSlug": "find-minimum-cost-to-remove-array-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 20.144354575459722,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3470",
    "title": "Permutations IV",
    "titleSlug": "permutations-iv",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 32.077576589719385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3471",
    "title": "Find the Largest Almost Missing Integer",
    "titleSlug": "find-the-largest-almost-missing-integer",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 36.88809845316119,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3472",
    "title": "Longest Palindromic Subsequence After at Most K Operations",
    "titleSlug": "longest-palindromic-subsequence-after-at-most-k-operations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.90427490284311,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3473",
    "title": "Sum of K Subarrays With Length at Least M",
    "titleSlug": "sum-of-k-subarrays-with-length-at-least-m",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.241212956581666,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3474",
    "title": "Lexicographically Smallest Generated String",
    "titleSlug": "lexicographically-smallest-generated-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.37446286065071,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3475",
    "title": "DNA Pattern Recognition ",
    "titleSlug": "dna-pattern-recognition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 85.2624283283977,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3476",
    "title": "Maximize Profit from Task Assignment",
    "titleSlug": "maximize-profit-from-task-assignment",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.36807817589576,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3477",
    "title": "Fruits Into Baskets II",
    "titleSlug": "fruits-into-baskets-ii",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 70.29244854721549,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3478",
    "title": "Choose K Elements With Maximum Sum",
    "titleSlug": "choose-k-elements-with-maximum-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.3052492280547,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3479",
    "title": "Fruits Into Baskets III",
    "titleSlug": "fruits-into-baskets-iii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.94669882080398,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3480",
    "title": "Maximize Subarrays After Removing One Conflicting Pair",
    "titleSlug": "maximize-subarrays-after-removing-one-conflicting-pair",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.85179443274637,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3481",
    "title": "Apply Substitutions",
    "titleSlug": "apply-substitutions",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.57282875034032,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3482",
    "title": "Analyze Organization Hierarchy",
    "titleSlug": "analyze-organization-hierarchy",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 58.72005988023952,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3483",
    "title": "Unique 3-Digit Even Numbers",
    "titleSlug": "unique-3-digit-even-numbers",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 68.1096808323047,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3484",
    "title": "Design Spreadsheet",
    "titleSlug": "design-spreadsheet",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.76812480068034,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3485",
    "title": "Longest Common Prefix of K Strings After Removal",
    "titleSlug": "longest-common-prefix-of-k-strings-after-removal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.725040021865606,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3486",
    "title": "Longest Special Path II",
    "titleSlug": "longest-special-path-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.278733654507914,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3487",
    "title": "Maximum Unique Subarray Sum After Deletion",
    "titleSlug": "maximum-unique-subarray-sum-after-deletion",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 40.34874193574048,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3488",
    "title": "Closest Equal Element Queries",
    "titleSlug": "closest-equal-element-queries",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.0296674375947,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3489",
    "title": "Zero Array Transformation IV",
    "titleSlug": "zero-array-transformation-iv",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.41320899991445,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3490",
    "title": "Count Beautiful Numbers",
    "titleSlug": "count-beautiful-numbers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.62645218945487,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3491",
    "title": "Phone Number Prefix",
    "titleSlug": "phone-number-prefix",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 71.03551775887944,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3492",
    "title": "Maximum Containers on a Ship",
    "titleSlug": "maximum-containers-on-a-ship",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 74.83673502790644,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3493",
    "title": "Properties Graph",
    "titleSlug": "properties-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.71907402444807,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3494",
    "title": "Find the Minimum Amount of Time to Brew Potions",
    "titleSlug": "find-the-minimum-amount-of-time-to-brew-potions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.21481819564887,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3495",
    "title": "Minimum Operations to Make Array Elements Zero",
    "titleSlug": "minimum-operations-to-make-array-elements-zero",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 60.338716029933046,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3496",
    "title": "Maximize Score After Pair Deletions",
    "titleSlug": "maximize-score-after-pair-deletions",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 52.97699594046008,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3497",
    "title": "Analyze Subscription Conversion ",
    "titleSlug": "analyze-subscription-conversion",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.8456057007126,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3498",
    "title": "Reverse Degree of a String",
    "titleSlug": "reverse-degree-of-a-string",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 87.89316405260759,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3499",
    "title": "Maximize Active Section with Trade I",
    "titleSlug": "maximize-active-section-with-trade-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.600190684370858,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3500",
    "title": "Minimum Cost to Divide Array Into Subarrays",
    "titleSlug": "minimum-cost-to-divide-array-into-subarrays",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.792376219623055,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3501",
    "title": "Maximize Active Section with Trade II",
    "titleSlug": "maximize-active-section-with-trade-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 17.125171939477305,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3502",
    "title": "Minimum Cost to Reach Every Position",
    "titleSlug": "minimum-cost-to-reach-every-position",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.66130842800054,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3503",
    "title": "Longest Palindrome After Substring Concatenation I",
    "titleSlug": "longest-palindrome-after-substring-concatenation-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.36045582177041,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3504",
    "title": "Longest Palindrome After Substring Concatenation II",
    "titleSlug": "longest-palindrome-after-substring-concatenation-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 16.206282662378683,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3505",
    "title": "Minimum Operations to Make Elements Within K Subarrays Equal",
    "titleSlug": "minimum-operations-to-make-elements-within-k-subarrays-equal",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.472459874142686,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3506",
    "title": "Find Time Required to Eliminate Bacterial Strains",
    "titleSlug": "find-time-required-to-eliminate-bacterial-strains",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 52.0,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3507",
    "title": "Minimum Pair Removal to Sort Array I",
    "titleSlug": "minimum-pair-removal-to-sort-array-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 55.573434109328176,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3508",
    "title": "Implement Router",
    "titleSlug": "implement-router",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.47836313630344,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Design",
        "slug": "design"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3509",
    "title": "Maximum Product of Subsequences With an Alternating Sum Equal to K",
    "titleSlug": "maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 11.296247389018271,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3510",
    "title": "Minimum Pair Removal to Sort Array II",
    "titleSlug": "minimum-pair-removal-to-sort-array-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 14.400194269062652,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Linked List",
        "slug": "linked-list"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Doubly-Linked List",
        "slug": "doubly-linked-list"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3511",
    "title": "Make a Positive Array",
    "titleSlug": "make-a-positive-array",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 35.52199606040709,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3512",
    "title": "Minimum Operations to Make Array Sum Divisible by K",
    "titleSlug": "minimum-operations-to-make-array-sum-divisible-by-k",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.14906595501334,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3513",
    "title": "Number of Unique XOR Triplets I",
    "titleSlug": "number-of-unique-xor-triplets-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.62736218461643,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3514",
    "title": "Number of Unique XOR Triplets II",
    "titleSlug": "number-of-unique-xor-triplets-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.19813586323323,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3515",
    "title": "Shortest Path in a Weighted Tree",
    "titleSlug": "shortest-path-in-a-weighted-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 39.68159989474377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3516",
    "title": "Find Closest Person",
    "titleSlug": "find-closest-person",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.06518838846208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3517",
    "title": "Smallest Palindromic Rearrangement I",
    "titleSlug": "smallest-palindromic-rearrangement-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.16860465116279,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting Sort",
        "slug": "counting-sort"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3518",
    "title": "Smallest Palindromic Rearrangement II",
    "titleSlug": "smallest-palindromic-rearrangement-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 12.789217521527519,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3519",
    "title": "Count Numbers with Non-Decreasing Digits ",
    "titleSlug": "count-numbers-with-non-decreasing-digits",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 37.469707326166656,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3520",
    "title": "Minimum Threshold for Inversion Pairs Count",
    "titleSlug": "minimum-threshold-for-inversion-pairs-count",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 54.16204217536071,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3521",
    "title": "Find Product Recommendation Pairs",
    "titleSlug": "find-product-recommendation-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.113620596623754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3522",
    "title": "Calculate Score After Performing Instructions",
    "titleSlug": "calculate-score-after-performing-instructions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.353174368380564,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3523",
    "title": "Make Array Non-decreasing",
    "titleSlug": "make-array-non-decreasing",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.89877046088859,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3524",
    "title": "Find X Value of Array I",
    "titleSlug": "find-x-value-of-array-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.90992934952842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3525",
    "title": "Find X Value of Array II",
    "titleSlug": "find-x-value-of-array-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.597590361445786,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3526",
    "title": "Range XOR Queries with Subarray Reversals",
    "titleSlug": "range-xor-queries-with-subarray-reversals",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 63.05609284332688,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3527",
    "title": "Find the Most Common Response",
    "titleSlug": "find-the-most-common-response",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 74.98315893474648,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3528",
    "title": "Unit Conversion I",
    "titleSlug": "unit-conversion-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.23654859664175,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3529",
    "title": "Count Cells in Overlapping Horizontal and Vertical Substrings",
    "titleSlug": "count-cells-in-overlapping-horizontal-and-vertical-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.30728624821793,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3530",
    "title": "Maximum Profit from Valid Topological Order in DAG",
    "titleSlug": "maximum-profit-from-valid-topological-order-in-dag",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.730076529144373,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3531",
    "title": "Count Covered Buildings",
    "titleSlug": "count-covered-buildings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 38.131843822586,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3532",
    "title": "Path Existence Queries in a Graph I",
    "titleSlug": "path-existence-queries-in-a-graph-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 54.90961041815484,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3533",
    "title": "Concatenated Divisibility",
    "titleSlug": "concatenated-divisibility",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.098251766831396,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3534",
    "title": "Path Existence Queries in a Graph II",
    "titleSlug": "path-existence-queries-in-a-graph-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.71732817037754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3535",
    "title": "Unit Conversion II",
    "titleSlug": "unit-conversion-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.36641221374046,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3536",
    "title": "Maximum Product of Two Digits",
    "titleSlug": "maximum-product-of-two-digits",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.47303097688369,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3537",
    "title": "Fill a Special Grid",
    "titleSlug": "fill-a-special-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 70.29755768068541,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3538",
    "title": "Merge Operations for Minimum Travel Time",
    "titleSlug": "merge-operations-for-minimum-travel-time",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 28.755860569409524,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3539",
    "title": "Find Sum of Array Product of Magical Sequences",
    "titleSlug": "find-sum-of-array-product-of-magical-sequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.283809933347666,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3540",
    "title": "Minimum Time to Visit All Houses",
    "titleSlug": "minimum-time-to-visit-all-houses",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 67.90299572039943,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3541",
    "title": "Find Most Frequent Vowel and Consonant",
    "titleSlug": "find-most-frequent-vowel-and-consonant",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.90926204444267,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3542",
    "title": "Minimum Operations to Convert All Elements to Zero",
    "titleSlug": "minimum-operations-to-convert-all-elements-to-zero",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.20359156400084,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3543",
    "title": "Maximum Weighted K-Edge Path",
    "titleSlug": "maximum-weighted-k-edge-path",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 18.71645274212369,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3544",
    "title": "Subtree Inversion Sum",
    "titleSlug": "subtree-inversion-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 43.25684851322875,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3545",
    "title": "Minimum Deletions for At Most K Distinct Characters",
    "titleSlug": "minimum-deletions-for-at-most-k-distinct-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 72.73539701855796,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3546",
    "title": "Equal Sum Grid Partition I",
    "titleSlug": "equal-sum-grid-partition-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.05871642360449,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3547",
    "title": "Maximum Sum of Edge Values in a Graph",
    "titleSlug": "maximum-sum-of-edge-values-in-a-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 34.47773373746794,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Graph",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3548",
    "title": "Equal Sum Grid Partition II",
    "titleSlug": "equal-sum-grid-partition-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.817219992703393,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3549",
    "title": "Multiply Two Polynomials",
    "titleSlug": "multiply-two-polynomials",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 65.29680365296804,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3550",
    "title": "Smallest Index With Digit Sum Equal to Index",
    "titleSlug": "smallest-index-with-digit-sum-equal-to-index",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.03409443124289,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3551",
    "title": "Minimum Swaps to Sort by Digit Sum",
    "titleSlug": "minimum-swaps-to-sort-by-digit-sum",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.794784032925264,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3552",
    "title": "Grid Teleportation Traversal",
    "titleSlug": "grid-teleportation-traversal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 22.201262704034495,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3553",
    "title": "Minimum Weighted Subgraph With the Required Paths II",
    "titleSlug": "minimum-weighted-subgraph-with-the-required-paths-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 48.853868194842406,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3554",
    "title": "Find Category Recommendation Pairs",
    "titleSlug": "find-category-recommendation-pairs",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 64.08386508659983,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3555",
    "title": "Smallest Subarray to Sort in Every Sliding Window",
    "titleSlug": "smallest-subarray-to-sort-in-every-sliding-window",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.30859835100118,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3556",
    "title": "Sum of Largest Prime Substrings",
    "titleSlug": "sum-of-largest-prime-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.46317907444668,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3557",
    "title": "Find Maximum Number of Non Intersecting Substrings",
    "titleSlug": "find-maximum-number-of-non-intersecting-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 29.572265468260973,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3558",
    "title": "Number of Ways to Assign Edge Weights I",
    "titleSlug": "number-of-ways-to-assign-edge-weights-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 53.40875386636159,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3559",
    "title": "Number of Ways to Assign Edge Weights II",
    "titleSlug": "number-of-ways-to-assign-edge-weights-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 59.96674491392802,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3560",
    "title": "Find Minimum Log Transportation Cost",
    "titleSlug": "find-minimum-log-transportation-cost",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 41.733699725206094,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3561",
    "title": "Resulting String After Adjacent Removals",
    "titleSlug": "resulting-string-after-adjacent-removals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 55.85890535116438,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3562",
    "title": "Maximum Profit from Trading Stocks with Discounts",
    "titleSlug": "maximum-profit-from-trading-stocks-with-discounts",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.82254817371297,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3563",
    "title": "Lexicographically Smallest String After Adjacent Removals",
    "titleSlug": "lexicographically-smallest-string-after-adjacent-removals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.373746581586145,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3564",
    "title": "Seasonal Sales Analysis",
    "titleSlug": "seasonal-sales-analysis",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.08122409383544,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3565",
    "title": "Sequential Grid Path Cover",
    "titleSlug": "sequential-grid-path-cover",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.96296296296296,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3566",
    "title": "Partition Array into Two Equal Product Subsets",
    "titleSlug": "partition-array-into-two-equal-product-subsets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.88843591092407,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Recursion",
        "slug": "recursion"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3567",
    "title": "Minimum Absolute Difference in Sliding Submatrix",
    "titleSlug": "minimum-absolute-difference-in-sliding-submatrix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.81065788060022,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3568",
    "title": "Minimum Moves to Clean the Classroom",
    "titleSlug": "minimum-moves-to-clean-the-classroom",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.788288288288285,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3569",
    "title": "Maximize Count of Distinct Primes After Split",
    "titleSlug": "maximize-count-of-distinct-primes-after-split",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 15.381892829333898,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3570",
    "title": "Find Books with No Available Copies",
    "titleSlug": "find-books-with-no-available-copies",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.38615150857391,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3571",
    "title": "Find the Shortest Superstring II",
    "titleSlug": "find-the-shortest-superstring-ii",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 50.92674315975286,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3572",
    "title": "Maximize Y\u2011Sum by Picking a Triplet of Distinct X\u2011Values",
    "titleSlug": "maximize-ysum-by-picking-a-triplet-of-distinct-xvalues",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 62.74505551700208,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3573",
    "title": "Best Time to Buy and Sell Stock V",
    "titleSlug": "best-time-to-buy-and-sell-stock-v",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.93366578616042,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3574",
    "title": "Maximize Subarray GCD Score",
    "titleSlug": "maximize-subarray-gcd-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 22.794307891332473,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3575",
    "title": "Maximum Good Subtree Score",
    "titleSlug": "maximum-good-subtree-score",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 44.36505358882754,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3576",
    "title": "Transform Array to All Equal Elements",
    "titleSlug": "transform-array-to-all-equal-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 32.60233918128655,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3577",
    "title": "Count the Number of Computer Unlocking Permutations",
    "titleSlug": "count-the-number-of-computer-unlocking-permutations",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 39.16224893601135,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3578",
    "title": "Count Partitions With Max-Min Difference at Most K",
    "titleSlug": "count-partitions-with-max-min-difference-at-most-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.9926735666938,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3579",
    "title": "Minimum Steps to Convert String with Operations",
    "titleSlug": "minimum-steps-to-convert-string-with-operations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 41.17647058823529,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3580",
    "title": "Find Consistently Improving Employees",
    "titleSlug": "find-consistently-improving-employees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.04866180048662,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3581",
    "title": "Count Odd Letters from Number",
    "titleSlug": "count-odd-letters-from-number",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 85.40145985401459,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3582",
    "title": "Generate Tag for Video Caption",
    "titleSlug": "generate-tag-for-video-caption",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 31.921541538486252,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3583",
    "title": "Count Special Triplets",
    "titleSlug": "count-special-triplets",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.13382832053917,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3584",
    "title": "Maximum Product of First and Last Elements of a Subsequence",
    "titleSlug": "maximum-product-of-first-and-last-elements-of-a-subsequence",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.48937918084732,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3585",
    "title": "Find Weighted Median Node in Tree",
    "titleSlug": "find-weighted-median-node-in-tree",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.956326268465,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3586",
    "title": "Find COVID Recovery Patients",
    "titleSlug": "find-covid-recovery-patients",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.64152273528375,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3587",
    "title": "Minimum Adjacent Swaps to Alternate Parity",
    "titleSlug": "minimum-adjacent-swaps-to-alternate-parity",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.861700996960224,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3588",
    "title": "Find Maximum Area of a Triangle",
    "titleSlug": "find-maximum-area-of-a-triangle",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 28.16390041493776,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3589",
    "title": "Count Prime-Gap Balanced Subarrays",
    "titleSlug": "count-prime-gap-balanced-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 19.924931836691336,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Queue",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      },
      {
        "name": "Monotonic Queue",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3590",
    "title": "Kth Smallest Path XOR Sum",
    "titleSlug": "kth-smallest-path-xor-sum",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.580049994048327,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3591",
    "title": "Check if Any Element Has Prime Frequency",
    "titleSlug": "check-if-any-element-has-prime-frequency",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 62.25638509553792,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3592",
    "title": "Inverse Coin Change",
    "titleSlug": "inverse-coin-change",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 50.3274063032368,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3593",
    "title": "Minimum Increments to Equalize Leaf Paths",
    "titleSlug": "minimum-increments-to-equalize-leaf-paths",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.64306867860669,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3594",
    "title": "Minimum Time to Transport All Individuals",
    "titleSlug": "minimum-time-to-transport-all-individuals",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.12529002320186,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3595",
    "title": "Once Twice",
    "titleSlug": "once-twice",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 77.2875816993464,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3596",
    "title": "Minimum Cost Path with Alternating Directions I",
    "titleSlug": "minimum-cost-path-with-alternating-directions-i",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.17903930131004,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3597",
    "title": "Partition String ",
    "titleSlug": "partition-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 57.828702285152154,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3598",
    "title": "Longest Common Prefix Between Adjacent Strings After Removals",
    "titleSlug": "longest-common-prefix-between-adjacent-strings-after-removals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.85434409280482,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3599",
    "title": "Partition Array to Minimize XOR",
    "titleSlug": "partition-array-to-minimize-xor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.25569932224276,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3600",
    "title": "Maximize Spanning Tree Stability with Upgrades",
    "titleSlug": "maximize-spanning-tree-stability-with-upgrades",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.596818294804876,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Minimum Spanning Tree",
        "slug": "minimum-spanning-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3601",
    "title": "Find Drivers with Improved Fuel Efficiency",
    "titleSlug": "find-drivers-with-improved-fuel-efficiency",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.040079277692136,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3602",
    "title": "Hexadecimal and Hexatrigesimal Conversion",
    "titleSlug": "hexadecimal-and-hexatrigesimal-conversion",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 80.18559107341095,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3603",
    "title": "Minimum Cost Path with Alternating Directions II",
    "titleSlug": "minimum-cost-path-with-alternating-directions-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.13360963094533,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3604",
    "title": "Minimum Time to Reach Destination in Directed Graph",
    "titleSlug": "minimum-time-to-reach-destination-in-directed-graph",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 45.52610783538994,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3605",
    "title": "Minimum Stability Factor of Array",
    "titleSlug": "minimum-stability-factor-of-array",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.20188752138639,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3606",
    "title": "Coupon Code Validator",
    "titleSlug": "coupon-code-validator",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.71396810202411,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3607",
    "title": "Power Grid Maintenance",
    "titleSlug": "power-grid-maintenance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.44084878184088,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3608",
    "title": "Minimum Time for K Connected Components",
    "titleSlug": "minimum-time-for-k-connected-components",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.56241863156372,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3609",
    "title": "Minimum Moves to Reach Target in Grid",
    "titleSlug": "minimum-moves-to-reach-target-in-grid",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 13.873769188428842,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3610",
    "title": "Minimum Number of Primes to Sum to Target",
    "titleSlug": "minimum-number-of-primes-to-sum-to-target",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 59.57776486538834,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3611",
    "title": "Find Overbooked Employees",
    "titleSlug": "find-overbooked-employees",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 43.27224865849955,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Database",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3612",
    "title": "Process String with Special Operations I",
    "titleSlug": "process-string-with-special-operations-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.86333940086638,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3613",
    "title": "Minimize Maximum Component Cost",
    "titleSlug": "minimize-maximum-component-cost",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.95495641926898,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3614",
    "title": "Process String with Special Operations II",
    "titleSlug": "process-string-with-special-operations-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 16.081880646392673,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3615",
    "title": "Longest Palindromic Path in Graph",
    "titleSlug": "longest-palindromic-path-in-graph",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.015986145340705,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Bitmask",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3616",
    "title": "Number of Student Replacements",
    "titleSlug": "number-of-student-replacements",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 86.22589531680441,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3617",
    "title": "Find Students with Study Spiral Pattern",
    "titleSlug": "find-students-with-study-spiral-pattern",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 26.129827444535742,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3618",
    "title": "Split Array by Prime Indices",
    "titleSlug": "split-array-by-prime-indices",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 49.117324098319116,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3619",
    "title": "Count Islands With Total Value Divisible by K",
    "titleSlug": "count-islands-with-total-value-divisible-by-k",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.04546724252777,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3620",
    "title": "Network Recovery Pathways",
    "titleSlug": "network-recovery-pathways",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 29.94446158593027,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3621",
    "title": "Number of Integers With Popcount-Depth Equal to K I",
    "titleSlug": "number-of-integers-with-popcount-depth-equal-to-k-i",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.556309362279514,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Combinatorics",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3622",
    "title": "Check Divisibility by Digit Sum and Product",
    "titleSlug": "check-divisibility-by-digit-sum-and-product",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 64.23661498510654,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3623",
    "title": "Count Number of Trapezoids I",
    "titleSlug": "count-number-of-trapezoids-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 30.26022740593131,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3624",
    "title": "Number of Integers With Popcount-Depth Equal to K II",
    "titleSlug": "number-of-integers-with-popcount-depth-equal-to-k-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 38.98795738767949,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3625",
    "title": "Count Number of Trapezoids II",
    "titleSlug": "count-number-of-trapezoids-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 13.288304823434402,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "slug": "geometry"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3626",
    "title": "Find Stores with Inventory Imbalance",
    "titleSlug": "find-stores-with-inventory-imbalance",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 48.85300332025355,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3627",
    "title": "Maximum Median Sum of Subsequences of Size 3",
    "titleSlug": "maximum-median-sum-of-subsequences-of-size-3",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.34200397404366,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Game Theory",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3628",
    "title": "Maximum Number of Subsequences After One Inserting",
    "titleSlug": "maximum-number-of-subsequences-after-one-inserting",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.93320235756385,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3629",
    "title": "Minimum Jumps to Reach End via Prime Teleportation",
    "titleSlug": "minimum-jumps-to-reach-end-via-prime-teleportation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 21.57089978205971,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3630",
    "title": "Partition Array for Maximum XOR and AND",
    "titleSlug": "partition-array-for-maximum-xor-and-and",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 11.977633902295468,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3631",
    "title": "Sort Threats by Severity and Exploitability",
    "titleSlug": "sort-threats-by-severity-and-exploitability",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 71.31931166347992,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3632",
    "title": "Subarrays with XOR at Least K",
    "titleSlug": "subarrays-with-xor-at-least-k",
    "difficulty": "Hard",
    "paidOnly": true,
    "acRate": 42.3469387755102,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3633",
    "title": "Earliest Finish Time for Land and Water Rides I",
    "titleSlug": "earliest-finish-time-for-land-and-water-rides-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 61.165324875986016,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3634",
    "title": "Minimum Removals to Balance Array",
    "titleSlug": "minimum-removals-to-balance-array",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.87925969049972,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3635",
    "title": "Earliest Finish Time for Land and Water Rides II",
    "titleSlug": "earliest-finish-time-for-land-and-water-rides-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.72796257203172,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3636",
    "title": "Threshold Majority Queries",
    "titleSlug": "threshold-majority-queries",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.333437207852914,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3637",
    "title": "Trionic Array I",
    "titleSlug": "trionic-array-i",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 41.337358380767064,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3638",
    "title": "Maximum Balanced Shipments",
    "titleSlug": "maximum-balanced-shipments",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 56.62634869333856,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3639",
    "title": "Minimum Time to Activate String",
    "titleSlug": "minimum-time-to-activate-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 37.79286364765295,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3640",
    "title": "Trionic Array II",
    "titleSlug": "trionic-array-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 20.92619593140318,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3641",
    "title": "Longest Semi-Repeating Subarray",
    "titleSlug": "longest-semi-repeating-subarray",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 66.66666666666666,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3642",
    "title": "Find Books with Polarized Opinions",
    "titleSlug": "find-books-with-polarized-opinions",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 43.1501230516817,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3643",
    "title": "Flip Square Submatrix Vertically",
    "titleSlug": "flip-square-submatrix-vertically",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.76062982286231,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3644",
    "title": "Maximum K to Sort a Permutation",
    "titleSlug": "maximum-k-to-sort-a-permutation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.35345881571599,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3645",
    "title": "Maximum Total from Optimal Activation Order",
    "titleSlug": "maximum-total-from-optimal-activation-order",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 35.60771526132832,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3646",
    "title": "Next Special Palindrome Number",
    "titleSlug": "next-special-palindrome-number",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.54454519958867,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3647",
    "title": "Maximum Weight in Two Bags",
    "titleSlug": "maximum-weight-in-two-bags",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 62.138728323699425,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3648",
    "title": "Minimum Sensors to Cover Grid",
    "titleSlug": "minimum-sensors-to-cover-grid",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 68.53274249138356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3649",
    "title": "Number of Perfect Pairs",
    "titleSlug": "number-of-perfect-pairs",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.64773797899858,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3650",
    "title": "Minimum Cost Path with Edge Reversals",
    "titleSlug": "minimum-cost-path-with-edge-reversals",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 46.541115681408705,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Shortest Path",
        "slug": "shortest-path"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3651",
    "title": "Minimum Cost Path with Teleportations",
    "titleSlug": "minimum-cost-path-with-teleportations",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.235666485802135,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3652",
    "title": "Best Time to Buy and Sell Stock using Strategy",
    "titleSlug": "best-time-to-buy-and-sell-stock-using-strategy",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.970251850118466,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3653",
    "title": "XOR After Range Multiplication Queries I",
    "titleSlug": "xor-after-range-multiplication-queries-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 64.61775987262683,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3654",
    "title": "Minimum Sum After Divisible Sum Deletions",
    "titleSlug": "minimum-sum-after-divisible-sum-deletions",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 33.29509177972865,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3655",
    "title": "XOR After Range Multiplication Queries II",
    "titleSlug": "xor-after-range-multiplication-queries-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 25.879742153651065,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Divide and Conquer",
        "slug": "divide-and-conquer"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3656",
    "title": "Determine if a Simple Graph Exists",
    "titleSlug": "determine-if-a-simple-graph-exists",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 49.66139954853273,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3657",
    "title": "Find Loyal Customers",
    "titleSlug": "find-loyal-customers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 61.052832347892426,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3658",
    "title": "GCD of Odd and Even Sums",
    "titleSlug": "gcd-of-odd-and-even-sums",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 81.02362651388377,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3659",
    "title": "Partition Array Into K-Distinct Groups",
    "titleSlug": "partition-array-into-k-distinct-groups",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 40.956336550788826,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3660",
    "title": "Jump Game IX",
    "titleSlug": "jump-game-ix",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 21.080471393566956,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3661",
    "title": "Maximum Walls Destroyed by Robots",
    "titleSlug": "maximum-walls-destroyed-by-robots",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 27.66521771163339,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3662",
    "title": "Filter Characters by Frequency",
    "titleSlug": "filter-characters-by-frequency",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 89.0,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3663",
    "title": "Find The Least Frequent Digit",
    "titleSlug": "find-the-least-frequent-digit",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 69.58648897238695,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3664",
    "title": "Two-Letter Card Game",
    "titleSlug": "two-letter-card-game",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 10.447941239545356,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Enumeration",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3665",
    "title": "Twisted Mirror Path Count",
    "titleSlug": "twisted-mirror-path-count",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 47.535236982399766,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3666",
    "title": "Minimum Operations to Equalize Binary String",
    "titleSlug": "minimum-operations-to-equalize-binary-string",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.065879609386386,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3667",
    "title": "Sort Array By Absolute Value",
    "titleSlug": "sort-array-by-absolute-value",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 88.01020408163265,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3668",
    "title": "Restore Finishing Order",
    "titleSlug": "restore-finishing-order",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 89.60870555662642,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3669",
    "title": "Balanced K-Factor Decomposition",
    "titleSlug": "balanced-k-factor-decomposition",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.49149149149149,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Backtracking",
        "slug": "backtracking"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3670",
    "title": "Maximum Product of Two Integers With No Common Bits",
    "titleSlug": "maximum-product-of-two-integers-with-no-common-bits",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 12.443323094924674,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3671",
    "title": "Sum of Beautiful Subsequences",
    "titleSlug": "sum-of-beautiful-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 18.133726476454772,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Number Theory",
        "slug": "number-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3672",
    "title": "Sum of Weighted Modes in Subarrays",
    "titleSlug": "sum-of-weighted-modes-in-subarrays",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 57.04387990762124,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Ordered Set",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3673",
    "title": "Find Zombie Sessions",
    "titleSlug": "find-zombie-sessions",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.76872751063134,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3674",
    "title": "Minimum Operations to Equalize Array",
    "titleSlug": "minimum-operations-to-equalize-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 53.65998665931963,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Brainteaser",
        "slug": "brainteaser"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3675",
    "title": "Minimum Operations to Transform String",
    "titleSlug": "minimum-operations-to-transform-string",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 59.626135005008564,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3676",
    "title": "Count Bowl Subarrays",
    "titleSlug": "count-bowl-subarrays",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 41.66045471487141,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Stack",
        "slug": "stack"
      },
      {
        "name": "Monotonic Stack",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3677",
    "title": "Count Binary Palindromic Numbers",
    "titleSlug": "count-binary-palindromic-numbers",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 21.742773355676583,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3678",
    "title": "Smallest Absent Positive Greater Than Average",
    "titleSlug": "smallest-absent-positive-greater-than-average",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 33.401072477337536,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3679",
    "title": " Minimum Discards to Balance Inventory",
    "titleSlug": "minimum-discards-to-balance-inventory",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 34.04585931430165,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3680",
    "title": "Generate Schedule",
    "titleSlug": "generate-schedule",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 21.098148470601892,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3681",
    "title": "Maximum XOR of Subsequences",
    "titleSlug": "maximum-xor-of-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 50.39528755231747,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3682",
    "title": "Minimum Index Sum of Common Elements",
    "titleSlug": "minimum-index-sum-of-common-elements",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.45738045738045,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3683",
    "title": "Earliest Time to Finish One Task",
    "titleSlug": "earliest-time-to-finish-one-task",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 82.07308946796198,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3684",
    "title": "Maximize Sum of At Most K Distinct Elements",
    "titleSlug": "maximize-sum-of-at-most-k-distinct-elements",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 71.6021164782953,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3685",
    "title": "Subsequence Sum After Capping Elements",
    "titleSlug": "subsequence-sum-after-capping-elements",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 15.502354788069074,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3686",
    "title": "Number of Stable Subsequences",
    "titleSlug": "number-of-stable-subsequences",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 49.45390006371166,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3687",
    "title": "Library Late Fee Calculator",
    "titleSlug": "library-late-fee-calculator",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 96.58536585365853,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3688",
    "title": "Bitwise OR of Even Numbers in an Array",
    "titleSlug": "bitwise-or-of-even-numbers-in-an-array",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 79.8544808621838,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Bit Manipulation",
        "slug": "bit-manipulation"
      },
      {
        "name": "Simulation",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3689",
    "title": "Maximum Total Subarray Value I",
    "titleSlug": "maximum-total-subarray-value-i",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 58.22431256721833,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3690",
    "title": "Split and Merge Array Transformation",
    "titleSlug": "split-and-merge-array-transformation",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 44.18642615189977,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3691",
    "title": "Maximum Total Subarray Value II",
    "titleSlug": "maximum-total-subarray-value-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 11.269143464643852,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Heap (Priority Queue)",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3692",
    "title": "Majority Frequency Characters",
    "titleSlug": "majority-frequency-characters",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 67.14408555919815,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Counting",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3693",
    "title": "Climbing Stairs II",
    "titleSlug": "climbing-stairs-ii",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 63.28345881381239,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3694",
    "title": "Distinct Points Reachable After Substring Removal",
    "titleSlug": "distinct-points-reachable-after-substring-removal",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 52.51405495288621,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3695",
    "title": "Maximize Alternating Sum Using Swaps",
    "titleSlug": "maximize-alternating-sum-using-swaps",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 62.72455089820359,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3696",
    "title": "Maximum Distance Between Unequal Words in Array I",
    "titleSlug": "maximum-distance-between-unequal-words-in-array-i",
    "difficulty": "Easy",
    "paidOnly": true,
    "acRate": 87.04156479217605,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3697",
    "title": "Compute Decimal Representation",
    "titleSlug": "compute-decimal-representation",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 58.30028919829462,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Math",
        "slug": "math"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3698",
    "title": "Split Array With Minimum Difference",
    "titleSlug": "split-array-with-minimum-difference",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 25.911578495546735,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3699",
    "title": "Number of ZigZag Arrays I",
    "titleSlug": "number-of-zigzag-arrays-i",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 23.92460806764136,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Prefix Sum",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3700",
    "title": "Number of ZigZag Arrays II",
    "titleSlug": "number-of-zigzag-arrays-ii",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 30.148741418764303,
    "status": null,
    "freqBar": null,
    "topicTags": [
      {
        "name": "Math",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3701",
    "title": "Compute Alternating Sum",
    "titleSlug": "compute-alternating-sum",
    "difficulty": "Easy",
    "paidOnly": false,
    "acRate": 88.297466240397,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3702",
    "title": "Longest Subsequence With Non-Zero Bitwise XOR",
    "titleSlug": "longest-subsequence-with-non-zero-bitwise-xor",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 36.35883000157181,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3703",
    "title": "Remove K-Balanced Substrings",
    "titleSlug": "remove-k-balanced-substrings",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 31.358862287168108,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3704",
    "title": "Count No-Zero Pairs That Sum to N",
    "titleSlug": "count-no-zero-pairs-that-sum-to-n",
    "difficulty": "Hard",
    "paidOnly": false,
    "acRate": 10.663776953311539,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3705",
    "title": "Find Golden Hour Customers",
    "titleSlug": "find-golden-hour-customers",
    "difficulty": "Medium",
    "paidOnly": false,
    "acRate": 42.70650263620387,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "frontendQuestionId": "3706",
    "title": "Maximum Distance Between Unequal Words in Array II",
    "titleSlug": "maximum-distance-between-unequal-words-in-array-ii",
    "difficulty": "Medium",
    "paidOnly": true,
    "acRate": 80.95238095238095,
    "status": null,
    "freqBar": null,
    "topicTags": [],
    "hasSolution": false,
    "hasVideoSolution": false
  }
]